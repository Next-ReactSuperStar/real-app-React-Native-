{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { CarouselComponent } from \"../../../components/Carousel\";\n\nvar ShowDetailScreen = function ShowDetailScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      value = _ref.value;\n  var mapRef = useRef(null);\n  var initialPolygon = useRef({\n    polygons: [],\n    distance: 0,\n    lastLatLng: undefined,\n    initialLatLng: undefined,\n    centerLatLng: undefined\n  });\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMap = _useState2[0],\n      setShowMap = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapData = _useState4[0],\n      setMapData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isReady = _useState6[0],\n      setIsReady = _useState6[1];\n\n  var win = Dimensions.get('window');\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      markerNum = _useState8[0],\n      setMarkerNum = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      noteShow = _useState10[0],\n      setNoteShow = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      chooseMarker = _useState12[0],\n      setChooseMarker = _useState12[1];\n\n  var handleMapReady = useCallback(function () {\n    return mapRef.current && setIsReady(true);\n  }, []);\n  var data = route.params.data;\n\n  var _useState13 = useState({\n    latitude: 29.861145,\n    longitude: -95.44252,\n    latitudeDelta: 0.15,\n    longitudeDelta: 0.0421\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      initRegion = _useState14[0],\n      setInitRegion = _useState14[1];\n\n  useEffect(function () {\n    settingMapView();\n  }, [ShowDetailScreen]);\n\n  var settingMapView = function settingMapView() {\n    var camera;\n    return _regeneratorRuntime.async(function settingMapView$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(mapRef.current.getCamera());\n\n          case 2:\n            camera = _context.sent;\n\n            if (Platform.OS === 'ios') {\n              mapRef.current.animateCamera({\n                altitude: camera.altitude * 1.3\n              });\n            }\n\n            if (Platform.OS === 'android') {\n              mapRef.current.animateCamera({\n                zoom: camera.zoom + 2\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      padding: 20,\n      paddingBottom: 5,\n      backgroundColor: 'white'\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 30,\n      height: 30,\n      marginTop: 15\n    },\n    source: require(\"../../../assets/icons/IC_Back.png\")\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 10\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginTop: 15\n    },\n    source: showMap ? require(\"../../../assets/icons/Group.png\") : require(\"../../../assets/icons/Group_(2).png\")\n  }))), React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: {\n      padding: 20,\n      paddingTop: 0\n    }\n  }, React.createElement(CarouselComponent, {\n    layout: \"default\",\n    data: data.photosUrl\n  }), React.createElement(View, {\n    style: {\n      paddingLeft: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.homeTitleText2, {\n      color: '#000000',\n      paddingTop: 10\n    }]\n  }, \"Price\"), data.price ? React.createElement(Text, {\n    style: [styles.homeTitleText2, {\n      color: '#297EE4',\n      paddingTop: 10\n    }]\n  }, \"$\", data.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")) : null, React.createElement(Text, {\n    style: [styles.homeTitleText2, {\n      color: '#000000',\n      paddingTop: 10\n    }]\n  }, \"Info\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingTop: 10\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30,\n      marginRight: 10,\n      padding: 5\n    },\n    source: require(\"../../../assets/icons/IC_Bedroom.png\")\n  }), React.createElement(Text, {\n    style: styles.homeTitleText1\n  }, data.numBed, \"\\xA0Bads\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingTop: 10\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30,\n      marginRight: 10,\n      padding: 5\n    },\n    source: require(\"../../../assets/icons/IC_Bathroom.png\")\n  }), React.createElement(Text, {\n    style: styles.homeTitleText1\n  }, data.numBath, \"\\xA0Baths\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingTop: 10,\n      paddingBottom: 15\n    }\n  }, React.createElement(Text, {\n    style: [styles.homeTitleText2, {\n      color: '#000000'\n    }]\n  }, \"Location\"), React.createElement(Text, {\n    style: [styles.homeTitleText2, {\n      marginLeft: 'auto',\n      fontSize: 12,\n      color: '#000000',\n      paddingTop: 5\n    }]\n  }, data.address)), React.createElement(View, {\n    style: {\n      height: 130,\n      width: '100%',\n      borderRadius: 10\n    }\n  }, React.createElement(MapView, {\n    ref: mapRef,\n    style: {\n      flex: 1\n    },\n    onMapReady: handleMapReady,\n    showsMyLocationButton: false,\n    showsUserLocation: false,\n    zoomControlEnabled: true,\n    zoomEnabled: true,\n    zoomTapEnabled: false,\n    showsScale: false,\n    initialRegion: {\n      latitude: data.latitude,\n      longitude: data.longitude,\n      latitudeDelta: 0.15,\n      longitudeDelta: 0.0421\n    }\n  }, Platform.OS != 'web' && React.createElement(Marker, {\n    coordinate: {\n      latitude: data.latitude,\n      longitude: data.longitude\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 16,\n      height: 16,\n      backgroundColor: '#0A8ED955'\n    }\n  })))))))));\n};\n\nexport default ShowDetailScreen;\nvar styles = StyleSheet.create({\n  homeTitleText2: {\n    fontSize: 16,\n    fontWeight: '300',\n    color: '#ACB7C2',\n    marginRight: 10\n  },\n  homeTitleText1: {\n    fontSize: 12,\n    fontWeight: '300',\n    color: '#000000',\n    margin: 8\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  button: {\n    top: '10%',\n    right: '10%',\n    position: 'absolute',\n    backgroundColor: 'tomato',\n    padding: 16,\n    zIndex: 4,\n    borderRadius: 18\n  },\n  title: {\n    color: '#FFFFFF',\n    fontSize: 12\n  },\n  homeview: {\n    padding: 15,\n    paddingTop: 0,\n    paddingBottom: 0,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/screens/components/ShowDetailScreen/index.tsx"],"names":["React","useState","useCallback","useRef","useEffect","MapView","Marker","CarouselComponent","ShowDetailScreen","navigation","route","value","mapRef","initialPolygon","polygons","distance","lastLatLng","undefined","initialLatLng","centerLatLng","showMap","setShowMap","mapData","setMapData","isReady","setIsReady","win","Dimensions","get","markerNum","setMarkerNum","noteShow","setNoteShow","chooseMarker","setChooseMarker","handleMapReady","current","data","params","latitude","longitude","latitudeDelta","longitudeDelta","initRegion","setInitRegion","settingMapView","getCamera","camera","Platform","OS","animateCamera","altitude","zoom","styles","container","flexDirection","padding","paddingBottom","backgroundColor","goBack","width","height","marginTop","require","marginLeft","marginRight","flex","paddingTop","photosUrl","paddingLeft","homeTitleText2","color","price","toString","replace","homeTitleText1","numBed","numBath","fontSize","address","borderRadius","StyleSheet","create","fontWeight","margin","button","top","right","position","zIndex","title","homeview"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, Platform, Text, Image,Dimensions, ScrollView } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport MapView, { Marker } from 'react-native-maps'\r\nimport HomeSearchResult from '../homeSearch/HomeSearchResult';\r\nimport HomeSearchShowResult from '../homeSearch/HomeSearchShowResult';\r\nimport { NavigationProp } from '@react-navigation/native';\r\nimport HomeListItem from '../home/HomeListItem';\r\nimport { CarouselComponent } from \"../../../components/Carousel\";\r\nimport { DATA } from \"../../../utils\";\r\n\r\nconst ShowDetailScreen = ({ navigation, route, value }: {navigation: NavigationProp<any>,data:any,route:any, value:any}) => {\r\n    \r\n    const mapRef = useRef<any>(null);\r\n\r\n    const initialPolygon:any = useRef({\r\n        polygons: [],\r\n        distance: 0,\r\n        lastLatLng: undefined,\r\n        initialLatLng: undefined,\r\n        centerLatLng: undefined,\r\n    });\r\n\r\n    const [showMap, setShowMap]=useState<boolean>(true)\r\n    const [mapData, setMapData]=useState<any>([])\r\n    const [isReady, setIsReady] = useState<boolean>(false);\r\n    const win = Dimensions.get('window');\r\n    const [markerNum, setMarkerNum] = useState<any>(0);\r\n    const [noteShow, setNoteShow] = useState<boolean>(false);\r\n    const [chooseMarker, setChooseMarker] = useState<boolean>(false);\r\n    const handleMapReady = useCallback(() => mapRef.current && setIsReady(true), []);\r\n    const { data } = route.params;\r\n\r\n    const [initRegion, setInitRegion] = useState({\r\n        latitude: 29.861145,\r\n        longitude: -95.44252,\r\n        latitudeDelta: 0.15,\r\n        longitudeDelta: 0.0421,\r\n    });\r\n// console.log('data::',data)\r\n    useEffect(() => {\r\n        settingMapView()\r\n      },[ShowDetailScreen]);\r\n\r\n    const settingMapView = async() => {\r\n        const camera = await mapRef.current.getCamera();\r\n        if (Platform.OS === 'ios') {\r\n            mapRef.current.animateCamera({ altitude: camera.altitude * 1.3 });\r\n        }\r\n\r\n        if (Platform.OS === 'android') {\r\n            mapRef.current.animateCamera({ zoom: camera.zoom + 2 });\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={{flexDirection:'row',padding:20,paddingBottom:5,backgroundColor:'white'}}>\r\n                <TouchableOpacity  onPress={() => navigation.goBack()}>\r\n                    {/*  */}\r\n                    <Image style={{width:30,height:30,marginTop:15,}} source={require('../../../assets/icons/IC_Back.png')}/>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={{marginLeft:'auto',marginRight:10}}>\r\n                    <Image style={{width:20,height:20,marginTop:15}} source={showMap?require('../../../assets/icons/Group.png'):require('../../../assets/icons/Group_(2).png')}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={{flex: 1}}>\r\n                <ScrollView>\r\n                    <View style={{padding:20,paddingTop:0}}>\r\n                    <CarouselComponent layout={\"default\"} data={data.photosUrl}/>\r\n                    <View style={{paddingLeft:15}}>\r\n                        <Text style={[styles.homeTitleText2,{color:'#000000',paddingTop:10}]}>Price</Text>\r\n\r\n                        {data.price?<Text style={[styles.homeTitleText2,{color:'#297EE4',paddingTop:10}]}>${data.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</Text>:null}\r\n\r\n                        <Text style={[styles.homeTitleText2,{color:'#000000',paddingTop:10}]}>Info</Text>\r\n                        <View style={{flexDirection:'row',paddingTop:10}}>\r\n                            <Image style={{height:30,width:30,marginRight:10,padding:5}}source={require('../../../assets/icons/IC_Bedroom.png')}/>\r\n                            <Text style={styles.homeTitleText1}>{data.numBed}&nbsp;Bads</Text>\r\n                        </View>\r\n                        <View style={{flexDirection:'row',paddingTop:10}}>\r\n                            <Image style={{height:30,width:30,marginRight:10,padding:5}}source={require('../../../assets/icons/IC_Bathroom.png')}/>\r\n                            <Text style={styles.homeTitleText1}>{data.numBath}&nbsp;Baths</Text>\r\n                        </View>\r\n                        <View style={{flexDirection:'row',paddingTop:10,paddingBottom:15}}>\r\n                            <Text style={[styles.homeTitleText2,{color:'#000000'}]}>Location</Text>\r\n                            <Text style={[styles.homeTitleText2,{marginLeft:'auto',fontSize:12,color:'#000000',paddingTop:5}]}>{data.address}</Text>\r\n                        </View>\r\n                        <View style={{ height:130,width:'100%',borderRadius:10 }}>\r\n                            <MapView\r\n                                ref={mapRef}\r\n                                style={{flex:1}}\r\n                                onMapReady={handleMapReady}\r\n                                // provider={'google'}\r\n                                showsMyLocationButton={false}\r\n                                showsUserLocation={false}\r\n                                zoomControlEnabled={true}\r\n                                zoomEnabled={true}\r\n                                zoomTapEnabled={false}\r\n                                showsScale={false}\r\n                                initialRegion={{latitude:data.latitude,\r\n                                                longitude:data.longitude,\r\n                                                latitudeDelta:0.15,\r\n                                                longitudeDelta:0.0421}}\r\n                            >\r\n                                { Platform.OS != 'web' &&<Marker coordinate={{ latitude:data.latitude, longitude:data.longitude }} >\r\n                                    <View style={{width:16,height:16,backgroundColor:'#0A8ED955'}}>\r\n\r\n                                    </View>\r\n                                    {/* <Image source={require('../../../assets/icons/maker_custom.png')} style={{width: 39, height: 84 }} resizeMode=\"contain\"></Image> */}\r\n                                </Marker>}\r\n                            </MapView>\r\n                        </View>\r\n                    </View>\r\n                    </View>\r\n                </ScrollView>\r\n\r\n                \r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ShowDetailScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    homeTitleText2:{fontSize:16,fontWeight:'300',color:'#ACB7C2',marginRight:10},\r\n    homeTitleText1:{fontSize:12,fontWeight:'300',color:'#000000',margin:8},\r\n\r\n\r\n\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor:'white'\r\n    },\r\n    button: {\r\n        top: '10%',\r\n        right: '10%',\r\n        position: 'absolute',\r\n        backgroundColor: 'tomato',\r\n        padding: 16,\r\n        zIndex: 4,\r\n        borderRadius: 18,\r\n    },\r\n    title: {\r\n        color: '#FFFFFF',\r\n        fontSize: 12,\r\n    },\r\n    homeview:{\r\n        padding:15,\r\n        paddingTop:0,\r\n        paddingBottom:0,\r\n        backgroundColor:'white'\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}