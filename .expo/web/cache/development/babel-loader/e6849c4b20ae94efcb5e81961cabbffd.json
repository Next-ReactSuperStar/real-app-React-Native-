{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport { styles } from \"./styles\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"../../components/Themed\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Auth from '@aws-amplify/auth';\n\nvar Welcome = function Welcome(_ref) {\n  var navigation = _ref.navigation;\n  useEffect(function () {\n    Auth.currentAuthenticatedUser().then(function _callee(user) {\n      var jwtToken;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!user) {\n                _context.next = 5;\n                break;\n              }\n\n              jwtToken = user.signInUserSession.accessToken.jwtToken;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@authtoken', jwtToken));\n\n            case 4:\n              navigation.navigate('Root', {\n                name: user.username\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function () {});\n  }, []);\n\n  var onPress = function onPress() {\n    navigation.navigate('Login');\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.imageWrap\n  }, React.createElement(Image, {\n    source: require(\"../../assets/images/welcome.png\"),\n    style: styles.image\n  })), React.createElement(View, {\n    style: styles.textView\n  }, React.createElement(View, {\n    style: styles.subTextView\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Find Your Best Home\"), React.createElement(Text, {\n    style: styles.subText\n  }, \"Lolaux is your assistant, provides many suggestions of all kind of real estate based on the our questionnaire.\")), React.createElement(View, {\n    style: styles.btnView\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    style: _objectSpread(_objectSpread({}, styles.buttonContainer), {}, {\n      width: '100%'\n    })\n  }, React.createElement(Text, {\n    style: styles.btnStyle,\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"getstarted\"\n  }, \"GET STARTED\"))), React.createElement(View, {\n    style: styles.subTextView\n  }, React.createElement(Text, {\n    style: styles.loginTitle\n  }, \"Already have an account?\\xA0\", React.createElement(Text, {\n    onPress: onPress,\n    style: styles.login_btnStyle\n  }, \"Log in\")))));\n};\n\nexport default Welcome;","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/New folder/screens/authScreens/WelcomeScreen.tsx"],"names":["React","useEffect","styles","Text","AsyncStorage","Auth","Welcome","navigation","currentAuthenticatedUser","then","user","jwtToken","signInUserSession","accessToken","setItem","navigate","name","username","catch","onPress","container","imageWrap","require","image","textView","subTextView","title","subText","btnView","buttonContainer","width","btnStyle","loginTitle","login_btnStyle"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,SAASC,MAAT;;;;AAGA,SAASC,IAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAyD;AAAA,MAAtDC,UAAsD,QAAtDA,UAAsD;AAExEN,EAAAA,SAAS,CAAC,YAAM;AACfI,IAAAA,IAAI,CAACG,wBAAL,GACEC,IADF,CACO,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDA,IADC;AAAA;AAAA;AAAA;;AAEEC,cAAAA,QAFF,GAEaD,IAAI,CAACE,iBAAL,CAAuBC,WAAvB,CAAmCF,QAFhD;AAAA;AAAA,+CAGEP,YAAY,CAACU,OAAb,CAAqB,YAArB,EAAmCH,QAAnC,CAHF;;AAAA;AAIJJ,cAAAA,UAAU,CAACQ,QAAX,CAAoB,MAApB,EAA4B;AAAEC,gBAAAA,IAAI,EAAEN,IAAI,CAACO;AAAb,eAA5B;;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADP,EAOIC,KAPJ,CAOU,YAAM,CAEd,CATF;AAUA,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACrBZ,IAAAA,UAAU,CAACQ,QAAX,CAAoB,OAApB;AACA,GAFD;;AAIA,SACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACkB;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KACC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEC,OAAO,mCAAtB;AAA2D,IAAA,KAAK,EAAEpB,MAAM,CAACqB;AAAzE,IADD,CADD,EAIC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB;AAApB,2BADD,EAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACyB;AAApB,sHAFD,CADD,EAKC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAAC0B;AAApB,KACC,oBAAC,gBAAD;AACC,IAAA,OAAO,EAAE;AAAA,aAAMrB,UAAU,CAACQ,QAAX,CAAoB,OAApB,CAAN;AAAA,KADV;AAEC,IAAA,KAAK,kCAAOb,MAAM,CAAC2B,eAAd;AAA+BC,MAAAA,KAAK,EAAE;AAAtC;AAFN,KAIC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5B,MAAM,CAAC6B,QAApB;AAA8B,IAAA,iBAAiB,EAAC,QAAhD;AAAyD,IAAA,kBAAkB,EAAC;AAA5E,mBAJD,CADD,CALD,EAaC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7B,MAAM,CAACuB;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAAC8B;AAApB,qCACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEb,OAAf;AAAwB,IAAA,KAAK,EAAEjB,MAAM,CAAC+B;AAAtC,cADD,CADD,CAbD,CAJD,CADD;AA0BA,CA7CD;;AA+CA,eAAe3B,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { styles } from './styles'\nimport { Image, View, TouchableOpacity } from 'react-native';\nimport { NavigationProp } from '@react-navigation/native';\nimport { Text } from '../../components/Themed';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Auth from '@aws-amplify/auth';\n\nconst Welcome = ({ navigation }: { navigation: NavigationProp<any> }) => {\n\n\tuseEffect(() => {\n\t\tAuth.currentAuthenticatedUser()\n\t\t\t.then(async (user) => {\n\t\t\t\tif (user) {\n\t\t\t\t\tconst jwtToken = user.signInUserSession.accessToken.jwtToken;\n\t\t\t\t\tawait AsyncStorage.setItem('@authtoken', jwtToken);\n\t\t\t\t\tnavigation.navigate('Root', { name: user.username });\n\t\t\t\t}\n\t\t\t}).catch(() => {\n\t\t\t\t// console.log('err signing in');\n\t\t\t});\n\t}, []);\n\n\tconst onPress = () => {\n\t\tnavigation.navigate('Login')\n\t}\n\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<View style={styles.imageWrap}>\n\t\t\t\t<Image source={require('../../assets/images/welcome.png')} style={styles.image} />\n\t\t\t</View>\n\t\t\t<View style={styles.textView}>\n\t\t\t\t<View style={styles.subTextView}>\n\t\t\t\t\t<Text style={styles.title}>Find Your Best Home</Text>\n\t\t\t\t\t<Text style={styles.subText}>Lolaux is your assistant, provides many suggestions of all kind of real estate based on the our questionnaire.</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.btnView}>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => navigation.navigate('Login')}\n\t\t\t\t\t\tstyle={{ ...styles.buttonContainer, width: '100%', }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={styles.btnStyle} accessibilityRole='button' accessibilityLabel='getstarted'>GET STARTED</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t\t<View style={styles.subTextView}>\n\t\t\t\t\t<Text style={styles.loginTitle}>Already have an account?&nbsp;\n\t\t\t\t\t\t<Text onPress={onPress} style={styles.login_btnStyle}>Log in</Text>\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nexport default Welcome\n"]},"metadata":{},"sourceType":"module"}