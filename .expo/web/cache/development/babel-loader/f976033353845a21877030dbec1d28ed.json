{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, View } from \"../../../components/Themed\";\nexport default function FavoriteScreen(_ref) {\n  var navigation = _ref.navigation;\n  var win = Dimensions.get('window');\n  var items = [{\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }, {\n    name: 'Orchad House',\n    price: 'Rp. 2.000.000.000 / Year',\n    bedroomNum: '5 Bedroom',\n    bathroomNum: '2 Bathroom'\n  }];\n  return React.createElement(View, {\n    style: styles.homeview\n  }, React.createElement(View, {\n    style: {\n      flex: 2,\n      flexDirection: 'row',\n      width: win.width - 60,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"My Favorites\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 15,\n      width: 40,\n      marginLeft: 'auto'\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('FavoriteDetail');\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginRight: 5\n    },\n    source: require(\"../../../assets/icons/Group_(2).png\")\n  })), React.createElement(TouchableOpacity, null, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginRight: 25\n    },\n    source: require(\"../../../assets/icons/sliders.png\")\n  })))), React.createElement(View, {\n    style: {\n      flex: 18,\n      backgroundColor: 'white',\n      width: '99%'\n    }\n  }, React.createElement(ScrollView, null)), React.createElement(View, {\n    style: {\n      height: 70\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  homeview: {\n    padding: 20,\n    flex: 1\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '600',\n    paddingRight: '15%'\n  }\n});","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/New folder/screens/tabScreens/favorite/FavoriteScreen.tsx"],"names":["React","Text","View","FavoriteScreen","navigation","win","Dimensions","get","items","name","price","bedroomNum","bathroomNum","styles","homeview","flex","flexDirection","width","marginLeft","marginRight","title","marginTop","navigate","height","require","backgroundColor","StyleSheet","create","padding","fontSize","fontWeight","paddingRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Image, Dimensions, ScrollView, TouchableOpacity} from 'react-native';\r\n\r\nimport { Text, View } from '../../../components/Themed';\r\nimport { RootTabScreenProps } from '../../../types';\r\n\r\nimport HomePopularItem from '../../components/home/HomePopularItem';\r\n\r\nexport default function FavoriteScreen({ navigation }: RootTabScreenProps<'Favorite'>) {\r\n  const win = Dimensions.get('window');\r\n  const items = [\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'},\r\n    {name:'Orchad House',price:'Rp. 2.000.000.000 / Year',bedroomNum:'5 Bedroom',bathroomNum:'2 Bathroom'}\r\n  ]\r\n  return (\r\n    <View style={styles.homeview}>\r\n      <View style={{flex:2,flexDirection:'row',width:win.width-60,marginLeft:'auto',marginRight:'auto'}}>\r\n        <Text style={styles.title}>My Favorites</Text>\r\n        <View style={{flexDirection:'row',marginTop:15,width:40,marginLeft:'auto'}}>\r\n          <TouchableOpacity onPress={()=>{navigation.navigate('FavoriteDetail')}}>\r\n            <Image style={{width:20,height:20,marginRight:5}} source={require('../../../assets/icons/Group_(2).png')}/>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity>\r\n            <Image style={{width:20,height:20,marginRight:25}} source={require('../../../assets/icons/sliders.png')}/>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <View style={{flex:18,backgroundColor:'white',width:'99%'}}>\r\n        <ScrollView>\r\n          {/* {items.map((item,index)=>{return<HomePopularItem key={index} indexData={item}/>})} */}\r\n        </ScrollView>\r\n      </View>\r\n     <View style={{height:70}}>\r\n\r\n     </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  homeview:{\r\n    padding:20,\r\n    flex:1\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: '600',\r\n    paddingRight:'15%'\r\n  },\r\n});\r\n\r\n// import React, { useState, useCallback, useRef, useEffect } from 'react';\r\n// import { StyleSheet, View, TouchableOpacity, Platform, Text, Image,Dimensions, ScrollView } from 'react-native';\r\n// // import MapView, { ILocationProps, IDrawResult, TouchPoint, Marker,PROVIDER_GOOGLE } from '../component';\r\n// import { TextInput } from 'react-native-paper';\r\n// import MapView, {Marker} from 'react-native-maps';\r\n// // import { MarkerLocation } from '../assets';\r\n// // import AnimatedPolygon from '../components/polygon';\r\n// import HomeSearchResult from '../../components/homeSearch/HomeSearchResult';\r\n// import HomeSearchShowResult from '../../components/homeSearch/HomeSearchShowResult';\r\n// import { RootTabScreenProps } from '../../../types';\r\n// import axios from 'axios'\r\n// // import {fetchApi} from '../../service'\r\n// import HomePopularItem from '../../components/home/HomePopularItem';\r\n// import HomeLookingImage from '../../components/home/HomeLookingImage';\r\n// import LocationLookingImage from '../../components/home/LocationLookingImage';\r\n// import HomeNearItem from '../../components/home/HomeNearItem';\r\n// import HomeNearItem_1 from '../../components/home/HomeNearItem_1';\r\n// import { menuBtn } from '../../../constants/menuBtn';\r\n\r\n// const FavoriteScreen = ({ navigation }: RootTabScreenProps<any>) => {\r\n    \r\n//     const mapRef = useRef<any>(null);\r\n\r\n//     const initialPolygon:any = useRef({\r\n//         polygons: [],\r\n//         distance: 0,\r\n//         lastLatLng: undefined,\r\n//         initialLatLng: undefined,\r\n//         centerLatLng: undefined,\r\n//     });\r\n\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers()\r\n//       },[FavoriteScreen]);\r\n\r\n//     const [showMap, setShowMap]=useState<boolean>(false)\r\n//     const [mapData, setMapData]=useState<any>([])\r\n//     const [modePolygon, setPolygonCreated] = useState<boolean>(false);\r\n\r\n//     const [isActiveDraw, setDrawMode] = useState<boolean>(false);\r\n//     const [isReady, setIsReady] = useState<boolean>(false);\r\n//     // const [points, setPoints] = useState<TouchPoint[]>([]);\r\n//     const win = Dimensions.get('window');\r\n//     // const [polygon, setPolygon] = useState<IDrawResult>(initialPolygon.current);\r\n//     const [markerNum, setMarkerNum] = useState<any>(0);\r\n//     const [noteShow, setNoteShow] = useState<boolean>(false);\r\n//     const [chooseMarker, setChooseMarker] = useState<boolean>(false);\r\n//     const [selectedItem, setSelectedItem] = useState<any>(0);\r\n//     const handleMapReady = useCallback(() => mapRef.current && setIsReady(true), []);\r\n\r\n//     const [initRegion, setInitRegion] = useState({\r\n//         latitude: 29.861145,\r\n//         longitude: -95.44252,\r\n//         latitudeDelta: 0.15,\r\n//         longitudeDelta: 0.0421,\r\n//     });\r\n//     // const [text, onChangeText] = React.useState('');\r\n//     // const [number, onChangeNumber] = React.useState(null);\r\n//     // const [getBtninfo, onBtnPress] = React.useState(null)\r\n    \r\n//     // const [getMenuBtn, setMenuBtn] = React.useState(menuBtn)\r\n  \r\n//     // const setMenubutton=(data:any)=>{\r\n//     //   menuBtn.forEach((item:any,index:any) => {\r\n//     //     getMenuBtn[index]={title:item.title, state:index==data?true:false}\r\n//     //   })\r\n//     //   setMenuBtn([...getMenuBtn])\r\n//     // }\r\n\r\n\r\n//     const fetchUsers = async () => {\r\n\r\n//         // console.log('fetch mapdata start:-----',mapData)\r\n//         await fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/089c839e-5a55-471f-ac5d-62dba5f4fa65/getFilteredListingsAtLocation?latitude=29.858924&longitude=-95.587894&radius=0.02',\r\n//         {\r\n//             method: 'get',\r\n//             headers: {\r\n//                 'Content-Type': \"application/json\",\r\n//                 'password': 'passwordAUA'\r\n//             },\r\n\r\n//         })\r\n//         .then((response) => response.json())\r\n//         .then((responseJson) => {\r\n//             console.log('responseJson:----',responseJson.data)\r\n//             // responseJson.data && setMapData(responseJson.data)\r\n//         }).catch((error) => {\r\n//         })\r\n\r\n//       };\r\n\r\n//     // const handleRemovePolygon = useCallback(() => {\r\n//     //     setPolygon(initialPolygon.current);\r\n//     //     setPolygonCreated(false);\r\n//     // }, []);\r\n\r\n//     // const handleClear = useCallback(() => {\r\n//     //     setPolygon(initialPolygon.current);\r\n//     //     setPolygonCreated(false);\r\n//     //     setPoints([]);\r\n//     // }, []);\r\n\r\n//     // const handleIsDraw = useCallback(() => {\r\n//     //     setChooseMarker(false)\r\n//     //     if (!mapRef.current) return;\r\n//     //     if (!isActiveDraw) {\r\n//     //         handleClear()\r\n//     //     }\r\n//     //     setDrawMode((prevMode) => !prevMode);\r\n//     // }, [handleClear, isActiveDraw]);\r\n\r\n//     // const handleCanvasEndDraw = useCallback((locations) => {\r\n           \r\n//     //     setNoteShow(true)\r\n//     //     zoomCenterPolygon(locations.centerLatLng).then(() => {\r\n//     //         setPolygon(locations);\r\n//     //         setPolygonCreated(true);\r\n//     //     });\r\n//     //     setDrawMode((prevMode) => !prevMode);\r\n//     //     console.log('locations:',noteShow)\r\n//     // }, []);\r\n\r\n//     // const zoomCenterPolygon = async (center: ILocationProps) => {\r\n//     //     if (!mapRef.current) return;\r\n//     //     const camera = await mapRef.current.getCamera();\r\n//     //     if (Platform.OS === 'ios') {\r\n//     //         mapRef.current.animateCamera({\r\n//     //             center: center,\r\n//     //         });\r\n//     //     }\r\n//     //     if (Platform.OS === 'android') {\r\n//     //     }\r\n//     // };\r\n\r\n//     const zoomOut = async () => {\r\n//         if (!mapRef.current) return false;\r\n\r\n//         const camera = await mapRef.current.getCamera();\r\n//         if (Platform.OS === 'ios') {\r\n//             mapRef.current.animateCamera({ altitude: camera.altitude * 0.9 });\r\n//         }\r\n\r\n//         if (Platform.OS === 'android') {\r\n//             mapRef.current.animateCamera({ zoom: camera.zoom - 1 });\r\n//         }\r\n//         setChooseMarker(false)\r\n//     };\r\n\r\n//     const zoomIn = async () => {\r\n//         const camera = await mapRef.current.getCamera();\r\n//         if (Platform.OS === 'ios') {\r\n//             mapRef.current.animateCamera({ altitude: camera.altitude * 1.1 });\r\n//         }\r\n\r\n//         if (Platform.OS === 'android') {\r\n//             mapRef.current.animateCamera({ zoom: camera.zoom + 1 });\r\n//         }\r\n//         setChooseMarker(false)\r\n//     }\r\n\r\n//     const markerClick = (num:any) => {\r\n//         setMarkerNum(num)\r\n//         setChooseMarker(true)\r\n//     }\r\n\r\n//     const hasMarkerClose = useCallback((item,index)=>\r\n//       <Marker key={index} coordinate={mapData[index]} onPress={() => markerClick(index)}>\r\n//         </Marker>,[])\r\n\r\n//     // const handlePolygon = useCallback(\r\n//     //     (item, index) => <AnimatedPolygon key={index} coordinates={polygon.polygons} />,\r\n//     //     [polygon.polygons],\r\n//     // );\r\n\r\n//     // const onChangePoints = useCallback((value) => {\r\n//     //     setPoints(value);\r\n//     // }, []);\r\n\r\n//     const closeNote = () => {\r\n//         setNoteShow(false)\r\n//     }\r\n\r\n//     const chooseItem = (num:any) =>{\r\n//       console.log(num)\r\n//       setShowMap(true)\r\n//       setChooseMarker(true)\r\n//       setInitRegion({latitude:mapData[num].latitude,\r\n//                     longitude:mapData[num].longitude,\r\n//                     latitudeDelta:initRegion.latitudeDelta,\r\n//                     longitudeDelta:initRegion.longitudeDelta})\r\n//       setSelectedItem(num)\r\n//     }\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             <View style={{flexDirection:'row',padding:20,paddingBottom:5,backgroundColor:'white'}}>\r\n//               <Text style={styles.title}>My Favorites</Text>\r\n//               <View style={{flexDirection:'row',marginLeft:'auto'}}>\r\n//                 <TouchableOpacity style={{}} onPress={() => setShowMap(!showMap)}>\r\n//                     <Image style={{width:20,height:20,marginTop:15,marginLeft:10,marginRight:10}} source={showMap?require('../../../assets/icons/Group.png'):require('../../../assets/icons/Group_(2).png')}/>\r\n//                 </TouchableOpacity>\r\n//                 <TouchableOpacity>\r\n//                   <Image style={{width:20,height:20,marginTop:15,marginRight:5}} source={require('../../../assets/icons/sliders.png')}/>\r\n//                 </TouchableOpacity>\r\n//               </View>\r\n//             </View>\r\n//             <View style={{flex: 1}}>\r\n//                 {showMap?<View style={{flex: 1}}>\r\n//                     <MapView\r\n//                         ref={mapRef}\r\n//                         style={{ flex: 1 }}\r\n//                         // points={points}\r\n//                         // widthLine={5}\r\n//                         // onEndDraw={handleCanvasEndDraw}\r\n//                         // isDrawMode={isActiveDraw}\r\n//                         onMapReady={handleMapReady}\r\n//                         // onStartDraw={handleClear}\r\n//                         // createdPolygon={modePolygon}\r\n//                         // onChangePoints={onChangePoints}\r\n//                         // backgroundCanvas={'rgba(0, 0, 0, 0.0)'}\r\n//                         provider={'google'}\r\n//                         showsMyLocationButton={true}\r\n//                         showsUserLocation={true}\r\n//                         zoomControlEnabled={true}\r\n//                         zoomEnabled={true}\r\n//                         zoomTapEnabled={true}\r\n//                         showsScale={true}\r\n//                         initialRegion={initRegion}\r\n//                     >\r\n//                       {mapData.map((item:any, index:any)=><Marker key={index}\r\n//                             coordinate={{latitude: item.latitude, longitude: item.longitude}}\r\n//                             onPress={() => markerClick(index)}\r\n//                             >\r\n//                           <Image source={require('../../../assets/icons/maker_custom.png')} style={{width: 39, height: 84 }} resizeMode=\"contain\"></Image>\r\n//                         </Marker>)\r\n//                       }\r\n//                         {/* {\r\n//                         isReady &&\r\n//                             modePolygon &&\r\n//                             polygon.polygons &&\r\n//                             polygon.polygons.length > 0 && (\r\n//                                 <> */}\r\n//                                     {mapData.map(hasMarkerClose)}\r\n//                                     {/* {polygon.polygons.map(handlePolygon)} */}\r\n//                                 {/* </>\r\n//                             ) \r\n//                             } */}\r\n//                     </MapView>\r\n//                     <View style={{position:'absolute',top:20,right:20,backgroundColor:'white',borderRadius:30}}>\r\n//                         <View style={{padding:5,paddingTop:5,paddingBottom:5}}>\r\n//                             <TouchableOpacity style={{borderRadius:30}} onPress={zoomIn}>\r\n//                                 <Image style={{width:35,height:35,borderRadius:30}} source={ require('../../../assets/icons/Vector_(7).png')}/>\r\n//                             </TouchableOpacity> \r\n//                         </View>\r\n//                         <View style={{padding:5,paddingTop:5,paddingBottom:13}}>\r\n//                             <TouchableOpacity style={{borderRadius:30}} onPress={zoomOut}>\r\n//                                 <Image style={{width:35,height:20,borderRadius:30}} source={require('../../../assets/icons/Vector_(8).png')}/>\r\n//                             </TouchableOpacity>\r\n//                         </View>\r\n//                     </View>\r\n//                     <View style={{position:'absolute',top:110,right:20}}>\r\n//                         <TouchableOpacity style={{padding:8,backgroundColor:'white',borderRadius:30}}>\r\n//                             <Image style={{width:28,height:28}} source={ require('../../../assets/icons/Group_(3).png')}/>\r\n//                         </TouchableOpacity>\r\n//                     </View>\r\n//                     {/* <View style={{position:'absolute',top:163,right:20,borderRadius:40}}>\r\n//                         <TouchableOpacity onPress={handleIsDraw}>\r\n//                             {isActiveDraw ? (\r\n//                                 <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular_(1).png')}/>\r\n//                             ) : (\r\n//                                 <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular.png')}/>\r\n//                             )}\r\n                            \r\n//                         </TouchableOpacity>\r\n//                     </View> */}\r\n//                     <View style={{position:'absolute',marginLeft:win.width/2-130,marginTop:(win.height-60)/4}}>\r\n//                       {chooseMarker && <LocationLookingImage indexData={mapData[selectedItem]}></LocationLookingImage>  }\r\n//                     </View>\r\n//                     <View style={{width:win.width-30,marginLeft:15,position:'absolute',bottom:90}}>\r\n//                         {noteShow && <HomeSearchShowResult indexData={{resultNum:mapData.length}} closeNote={closeNote}/>}\r\n//                     </View>\r\n//                 </View>\r\n//                 :\r\n\r\n//                 <View style={styles.homeview}>\r\n//                     <View style={{flex:18,backgroundColor:'white',width:'99%'}}>\r\n//                       <ScrollView>\r\n//                         {mapData.map((item:any,index:any)=>{return<HomePopularItem key={index} indexData={item} num={index} chooseItem={()=>chooseItem(index)}/>})}\r\n//                       </ScrollView>\r\n//                     </View>\r\n//                   <View style={{height:95}}>\r\n\r\n//                   </View>\r\n//                 </View>}\r\n//             </View>\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default FavoriteScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//     },\r\n//     button: {\r\n//         top: '10%',\r\n//         right: '10%',\r\n//         position: 'absolute',\r\n//         backgroundColor: 'tomato',\r\n//         padding: 16,\r\n//         zIndex: 4,\r\n//         borderRadius: 18,\r\n//     },\r\n//     title: {\r\n//       fontSize: 28,\r\n//       fontWeight: '600',\r\n//       paddingRight:'15%',\r\n//       color:'black'\r\n//     },\r\n//     homeview:{\r\n//       flex:1,\r\n//         // padding:20,\r\n//         // paddingTop:0,\r\n//         // paddingBottom:0,\r\n//         backgroundColor:'white'\r\n//     },\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}