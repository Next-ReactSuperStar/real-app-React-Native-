{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport WelcomeScreen from \"../screens/authScreens/WelcomeScreen\";\nimport LoginScreen from \"../screens/authScreens/LoginScreen\";\nimport ForgotPassScreen from \"../screens/authScreens/ForgotPassScreen\";\nimport EnterCodeScreen from \"../screens/authScreens/EnterCodeScreen\";\nimport CreatePasswordScreen from \"../screens/authScreens/CreatePasswordScreen\";\nimport RegisterScreen from \"../screens/authScreens/RegisterScreen\";\nimport QuestionStartScreen from \"../screens/questionScreens/QuestionStart\";\nimport QuestionGenderScreen from \"../screens/questionScreens/QuestionGender\";\nimport QuestionAgeScreen from \"../screens/questionScreens/QuestionAge\";\nimport QuestionIdScreen from \"../screens/questionScreens/QuestionId\";\nimport SearchScreen from \"../screens/tabScreens/homesearch/SearchScreen\";\nimport UserScreen from \"../screens/tabScreens/userscreen/UserScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport FeedScreen from \"../screens/tabScreens/feedscreen/FeedScreen\";\nimport FavoriteScreen from \"../screens/tabScreens/favorite/FavoriteScreen\";\nimport FavoriteDetailScreen from \"../screens/tabScreens/favorite/FavoriteDetailScreen\";\nimport QuestionnaireScreen from \"../screens/tabScreens/userscreen/Questionnaire/QuestionnaireScreen\";\nimport ShowDetailScreen from \"../screens/tabScreens/homesearch/ShowDetailScreen\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme\n  }, React.createElement(RootNavigator, null));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Welcome\",\n    component: WelcomeScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ForgotPass\",\n    component: ForgotPassScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EnterCode\",\n    component: EnterCodeScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"CreatePassword\",\n    component: CreatePasswordScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"QuestionStart\",\n    component: QuestionStartScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"QuestionGender\",\n    component: QuestionGenderScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"QuestionAge\",\n    component: QuestionAgeScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"QuestionId\",\n    component: QuestionIdScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Questionnaire\",\n    component: QuestionnaireScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ShowDetail\",\n    component: ShowDetailScreen,\n    options: {\n      headerShown: false\n    }\n  }));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    screenOptions: {\n      tabBarStyle: {\n        marginHorizontal: 15,\n        marginBottom: 15,\n        height: 76,\n        borderRadius: 25,\n        position: 'absolute'\n      },\n      tabBarShowLabel: false\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(TabBarIcon, {\n          name: \"email-search\",\n          color: color\n        });\n      },\n      headerShown: false\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Feed\",\n    component: FeedScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(TabBarIcon, {\n          name: \"cards\",\n          color: color\n        });\n      },\n      headerShown: false\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Favorite\",\n    component: FavoriteStack,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(TabBarIcon, {\n          name: \"heart\",\n          color: color\n        });\n      },\n      headerShown: false\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"User\",\n    component: UserScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color;\n        return React.createElement(TabBarIcon, {\n          name: \"account\",\n          color: color\n        });\n      },\n      headerShown: false\n    }\n  }));\n}\n\nvar Favorite_Stack = createNativeStackNavigator();\n\nfunction FavoriteStack() {\n  return React.createElement(Favorite_Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    }\n  }, React.createElement(Favorite_Stack.Screen, {\n    name: \"FavoritePage\",\n    component: FavoriteScreen\n  }), React.createElement(Favorite_Stack.Screen, {\n    name: \"FavoriteDetail\",\n    component: FavoriteDetailScreen\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(MaterialCommunityIcons, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/map/navigation/index.tsx"],"names":["MaterialCommunityIcons","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","useColorScheme","WelcomeScreen","LoginScreen","ForgotPassScreen","EnterCodeScreen","CreatePasswordScreen","RegisterScreen","QuestionStartScreen","QuestionGenderScreen","QuestionAgeScreen","QuestionIdScreen","SearchScreen","UserScreen","LinkingConfiguration","FeedScreen","FavoriteScreen","FavoriteDetailScreen","QuestionnaireScreen","ShowDetailScreen","Navigation","colorScheme","Stack","RootNavigator","headerShown","BottomTabNavigator","BottomTab","tabBarStyle","marginHorizontal","marginBottom","height","borderRadius","position","tabBarShowLabel","tabBarIcon","color","FavoriteStack","Favorite_Stack","TabBarIcon","props"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport useColorScheme from '../hooks/useColorScheme';\n\nimport WelcomeScreen from '../screens/authScreens/WelcomeScreen';\n\n// ****************** Auth ***************************\nimport LoginScreen from '../screens/authScreens/LoginScreen';\nimport ForgotPassScreen from '../screens/authScreens/ForgotPassScreen';\nimport EnterCodeScreen from '../screens/authScreens/EnterCodeScreen';\nimport CreatePasswordScreen from '../screens/authScreens/CreatePasswordScreen';\nimport RegisterScreen from '../screens/authScreens/RegisterScreen';\n\n\n// ****************** Question ***************************\nimport QuestionStartScreen from '../screens/questionScreens/QuestionStart';\nimport QuestionGenderScreen from '../screens/questionScreens/QuestionGender';\nimport QuestionAgeScreen from '../screens/questionScreens/QuestionAge';\nimport QuestionIdScreen from '../screens/questionScreens/QuestionId';\n\n// ****************** TAB bar **********************\n// import HomeScreen from '../screens/tabScreens/homescreen/HomeScreen';\nimport SearchScreen from '../screens/tabScreens/homesearch/SearchScreen';\nimport UserScreen from '../screens/tabScreens/userscreen/UserScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n// import HomeDetailScreen from '../screens/tabScreens/homescreen/HomeDetailScreen';\n//***************** Feed Screen **************\nimport FeedScreen from '../screens/tabScreens/feedscreen/FeedScreen';\n//***************** favorite ********************\nimport FavoriteScreen from '../screens/tabScreens/favorite/FavoriteScreen';\nimport FavoriteDetailScreen from '../screens/tabScreens/favorite/FavoriteDetailScreen';\n//*********************QuestionnaireScreen**************** */\nimport QuestionnaireScreen from '../screens/tabScreens/userscreen/Questionnaire/QuestionnaireScreen';\n\nimport ShowDetailScreen from '../screens/tabScreens/homesearch/ShowDetailScreen';\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Welcome\" component={WelcomeScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"ForgotPass\" component={ForgotPassScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"EnterCode\" component={EnterCodeScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"CreatePassword\" component={CreatePasswordScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"QuestionStart\" component={QuestionStartScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"QuestionGender\" component={QuestionGenderScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"QuestionAge\" component={QuestionAgeScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"QuestionId\" component={QuestionIdScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Questionnaire\" component={QuestionnaireScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"ShowDetail\" component={ShowDetailScreen} options={{ headerShown: false }} />\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      screenOptions={{\n        tabBarStyle: {\n          marginHorizontal: 15,\n          marginBottom: 15,\n          height: 76,\n          borderRadius: 25,\n          position: 'absolute'\n        },\n        tabBarShowLabel: false\n      }}\n    >\n      {/* <BottomTab.Screen\n        name=\"Home\"\n        component={Homestack}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} />,\n          headerShown: false\n        }}\n      /> */}\n      <BottomTab.Screen\n        name=\"Search\"\n        component={SearchScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"email-search\" color={color} />,\n          headerShown: false\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Feed\"\n        component={FeedScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"cards\" color={color} />,\n          headerShown: false\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Favorite\"\n        component={FavoriteStack}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"heart\" color={color} />,\n          headerShown: false\n        }}\n      />\n      <BottomTab.Screen\n        name=\"User\"\n        component={UserScreen}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"account\" color={color} />,\n          headerShown: false\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// const Home_Stack = createNativeStackNavigator();\n// function Homestack() {\n//   return (\n//     <Home_Stack.Navigator screenOptions={{ headerShown: false }}>\n//       <Home_Stack.Screen name=\"HomePage\" component={HomeScreen} />\n//       <Home_Stack.Screen name=\"HomeDetail\" component={HomeDetailScreen} />\n//     </Home_Stack.Navigator>\n//   );\n// }\nconst Favorite_Stack = createNativeStackNavigator();\nfunction FavoriteStack() {\n  return (\n    <Favorite_Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Favorite_Stack.Screen name=\"FavoritePage\" component={FavoriteScreen} />\n      <Favorite_Stack.Screen name=\"FavoriteDetail\" component={FavoriteDetailScreen} />\n    </Favorite_Stack.Navigator>\n  );\n}\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof MaterialCommunityIcons>['name'];\n  color: string;\n}) {\n  return <MaterialCommunityIcons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}