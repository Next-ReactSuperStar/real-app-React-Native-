{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["\r\n// import React, { useState, useCallback, useRef, useEffect } from 'react';\r\n// import { StyleSheet, View, TouchableOpacity, Platform, Text, Image,Dimensions, ScrollView } from 'react-native';\r\n// // iimport { TextInput } from 'react-native-paper';mport MapView, { ILocationProps, IDrawResult, TouchPoint, Marker,PROVIDER_GOOGLE } from '../component';\r\n// import MapView, { Marker } from 'react-native-maps';\r\n// import { TextInput } from 'react-native-paper';\r\n// // import { MarkerLocation } from '../assets';\r\n// // import AnimatedPolygon from '../components/polygon';\r\n// import HomeSearchResult from '../../components/homeSearch/HomeSearchResult';\r\n// import HomeSearchShowResult from '../../components/homeSearch/HomeSearchShowResult';\r\n// import { RootTabScreenProps } from '../../../types';\r\n// import axios from 'axios'\r\n// // import {fetchApi} from '../../service'\r\n// import HomeListItem from '../../components/home/HomeListItem';\r\n// import HomeLookingImage from '../../components/home/HomeLookingImage';\r\n// import LocationLookingImage from '../../components/home/LocationLookingImage';\r\n// import HomeNearItem from '../../components/home/HomeNearItem';\r\n// import HomeNearItem_1 from '../../components/home/HomeNearItem_1';\r\n// import { menuBtn } from '../../../constants/menuBtn';\r\n\r\n// const SearchScreen = ({ navigation }: RootTabScreenProps<any>) => {\r\n    \r\n//     const mapRef = useRef<any>(null);\r\n\r\n//     const initialPolygon:any = useRef({\r\n//         polygons: [],\r\n//         distance: 0,\r\n//         lastLatLng: undefined,\r\n//         initialLatLng: undefined,\r\n//         centerLatLng: undefined,\r\n//     });\r\n\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers()\r\n//       },[SearchScreen]);\r\n\r\n//     const [showMap, setShowMap]=useState<boolean>(true)\r\n//     const [mapData, setMapData]=useState<any>([])\r\n//     // const [modePolygon, setPolygonCreated] = useState<boolean>(false);\r\n\r\n//     // const [isActiveDraw, setDrawMode] = useState<boolean>(false);\r\n//     const [isReady, setIsReady] = useState<boolean>(false);\r\n//     // const [points, setPoints] = useState<TouchPoint[]>([]);\r\n//     const win = Dimensions.get('window');\r\n//     // const [polygon, setPolygon] = useState<IDrawResult>(initialPolygon.current);\r\n//     const [markerNum, setMarkerNum] = useState<any>(0);\r\n//     const [noteShow, setNoteShow] = useState<boolean>(false);\r\n//     const [chooseMarker, setChooseMarker] = useState<boolean>(false);\r\n//     const [initRegion, setInitRegion] = useState<any>({\r\n//         latitude: 29.858924,\r\n//         longitude: -95.587894,\r\n//         latitudeDelta: 0.15,\r\n//         longitudeDelta: 0.0421,\r\n//     });\r\n//     const handleMapReady = useCallback(() => mapRef.current && setIsReady(true), []);\r\n\r\n//     // const [text, onChangeText] = React.useState('');\r\n//     // const [number, onChangeNumber] = React.useState(null);\r\n//     // const [getBtninfo, onBtnPress] = React.useState(null)\r\n    \r\n//     const [getMenuBtn, setMenuBtn] = React.useState(menuBtn)\r\n  \r\n//     // const setMenubutton=(data:any)=>{\r\n//     //   menuBtn.forEach((item:any,index:any) => {\r\n//     //     getMenuBtn[index]={title:item.title, state:index==data?true:false}\r\n//     //   })\r\n//     //   setMenuBtn([...getMenuBtn])\r\n//     // }\r\n\r\n    \r\n//     const fetchUsers = async () => {\r\n\r\n//         // console.log('fetch mapdata start:-----',mapData)\r\n//         await fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/089c839e-5a55-471f-ac5d-62dba5f4fa65/getFilteredListingsAtLocation?latitude=29.858924&longitude=-95.587894&radius=0.02',\r\n        \r\n//         {\r\n//             method: 'get',\r\n//             headers: {\r\n//                 'Content-Type': \"application/json\",\r\n//                 'password': 'passwordAUA'\r\n//             },\r\n\r\n//         })\r\n//         .then((response) => response.json())\r\n//         .then((responseJson) => {\r\n//             // console.log('responseJson:----',responseJson)\r\n//             setMapData([...responseJson])\r\n//             // responseJson.data && setMapData(responseJson.data)\r\n//         }).catch((error) => {\r\n//             fetchUsers()\r\n//         })\r\n\r\n//       };\r\n//         // fetchUsers()\r\n//     // const handleRemovePolygon = useCallback(() => {\r\n//     //     setPolygon(initialPolygon.current);\r\n//     //     setPolygonCreated(false);\r\n//     // }, []);\r\n\r\n//     // const handleClear = useCallback(() => {\r\n//     //     setPolygon(initialPolygon.current);\r\n//     //     setPolygonCreated(false);\r\n//     //     setPoints([]);\r\n//     // }, []);\r\n\r\n//     // const handleIsDraw = useCallback(() => {\r\n//     //     setChooseMarker(false)\r\n//     //     if (!mapRef.current) return;\r\n//     //     if (!isActiveDraw) {\r\n//     //         handleClear()\r\n//     //     }\r\n//     //     setDrawMode((prevMode) => !prevMode);\r\n//     // }, [handleClear, isActiveDraw]);\r\n\r\n//     // const handleCanvasEndDraw = useCallback((locations) => {\r\n           \r\n//     //     setNoteShow(true)\r\n//     //     zoomCenterPolygon(locations.centerLatLng).then(() => {\r\n//     //         setPolygon(locations);\r\n//     //         setPolygonCreated(true);\r\n//     //     });\r\n//     //     setDrawMode((prevMode) => !prevMode);\r\n//     //     console.log('locations:',noteShow)\r\n//     // }, []);\r\n\r\n//     // const zoomCenterPolygon = async (center: ILocationProps) => {\r\n//     //     if (!mapRef.current) return;\r\n//     //     const camera = await mapRef.current.getCamera();\r\n//     //     if (Platform.OS === 'ios') {\r\n//     //         mapRef.current.animateCamera({\r\n//     //             center: center,\r\n//     //         });\r\n//     //     }\r\n//     //     if (Platform.OS === 'android') {\r\n//     //     }\r\n//     // };\r\n\r\n//     const zoomOut = async () => {\r\n//         if (!mapRef.current) return false;\r\n\r\n//         const camera = await mapRef.current.getCamera();\r\n//         if (Platform.OS === 'ios') {\r\n//             mapRef.current.animateCamera({ altitude: camera.altitude * 0.9 });\r\n//         }\r\n\r\n//         if (Platform.OS === 'android') {\r\n//             mapRef.current.animateCamera({ zoom: camera.zoom - 1 });\r\n//         }\r\n//         setChooseMarker(false)\r\n//     };\r\n\r\n//     const zoomIn = async () => {\r\n//         const camera = await mapRef.current.getCamera();\r\n//         if (Platform.OS === 'ios') {\r\n//             mapRef.current.animateCamera({ altitude: camera.altitude * 1.1 });\r\n//         }\r\n\r\n//         if (Platform.OS === 'android') {\r\n//             mapRef.current.animateCamera({ zoom: camera.zoom + 1 });\r\n//         }\r\n//         setChooseMarker(false)\r\n//     }\r\n\r\n//     const markerClick = (num:any) => {\r\n//         setMarkerNum(num)\r\n//         setChooseMarker(true)\r\n//     }\r\n\r\n//     // const hasMarkerClose = useCallback(\r\n//     //     (item,index)=>{console.log(mapData);mapData[index] && mapData[index].latitude && mapData[index].longitude&&\r\n//     //     <Marker key={index} coordinate={{ latitude:mapData[index].latitude, longitude:mapData[index].longitude }} onPress={() => markerClick(index)}>\r\n//     //         <View><Image source={require('../../../assets/icons/maker_custom.png')} style={{width: 39, height: 84 }} resizeMode=\"contain\"></Image></View>\r\n//     //     </Marker>},[]\r\n//     //     )\r\n\r\n//     // const handlePolygon = useCallback(\r\n//     //     (item, index) => <AnimatedPolygon key={index} coordinates={polygon.polygons} />,\r\n//     //     [polygon.polygons],\r\n//     // );\r\n\r\n//     // const onChangePoints = useCallback((value) => {\r\n//     //     setPoints(value);\r\n//     // }, []);\r\n\r\n//     const closeNote = () => {\r\n//         setNoteShow(false)\r\n//     }\r\n\r\n//     const chooseItem = (num:any) => {\r\n//         console.log(num)\r\n//         setShowMap(true)\r\n//         setMarkerNum(num)\r\n//         setChooseMarker(true)\r\n//         setInitRegion({latitude:mapData[num].latitude, \r\n//                       longitude:mapData[num].longitude,\r\n//                       latitudeDelta:initRegion.latitudeDelta,\r\n//                       longitudeDelta:initRegion.longitudeDelta})\r\n//     }\r\n\r\n//     return (\r\n//         <View style={styles.container}>\r\n//             <View style={{flexDirection:'row',padding:20,paddingBottom:5,backgroundColor:'white'}}>\r\n//             {/* <TextInput style={[styles.input,{width:(win.width-60)}]} placeholder=\"I'm looking for...\" placeholderTextColor={'#D0D8E0'} onChangeText={onChangeText} value={text}/> */}\r\n//                 <TextInput\r\n//                         autoComplete={'pass'}\r\n//                         mode=\"outlined\"\r\n//                         placeholder='Search address, or near you'\r\n//                         outlineColor='#F2F3F7'\r\n//                         activeOutlineColor='#888888'\r\n//                         style={{height:40,borderRadius:10,fontSize:14,\r\n//                             width:win.width-110}}\r\n//                         right={<TextInput.Icon style={{marginTop:15}} name=\"microphone\" color='#D0D8E0'/>}\r\n//                     />\r\n//                 <TouchableOpacity  onPress={() => setShowMap(!showMap)}>\r\n//                     <Image style={{width:20,height:20,marginTop:15,marginLeft:10,marginRight:10}} source={showMap?require('../../../assets/icons/Group.png'):require('../../../assets/icons/Group_(2).png')}/>\r\n//                 </TouchableOpacity>\r\n//                 <TouchableOpacity>\r\n//                   <Image style={{width:20,height:20,marginTop:15,marginRight:5}} source={require('../../../assets/icons/sliders.png')}/>\r\n//                 </TouchableOpacity>\r\n//             </View>\r\n//             <View style={{flex: 1}}>\r\n//                 {showMap?<View style={{flex: 1}}>\r\n//                     <MapView\r\n//                         ref={mapRef}\r\n//                         style={{ flex: 1 }}\r\n//                         // points={points}\r\n//                         // widthLine={5}\r\n//                         // onEndDraw={handleCanvasEndDraw}\r\n//                         // isDrawMode={isActiveDraw}\r\n//                         onMapReady={handleMapReady}\r\n//                         // onStartDraw={handleClear}\r\n//                         // createdPolygon={modePolygon}\r\n//                         // onChangePoints={onChangePoints}\r\n//                         // backgroundCanvas={'rgba(0, 0, 0, 0.0)'}\r\n//                         provider={'google'}\r\n//                         showsMyLocationButton={true}\r\n//                         showsUserLocation={true}\r\n//                         zoomControlEnabled={true}\r\n//                         zoomEnabled={true}\r\n//                         zoomTapEnabled={true}\r\n//                         showsScale={true}\r\n//                         initialRegion={initRegion}\r\n//                     >\r\n//                       {mapData.map((item:any, index:any)=>\r\n//                       item && item.latitude && item.longitude&&<Marker key={index}\r\n//                           coordinate={{latitude: item.latitude, longitude: item.longitude}}\r\n//                           onPress={() => markerClick(index)}\r\n//                       >\r\n//                         <Image source={require('../../../assets/icons/maker_custom.png')} style={{width: 39, height: 84 }} resizeMode=\"contain\"></Image>\r\n//                       </Marker>)}\r\n//                         {/* {\r\n//                         isReady &&\r\n//                             modePolygon &&\r\n//                             polygon.polygons &&\r\n//                             polygon.polygons.length > 0 && (\r\n//                                 <> */}\r\n//                                     {/* {mapData.map(hasMarkerClose)} */}\r\n//                                     {/* {polygon.polygons.map(handlePolygon)} */}\r\n//                                 {/* </>\r\n//                             ) \r\n//                             } */}\r\n//                     </MapView>\r\n//                     <View style={{position:'absolute',top:20,right:20,backgroundColor:'white',borderRadius:30}}>\r\n//                         <View style={{padding:5,paddingTop:5,paddingBottom:5}}>\r\n//                             <TouchableOpacity style={{borderRadius:30}} onPress={zoomIn}>\r\n//                                 <Image style={{width:35,height:35,borderRadius:30}} source={ require('../../../assets/icons/Vector_(7).png')}/>\r\n//                             </TouchableOpacity> \r\n//                         </View>\r\n//                         <View style={{padding:5,paddingTop:5,paddingBottom:13}}>\r\n//                             <TouchableOpacity style={{borderRadius:30}} onPress={zoomOut}>\r\n//                                 <Image style={{width:35,height:20,borderRadius:30}} source={require('../../../assets/icons/Vector_(8).png')}/>\r\n//                             </TouchableOpacity>\r\n//                         </View>\r\n//                     </View>\r\n//                     <View style={{position:'absolute',top:110,right:20}}>\r\n//                         <TouchableOpacity style={{padding:8,backgroundColor:'white',borderRadius:30}}>\r\n//                             <Image style={{width:28,height:28}} source={ require('../../../assets/icons/Group_(3).png')}/>\r\n//                         </TouchableOpacity>\r\n//                     </View>\r\n//                     {/* <View style={{position:'absolute',top:163,right:20,borderRadius:40}}>\r\n//                         <TouchableOpacity onPress={handleIsDraw}>\r\n//                             {isActiveDraw ? (\r\n//                                 <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular_(1).png')}/>\r\n//                             ) : (\r\n//                                 <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular.png')}/>\r\n//                             )}\r\n                            \r\n//                         </TouchableOpacity>\r\n//                     </View> */}\r\n//                     <View style={{width:win.width-30,marginLeft:15,position:'absolute',bottom:90}}>\r\n//                         {chooseMarker && <HomeSearchResult indexData={mapData[markerNum]} />}\r\n//                         {noteShow && <HomeSearchShowResult indexData={{resultNum:mapData.length}} closeNote={closeNote}/>}\r\n//                     </View>\r\n//                 </View>\r\n//                 :\r\n\r\n//                 <View style={{flex:1}}>\r\n//                     <ScrollView>\r\n//                         <View style={styles.homeview}>\r\n//                             <View style={{flex:18,backgroundColor:'white',width:'100%'}}>\r\n//                                 <ScrollView>\r\n//                                     {mapData.map((item:any,index:any)=>{return<HomeListItem key={index} indexData={item} num={index} chooseItem={()=>chooseItem(index)}/>})}\r\n//                                 </ScrollView>\r\n//                             </View>\r\n//                             {/* <View style={{flex:6}}>\r\n//                                 <ScrollView style={{marginTop:15}} horizontal={true}>\r\n//                                     <HomeLookingImage imageData={{distance:'18km',name:'Dreamsville House',description:'$129,990',imageUrl:'../../../assets/images/webaliser-_TPTXZd9mOo-unsplash 1.png'}}/>\r\n//                                     <HomeLookingImage imageData={{distance:'18km',name:'Dreamsville House',description:'$129,990',imageUrl:'../../../assets/images/webaliser-_TPTXZd9mOo-unsplash 1.png'}}/>\r\n//                                 </ScrollView>\r\n//                             </View>\r\n//                             <View style={{flex:5}}>\r\n//                                 <View style={{height:50,flexDirection:'row',paddingTop:10}}>\r\n//                                     <Text style={{fontSize:24,fontWeight:'600'}} > Looking in location </Text>\r\n//                                     <Image style={{width:20,height:15,margin:11,marginLeft:'auto',marginRight:10}} source={require('../../../assets/icons/Vector_(3).png')}/>\r\n//                                 </View>\r\n//                                 <ScrollView style={{marginTop:10}} horizontal={true}>\r\n//                                     <LocationLookingImage indexData={{name:'Name House',location:'Pasuruan',distance:'1.2km',isNew:true}}></LocationLookingImage>\r\n//                                     <LocationLookingImage indexData={{name:'Name House',location:'Pasuruan',distance:'1.2km',isNew:true}}></LocationLookingImage>\r\n//                                     <LocationLookingImage indexData={{name:'Name House',location:'Pasuruan',distance:'1.2km',isNew:true}}></LocationLookingImage>\r\n//                                 </ScrollView>\r\n//                             </View>\r\n//                             <View style={{flex:7}}>\r\n//                                 <View style={{height:50,paddingTop:10}}>\r\n//                                 <Text style={{fontSize:24,fontWeight:'600'}} > Recomended for you</Text>\r\n//                                 </View>\r\n//                                 <ScrollView style={{marginTop:10}} horizontal={true}>\r\n//                                     <LocationLookingImage indexData={{name:'Name House',location:'Pasuruan',distance:'1.2km'}}></LocationLookingImage>\r\n//                                     <LocationLookingImage indexData={{name:'Name House',location:'Pasuruan',distance:'1.2km'}}></LocationLookingImage>\r\n//                                     <LocationLookingImage indexData={{name:'Name House',location:'Pasuruan',distance:'1.2km'}}></LocationLookingImage>        \r\n//                                 </ScrollView>\r\n//                             </View> */}\r\n//                             <View style={{height:100}}>\r\n\r\n//                             </View>\r\n//                         </View>\r\n//                     </ScrollView>\r\n//                 </View>}\r\n//             </View>\r\n//         </View>\r\n//     );\r\n// };\r\n\r\n// export default SearchScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//     },\r\n//     button: {\r\n//         top: '10%',\r\n//         right: '10%',\r\n//         position: 'absolute',\r\n//         backgroundColor: 'tomato',\r\n//         padding: 16,\r\n//         zIndex: 4,\r\n//         borderRadius: 18,\r\n//     },\r\n//     title: {\r\n//         color: '#FFFFFF',\r\n//         fontSize: 12,\r\n//     },\r\n//     homeview:{\r\n//         padding:15,\r\n//         paddingTop:0,\r\n//         paddingBottom:0,\r\n//         backgroundColor:'white'\r\n//     },\r\n// });\r\n"]},"metadata":{},"sourceType":"script"}