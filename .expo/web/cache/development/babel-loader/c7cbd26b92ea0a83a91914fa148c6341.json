{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Carousel from \"./carosel\";\nimport { DATA } from \"../utils\";\nimport { Card } from \"./Card\";\nvar win = Dimensions.get('window');\nexport var CarouselComponent = function CarouselComponent(_ref) {\n  var layout = _ref.layout;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeIndex = _useState2[0],\n      setActiveIndex = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemid = _useState4[0],\n      setItemid = _useState4[1];\n\n  var carouselEl = useRef(null);\n  useEffect(function () {}, []);\n\n  var handleSnapToItem = function handleSnapToItem(index) {\n    console.log(\"Index item\", index);\n    setActiveIndex(index);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return React.createElement(Card, {\n      key: index,\n      id: item.id,\n      image: item.image,\n      title: item.title,\n      address: item.address,\n      bedroom: item.bedroom,\n      bathroom: item.bathroom,\n      checked: item.checked\n    });\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\"\n    }\n  }, React.createElement(View, null, React.createElement(Carousel, {\n    autoplay: true,\n    loop: true,\n    layout: layout,\n    ref: carouselEl,\n    data: DATA,\n    sliderWidth: 365,\n    itemWidth: 320,\n    renderItem: renderItem,\n    onSnapToItem: function onSnapToItem(index) {\n      return handleSnapToItem(index);\n    },\n    layoutCardOffset: 18,\n    inactiveSlideScale: 0.94,\n    inactiveSlideOpacity: 0.7,\n    initialNumToRender: 3\n  })), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  swip_icon: {\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\n    height: (Dimensions.get('window').height - 40) * 3 / 37\n  },\n  swip_icon_1: {\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\n    height: (Dimensions.get('window').height - 40) * 3 / 37,\n    marginLeft: 'auto'\n  }\n});","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/map/components/Carousel.tsx"],"names":["React","useState","useRef","useEffect","Carousel","DATA","Card","win","Dimensions","get","CarouselComponent","layout","activeIndex","setActiveIndex","itemid","setItemid","carouselEl","handleSnapToItem","index","console","log","renderItem","item","id","image","title","address","bedroom","bathroom","checked","flex","alignItems","display","styles","StyleSheet","create","container","swip_icon","width","height","swip_icon_1","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;;AAIA,OAAOC,QAAP;AACA,SAASC,IAAT;AACA,SAAoBC,IAApB;AACA,IAAMC,GAAG,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAZ;AAIA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6B;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;;AAC5D,kBAAsCV,QAAQ,CAAS,CAAT,CAA9C;AAAA;AAAA,MAAOW,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA4BZ,QAAQ,CAAM,EAAN,CAApC;AAAA;AAAA,MAAOa,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,UAAU,GAAGd,MAAM,CAAC,IAAD,CAAzB;AACAC,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAmB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACAL,IAAAA,cAAc,CAACK,KAAD,CAAd;AACD,GAHD;;AAKA,MAAMG,UAAU,GAAG,SAAbA,UAAa,QAAyD;AAAA,QAAtDC,IAAsD,SAAtDA,IAAsD;AAAA,QAAhDJ,KAAgD,SAAhDA,KAAgD;AAE1E,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,EAAE,EAAEI,IAAI,CAACC,EAA3B;AAA+B,MAAA,KAAK,EAAED,IAAI,CAACE,KAA3C;AAAkD,MAAA,KAAK,EAAEF,IAAI,CAACG,KAA9D;AAAqE,MAAA,OAAO,EAAEH,IAAI,CAACI,OAAnF;AAA4F,MAAA,OAAO,EAAEJ,IAAI,CAACK,OAA1G;AAAmH,MAAA,QAAQ,EAAEL,IAAI,CAACM,QAAlI;AAA4I,MAAA,OAAO,EAAEN,IAAI,CAACO;AAA1J,MADF;AAGD,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE;AAAvB;AAAb,KAEE,oBAAC,IAAD,QACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,IADZ;AAEE,IAAA,IAAI,EAAE,IAFR;AAGE,IAAA,MAAM,EAAEpB,MAHV;AAIE,IAAA,GAAG,EAAEK,UAJP;AAKE,IAAA,IAAI,EAAEX,IALR;AAME,IAAA,WAAW,EAAE,GANf;AAOE,IAAA,SAAS,EAAE,GAPb;AAQE,IAAA,UAAU,EAAEgB,UARd;AASE,IAAA,YAAY,EAAE,sBAACH,KAAD;AAAA,aAAmBD,gBAAgB,CAACC,KAAD,CAAnC;AAAA,KAThB;AAUE,IAAA,gBAAgB,EAAE,EAVpB;AAWE,IAAA,kBAAkB,EAAE,IAXtB;AAYE,IAAA,oBAAoB,EAAE,GAZxB;AAaE,IAAA,kBAAkB,EAAE;AAbtB,IADF,CAFF,EAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE,MAAX;AAAmBD,MAAAA,UAAU,EAAE,QAA/B;AAAyCD,MAAAA,IAAI,EAAE;AAA/C;AAAb,IApBF,CADF;AAwBD,CA5CM;AA8CP,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTN,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BM,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,CAAC9B,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyB8B,MAAzB,GAAkC,EAAnC,IAAyC,CAAzC,GAA6C,EAD3C;AAETA,IAAAA,MAAM,EAAE,CAAC/B,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyB8B,MAAzB,GAAkC,EAAnC,IAAyC,CAAzC,GAA6C;AAF5C,GALoB;AAS/BC,EAAAA,WAAW,EAAE;AACXF,IAAAA,KAAK,EAAE,CAAC9B,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyB8B,MAAzB,GAAkC,EAAnC,IAAyC,CAAzC,GAA6C,EADzC;AAEXA,IAAAA,MAAM,EAAE,CAAC/B,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyB8B,MAAzB,GAAkC,EAAnC,IAAyC,CAAzC,GAA6C,EAF1C;AAGXE,IAAAA,UAAU,EAAE;AAHD;AATkB,CAAlB,CAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { View, TouchableOpacity, Image, Dimensions, StyleSheet, ScrollView } from \"react-native\";\r\n\r\n// import Carousel from \"react-native-snap-carousel\";\r\nimport Carousel from \"./carosel\";\r\nimport { DATA } from \"../utils\";\r\nimport { CardProps, Card } from \"./Card\";\r\nconst win = Dimensions.get('window');\r\n\r\ntype LayoutProps = { layout?: \"default\" | \"stack\" | \"tinder\" | undefined };\r\n\r\nexport const CarouselComponent = ({ layout }: LayoutProps) => {\r\n  const [activeIndex, setActiveIndex] = useState<number>(0);\r\n  const [itemid, setItemid] = useState<any>('');\r\n  const carouselEl = useRef(null);\r\n  useEffect(() => {\r\n\r\n  }, []);\r\n\r\n  const handleSnapToItem = (index: number) => {\r\n    console.log(\"Index item\", index)\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const renderItem = ({ item, index }: { item: CardProps; index: number }) => {\r\n    // setItemid(item);\r\n    return (\r\n      <Card key={index} id={item.id} image={item.image} title={item.title} address={item.address} bedroom={item.bedroom} bathroom={item.bathroom} checked={item.checked} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\" }}>\r\n      {/* <ScrollView> */}\r\n      <View >\r\n        <Carousel\r\n          autoplay={true}\r\n          loop={true}\r\n          layout={layout}\r\n          ref={carouselEl}\r\n          data={DATA}\r\n          sliderWidth={365}\r\n          itemWidth={320}\r\n          renderItem={renderItem}\r\n          onSnapToItem={(index: number) => handleSnapToItem(index)}\r\n          layoutCardOffset={18}\r\n          inactiveSlideScale={0.94}\r\n          inactiveSlideOpacity={0.7}\r\n          initialNumToRender={3}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  swip_icon: {\r\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\r\n    height: (Dimensions.get('window').height - 40) * 3 / 37,\r\n  },\r\n  swip_icon_1: {\r\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\r\n    height: (Dimensions.get('window').height - 40) * 3 / 37,\r\n    marginLeft: 'auto'\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}