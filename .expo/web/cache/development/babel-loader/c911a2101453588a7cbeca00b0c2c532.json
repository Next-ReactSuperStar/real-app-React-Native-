{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar win = Dimensions.get('window');\nexport var Card = function Card(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      image = _ref.image,\n      id = _ref.id,\n      address = _ref.address,\n      bedroom = _ref.bedroom,\n      bathroom = _ref.bathroom,\n      checked = _ref.checked;\n  return React.createElement(React.Fragment, null, type != 'default' ? React.createElement(View, {\n    key: id,\n    style: styles.container\n  }, React.createElement(View, {\n    key: id,\n    style: [styles.item, {\n      padding: 15,\n      height: win.height - 380,\n      width: win.width - 50\n    }]\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: image\n    }\n  }), React.createElement(Text, {\n    style: styles.title\n  }, title), React.createElement(Text, {\n    style: styles.addr_title\n  }, address))) : React.createElement(View, {\n    key: id,\n    style: styles.container1\n  }, React.createElement(View, {\n    key: id,\n    style: [styles.item]\n  }, React.createElement(Image, {\n    style: [styles.image, {\n      width: win.width - 30,\n      height: win.width / 1.2\n    }],\n    source: {\n      uri: image\n    }\n  }))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  container1: {\n    flex: 1,\n    alignItems: \"center\",\n    margin: 10\n  },\n  item: {\n    borderRadius: 30,\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    marginVertical: 8,\n    marginHorizontal: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 10,\n    elevation: 2\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '600'\n  },\n  addr_title: {\n    fontSize: 16\n  },\n  image: {\n    flex: 1,\n    borderRadius: 20,\n    width: win.width - 80\n  },\n  swip_icon: {\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\n    height: (Dimensions.get('window').height - 40) * 3 / 37\n  },\n  swip_icon_1: {\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\n    height: (Dimensions.get('window').height - 40) * 3 / 37,\n    marginLeft: 'auto'\n  }\n});","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/map/components/Card.tsx"],"names":["React","win","Dimensions","get","Card","type","title","image","id","address","bedroom","bathroom","checked","styles","container","item","padding","height","width","uri","addr_title","container1","StyleSheet","create","flex","alignItems","margin","borderRadius","backgroundColor","marginVertical","marginHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","swip_icon","swip_icon_1","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Image, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport { DATA } from \"../utils\";\r\nconst win = Dimensions.get('window');\r\nexport type CardProps = typeof DATA[0];\r\n\r\nexport const Card = ({ type,title, image, id, address, bedroom, bathroom, checked }: \r\n    {type:any, title:any, image:any, id:any, address:any, bedroom:any, bathroom:any, checked:boolean}) => {\r\n\r\n\r\n\r\n  return <>\r\n    {type!='default'?<View key={id} style={styles.container}>\r\n      <View key={id} style={[styles.item, {padding: 15, height: win.height - 380, width: win.width-50 }]}>\r\n        <Image style={styles.image} source={{ uri: image }} />\r\n        <Text style={styles.title}>{title}</Text>\r\n        <Text style={styles.addr_title}>{address}</Text>\r\n      </View>\r\n      \r\n    </View>\r\n    :\r\n    <View key={id} style={styles.container1}>\r\n      <View key={id} style={[styles.item]}>\r\n        <Image style={[styles.image,{width: win.width-30,height:win.width/1.2}]} source={{ uri: image }} />\r\n      </View>\r\n    </View>\r\n    }\r\n  </>\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  container1: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    margin:10\r\n  },\r\n  item: {\r\n    borderRadius: 30,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    marginVertical: 8,\r\n    marginHorizontal: 8,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 10,\r\n    elevation: 2,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n  addr_title: {\r\n    fontSize: 16,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    borderRadius: 20,\r\n    width: win.width-80,\r\n  },\r\n  swip_icon: {\r\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\r\n    height: (Dimensions.get('window').height - 40) * 3 / 37,\r\n  },\r\n  swip_icon_1: {\r\n    width: (Dimensions.get('window').height - 40) * 3 / 37,\r\n    height: (Dimensions.get('window').height - 40) * 3 / 37,\r\n    marginLeft: 'auto'\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}