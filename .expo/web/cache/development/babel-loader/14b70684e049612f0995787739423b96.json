{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState, useEffect } from 'react';\nimport { Text } from \"../../../../components/Themed\";\nimport { TextInput } from 'react-native-paper';\nimport { Button } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useToast } from \"react-native-toast-notifications\";\nvar reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n\nvar QuestionnareScreen = function QuestionnareScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route,\n      value = _ref.value;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEdit = _useState2[0],\n      setIsEdit = _useState2[1];\n\n  var win = Dimensions.get('window');\n\n  var _useState3 = useState([{\n    category: ''\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category_data = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState([{\n    category: ''\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      category_datasave = _useState6[0],\n      setCategorysave = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      editdata = _useState8[0],\n      setEditdata = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editdatasave = _useState10[0],\n      setEditdatasave = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isZeroCategory = _useState12[0],\n      setIsZeroCategory = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      percent = _useState14[0],\n      setPercent = _useState14[1];\n\n  var _useState15 = useState(['']),\n      _useState16 = _slicedToArray(_useState15, 2),\n      testdata = _useState16[0],\n      setTextdata = _useState16[1];\n\n  var _useState17 = useState(['']),\n      _useState18 = _slicedToArray(_useState17, 2),\n      testdatasave = _useState18[0],\n      setTextdatasave = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isAnswered = _useState20[0],\n      setIsAnswered = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      isUnanswered = _useState22[0],\n      setUnanswered = _useState22[1];\n\n  var _useState23 = useState('all'),\n      _useState24 = _slicedToArray(_useState23, 2),\n      filterState = _useState24[0],\n      setFilterState = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      nextbtndata = _useState26[0],\n      setNextbtndata = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      prevbtndata = _useState28[0],\n      setPrevbtndata = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      btnSaveData = _useState30[0],\n      setBtnSaveData = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      catename = _useState32[0],\n      setCatename = _useState32[1];\n\n  var toast = useToast();\n\n  function handleInput(text, fieldType) {\n    var arr = testdata;\n    category_data.map(function (item, index) {\n      if (item.possibleAnswers === null) {\n        var name = 'name' + index;\n\n        if (fieldType === name) {\n          arr[index] = text;\n          setTextdata(_toConsumableArray(arr));\n          calcPercent(editdata);\n        }\n      }\n    });\n  }\n\n  var calcPercent = function calcPercent(data) {\n    var part_percent = 100 / data.length;\n    var real_percent = 0;\n    data.map(function (item, data_index) {\n      if (item.data === \"no\") {\n        if (item.title != '') {\n          real_percent = real_percent + part_percent;\n        } else {\n          testdata.map(function (text, text_index) {\n            if (text != \"\") {\n              real_percent = real_percent + part_percent;\n            }\n          });\n        }\n      } else {\n        if (item.doAllowMultipleAnswers) {\n          var cnt = 0;\n          var len = item.data.length;\n          var part = 0;\n          item.data.map(function (item_arr, arr_index) {\n            if (item_arr.state) {\n              cnt++;\n            }\n\n            part = cnt / len * part_percent;\n          });\n          real_percent = real_percent + part;\n        } else {\n          item.data.map(function (item_arr, arr_index) {\n            if (item_arr.state) {\n              real_percent = real_percent + part_percent;\n            }\n          });\n        }\n      }\n    });\n    setPercent(real_percent);\n  };\n\n  var btnClick = function btnClick(i, index) {\n    if (isEdit) {\n      if (category_data[0].category.length > 0) {\n        if (editdata[i].doAllowMultipleAnswers) {\n          editdata[i].data[index].state = !editdata[i].data[index].state;\n          setEditdata(_toConsumableArray(editdata));\n          var filterData = filterState;\n          answerFilter(filterData);\n        } else {\n          editdata[i].data.map(function (edit_data, k) {\n            if (k == index) {\n              edit_data.state = true;\n            } else {\n              edit_data.state = false;\n            }\n\n            setEditdata(_toConsumableArray(editdata));\n            var filterData = filterState;\n            answerFilter(filterData);\n          });\n        }\n      }\n\n      calcPercent(editdatasave);\n    }\n  };\n\n  var handleQuestionnaire = function handleQuestionnaire() {\n    var post_data, real_post, zeroArray, cnt, _value, data, user_id, _post_data;\n\n    return _regeneratorRuntime.async(function handleQuestionnaire$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            post_data = [];\n            editdata.map(function (item, index) {\n              if (item.data === 'no') {\n                var answerLabel = category_data[index].answerLabel;\n\n                var answer = _defineProperty({}, answerLabel, testdata[index]);\n\n                var questionId = category_data[index].questionId;\n                var answer_data_individual = {};\n\n                if (category_data[index].answers.length > 0) {\n                  var answerId = category_data[index].answers[0].answerId;\n                  answer_data_individual = {\n                    answer: answer,\n                    questionId: questionId,\n                    answerId: answerId\n                  };\n                } else {\n                  answer_data_individual = {\n                    answer: answer,\n                    questionId: questionId\n                  };\n                }\n\n                post_data.push(answer_data_individual);\n                cnt++;\n              } else {\n                var q_answer = [];\n                var _answer_data_individual = {};\n                item.data.map(function (ans_data, i) {\n                  if (ans_data.state) {\n                    q_answer.push(ans_data.title);\n                    var _answerLabel = category_data[index].answerLabel;\n\n                    var _answer2 = _defineProperty({}, _answerLabel, q_answer);\n\n                    var _questionId = category_data[index].questionId;\n\n                    if (category_data[index].answers.length > 0) {\n                      var _answerId = category_data[index].answers[0].answerId;\n                      _answer_data_individual = {\n                        answer: _answer2,\n                        questionId: _questionId,\n                        answerId: _answerId\n                      };\n                    } else {\n                      _answer_data_individual = {\n                        answer: _answer2,\n                        questionId: _questionId\n                      };\n                    }\n                  } else {\n                    q_answer.push();\n                    var _answerLabel2 = category_data[index].answerLabel;\n\n                    var _answer4 = _defineProperty({}, _answerLabel2, q_answer);\n\n                    var _questionId2 = category_data[index].questionId;\n\n                    if (category_data[index].answers.length > 0) {\n                      var _answerId2 = category_data[index].answers[0].answerId;\n                      _answer_data_individual = {\n                        answer: _answer4,\n                        questionId: _questionId2,\n                        answerId: _answerId2\n                      };\n                    } else {\n                      _answer_data_individual = {\n                        answer: _answer4,\n                        questionId: _questionId2\n                      };\n                    }\n                  }\n                });\n                post_data.push(_answer_data_individual);\n              }\n            });\n            real_post = {\n              \"answers\": post_data\n            };\n            zeroArray = [];\n            cnt = 0;\n            real_post.answers.map(function (real, real_index) {\n              if (real.answer == undefined) {\n                cnt++;\n                zeroArray.push(true);\n              } else {\n                zeroArray.push(false);\n              }\n\n              setIsZeroCategory(zeroArray);\n            });\n            setPercent(0);\n            _context2.prev = 7;\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user_data'));\n\n          case 10:\n            _value = _context2.sent;\n\n            if (_value !== null) {\n              data = JSON.parse(_value);\n              user_id = data.userId;\n              _post_data = JSON.stringify(real_post);\n              fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/' + user_id + '/answer/updateAnswers', {\n                method: 'post',\n                headers: {\n                  'Content-Type': \"application/json\",\n                  'password': 'passwordAUA'\n                },\n                body: _post_data\n              }).then(function (response) {\n                return response.json();\n              }).then(function _callee(responseJson) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (responseJson.length !== 0) {}\n\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (error) {\n                alert('error');\n              });\n            }\n\n            _context2.next = 16;\n            break;\n\n          case 14:\n            _context2.prev = 14;\n            _context2.t0 = _context2[\"catch\"](7);\n\n          case 16:\n            setIsEdit(false);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[7, 14]], Promise);\n  };\n\n  var Edit = function Edit() {\n    console.log(\"state=====\", isEdit);\n\n    if (isEdit) {\n      var text_data = testdatasave;\n      var edit_data = editdatasave;\n      var ceto_data = category_datasave;\n      console.log(\"edit\", text_data, edit_data, ceto_data);\n      setTextdata(text_data);\n      setEditdata(edit_data);\n      setCategory(ceto_data);\n      setIsEdit(false);\n    } else {\n      setIsEdit(true);\n    }\n  };\n\n  var answerFilter = function answerFilter(text) {\n    if (text == 'all') {\n      setFilterState('all');\n      var data = editdatasave;\n      var data_text = testdatasave;\n      var data_cate = category_datasave;\n      setTimeout(function () {\n        setEditdata(_toConsumableArray(data));\n        setTextdata(data_text);\n        setCategory(data_cate);\n      }, 0.1);\n    } else if (text == 'answered') {\n      setFilterState('answered');\n      var save_arr = [];\n      var save_text = [];\n      var save_cate = [];\n      editdatasave.map(function (save_data, save_index) {\n        if (save_data.data == 'no') {\n          if (save_data.title.length > 0) {\n            save_arr.push(save_data);\n            save_text.push(save_data.title);\n            save_cate.push(category_datasave[save_index]);\n          }\n        } else {\n          var cnt = 0;\n          save_data.data.map(function (item, index) {\n            if (item.state) {\n              cnt++;\n            }\n          });\n\n          if (cnt > 0) {\n            save_arr.push(save_data);\n            save_text.push('');\n            save_cate.push(category_datasave[save_index]);\n          }\n        }\n      });\n\n      if (save_arr.length > 0) {\n        setEditdata(save_arr);\n        setIsAnswered(false);\n      } else {\n        toast.show(\"There is no Answered Question.\", {\n          type: \"danger\",\n          dangerColor: '#FF737F',\n          duration: 4000,\n          animationType: \"slide-in\"\n        });\n        setIsAnswered(true);\n      }\n\n      if (save_text.length > 0) {\n        setTextdata(save_text);\n      }\n\n      if (save_cate.length > 0) {\n        setCategory(save_cate);\n      }\n    } else if (text == 'unanswered') {\n      setFilterState('unanswered');\n      var _save_arr = [];\n      var _save_text = [];\n      var _save_cate = [];\n      editdatasave.map(function (save_data, save_index) {\n        if (save_data.data == 'no') {\n          if (save_data.title.length == 0) {\n            _save_arr.push(save_data);\n\n            _save_text.push(save_data.title);\n\n            _save_cate.push(category_datasave[save_index]);\n          }\n        } else {\n          var cnt = 0;\n          save_data.data.map(function (item, index) {\n            if (item.state) {\n              cnt++;\n            }\n          });\n\n          if (cnt == 0) {\n            _save_arr.push(save_data);\n\n            _save_text.push('');\n\n            _save_cate.push(category_datasave[save_index]);\n          }\n        }\n      });\n\n      if (_save_arr.length > 0) {\n        setEditdata(_save_arr);\n        setUnanswered(false);\n      } else {\n        toast.show(\"There is no Unanswered Question.\", {\n          type: \"danger\",\n          dangerColor: '#FF737F',\n          duration: 4000,\n          animationType: \"slide-in\"\n        });\n        setUnanswered(true);\n      }\n\n      if (_save_text.length > 0) {\n        setTextdata(_save_text);\n      }\n\n      if (_save_cate.length > 0) {\n        setCategory(_save_cate);\n      }\n    }\n  };\n\n  useEffect(function () {\n    setBtndata();\n    fetchData('all');\n  }, []);\n\n  var setBtndata = function setBtndata() {\n    var _route$params = route.params,\n        category_name = _route$params.category_name,\n        catename_data = _route$params.catename_data;\n    var item_index = 0;\n    console.log(\"====\", category_name, catename_data);\n    setCatename(category_name);\n    catename_data;\n    setBtnSaveData(catename_data);\n  };\n\n  var fetchData = function fetchData(filter_state) {\n    var _route$params2, category_name, user_id, fetchurl;\n\n    return _regeneratorRuntime.async(function fetchData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            try {\n              _route$params2 = route.params, category_name = _route$params2.category_name, user_id = _route$params2.user_id;\n              fetchurl = 'http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/' + user_id + '/category/' + category_name + '/answers';\n              fetch(fetchurl, {\n                method: 'get',\n                headers: {\n                  'Content-Type': \"application/json\",\n                  'password': 'passwordAUA'\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                console.log(\"db data\", responseJson);\n                var textarr = [];\n\n                if (responseJson.length !== 0) {\n                  var arr = [];\n                  responseJson.map(function (data, i) {\n                    textarr.push('');\n\n                    if (data.answers && data.answers.length > 0) {\n                      if (data.answerType !== \"array\") {\n                        var answerLabel = data.answerLabel;\n                        var title = data.answers[0].answer[answerLabel];\n                        textarr[i] = title;\n                        var item = {\n                          'data': 'no',\n                          title: title,\n                          'questionId': data.questionId,\n                          answerId: data.answers[0].answerId,\n                          doAllowMultipleAnswers: data.doAllowMultipleAnswers\n                        };\n                        arr.push(item);\n                      } else {\n                        textarr[i] = '';\n                        var arr_poss = [];\n                        var arr_num = [];\n                        var obj_data;\n                        var key = data.answerLabel;\n                        data.possibleAnswers.map(function (possibleanswer, pos_index) {\n                          var cnt = 0;\n                          data.answers[0].answer[key].map(function (answer, k) {\n                            if (answer == possibleanswer) {\n                              cnt++;\n                              var _item = {\n                                title: possibleanswer,\n                                state: true,\n                                saveState: false,\n                                'questionId': data.questionId,\n                                'answerID': answer.answerId\n                              };\n                              arr_poss.push(_item);\n                              arr_num.push(pos_index);\n                            }\n                          });\n\n                          if (cnt == 0) {\n                            var _item2 = {\n                              title: possibleanswer,\n                              state: false,\n                              saveState: false,\n                              'questionId': data.questionId,\n                              'answerID': data.answers[0].answerId\n                            };\n                            arr_poss.push(_item2);\n                          }\n                        });\n                        obj_data = {\n                          'data': arr_poss,\n                          doAllowMultipleAnswers: data.doAllowMultipleAnswers\n                        };\n                        arr.push(obj_data);\n                      }\n                    } else if (!data.answers || data.answers.length == 0) {\n                      if (data.possibleAnswers === null) {\n                        textarr[i] = '';\n                        var _item3 = {\n                          'data': 'no',\n                          'title': '',\n                          'questionId': data.questionId,\n                          doAllowMultipleAnswers: data.doAllowMultipleAnswers\n                        };\n                        arr.push(_item3);\n                      } else if (data.possibleAnswers.length > 0) {\n                        textarr[i] = '';\n                        var _arr_poss = [];\n\n                        var _obj_data;\n\n                        data.possibleAnswers.map(function (poss, j) {\n                          var item = {\n                            title: poss,\n                            state: false,\n                            saveState: false\n                          };\n\n                          _arr_poss.push(item);\n                        });\n                        _obj_data = {\n                          'data': _arr_poss,\n                          doAllowMultipleAnswers: data.doAllowMultipleAnswers\n                        };\n                        arr.push(_obj_data);\n                      }\n                    }\n                  });\n                  setEditdata(arr);\n                  setEditdatasave(arr);\n                  setTextdata(textarr);\n                  setTextdatasave(textarr);\n                  setCategory(responseJson);\n                  setCategorysave(responseJson);\n                  calcPercent(arr);\n                }\n              }).catch(function (error) {\n                alert('error');\n              });\n            } catch (error) {}\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var prevClick = function prevClick() {\n    var item_index = 0;\n    btnSaveData.map(function (item, index) {\n      if (item == catename) {\n        item_index = index;\n      }\n    });\n\n    if (item_index == 0) {\n      setPrevbtndata('notprev');\n    } else if (item_index == category_data.length - 1) {\n      setPrevbtndata(btnSaveData[item_index - 1]);\n    } else {\n      setPrevbtndata(btnSaveData[item_index - 1]);\n    }\n  };\n\n  var nextClick = function nextClick() {\n    var item_index = 0;\n    btnSaveData.map(function (item, index) {\n      if (item == catename) {\n        item_index = index;\n      }\n    });\n\n    if (item_index == 0) {\n      setNextbtndata(btnSaveData[1]);\n    } else if (item_index == category_data.length - 1) {\n      setNextbtndata('notnext');\n    } else {\n      setNextbtndata(btnSaveData[item_index + 1]);\n    }\n  };\n\n  var renderList = function renderList() {\n    if (category_data[0].category.length > 0) {\n      return category_data.map(function (item, i) {\n        return React.createElement(View, {\n          key: i,\n          style: {\n            marginLeft: 20,\n            marginRight: 20,\n            flex: 1\n          }\n        }, React.createElement(View, null, React.createElement(View, {\n          style: styles.homePopularView\n        }, React.createElement(Text, {\n          style: styles.homeTitleText\n        }, item.questionText), React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            marginTop: 4\n          }\n        }, editdata[i].data === 'no' ? React.createElement(View, {\n          style: styles.loginForm\n        }, React.createElement(TextInput, {\n          theme: {\n            roundness: 16\n          },\n          underlineColorAndroid: \"transparent\",\n          outlineColor: !isEdit ? \"#B00020\" : \"transparent\",\n          activeOutlineColor: !isEdit ? \"#B00020\" : \"#30C0E9\",\n          disabled: !isEdit,\n          value: testdata[i],\n          onChangeText: function onChangeText(text) {\n            return handleInput(text, 'name' + i);\n          },\n          label: \"write your data\",\n          autoComplete: 'pass',\n          mode: \"outlined\",\n          error: false,\n          accessibilityLabel: \"name\"\n        })) : editdata[i].data.map(function (item, index) {\n          return React.createElement(View, {\n            key: index,\n            style: {\n              flexDirection: 'row'\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: {\n              marginLeft: 'auto',\n              marginRight: 5,\n              marginTop: 3,\n              marginBottom: 3\n            }\n          }, React.createElement(Button, {\n            mode: \"contained\",\n            color: isEdit && item.state ? '#30C0E9' : item.state && !isEdit ? '#7BC67E' : '#D0D8E0',\n            style: {\n              borderRadius: 20\n            },\n            labelStyle: {\n              color: 'white'\n            },\n            contentStyle: {\n              flexDirection: 'row-reverse'\n            },\n            icon: isEdit && item.state ? \"close-circle\" : '',\n            onPress: function onPress() {\n              return btnClick(i, index);\n            },\n            accessibilityRole: 'button',\n            accessibilityLabel: i + 'testbtn' + index\n          }, item.title)));\n        }))), isZeroCategory[i] && isEdit && React.createElement(Text, {\n          style: {\n            color: '#FF737F',\n            fontSize: 12,\n            fontWeight: '300'\n          }\n        }, \"Select at least one parameter\")), React.createElement(View, {\n          style: {\n            height: 20\n          }\n        }));\n      });\n    }\n  };\n\n  return React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.loginWrap\n  }, React.createElement(View, {\n    style: styles.gotobtn\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return prevClick();\n    }\n  }, prevbtndata == 'notprev' ? React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#D0D8E0'\n    }],\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_all\"\n  }, \"Prev\") : React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#30C0E9'\n    }],\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_all\"\n  }, \"Prev\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return nextClick();\n    }\n  }, nextbtndata == 'notprev' ? React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#D0D8E0'\n    }],\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_all\"\n  }, \"Next\") : React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#30C0E9'\n    }],\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_all\"\n  }, \"Next\"))), React.createElement(View, {\n    style: {\n      marginTop: 10,\n      marginBottom: 10,\n      flexDirection: 'row'\n    }\n  }, category_data[0].category.length > 0 ? React.createElement(Text, {\n    style: styles.title\n  }, category_data[0].category) : React.createElement(React.Fragment, null), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginLeft: 'auto'\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, {\n      color: isEdit ? '#30C0E9' : '#D0D8E0'\n    }]\n  }, percent.toFixed(0), \"%\"), React.createElement(TouchableOpacity, {\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"editbtn\",\n    style: {\n      marginTop: 5\n    },\n    onPress: function onPress() {\n      return Edit();\n    }\n  }, isEdit ? React.createElement(Image, {\n    style: {\n      width: 25,\n      height: 30,\n      marginTop: 'auto',\n      marginBottom: 10,\n      marginRight: 30,\n      marginLeft: 5,\n      top: 7\n    },\n    source: require(\"../../../../assets/icons/close.jpg\")\n  }) : React.createElement(Image, {\n    style: {\n      width: 25,\n      height: 30,\n      marginTop: 'auto',\n      marginBottom: 10,\n      marginRight: 30,\n      marginLeft: 5,\n      top: 7\n    },\n    source: require(\"../../../../assets/icons/edit.jpg\")\n  })))), React.createElement(View, {\n    style: styles.questionProgress\n  }, React.createElement(View, {\n    style: styles.progGender\n  }, React.createElement(View, {\n    style: [styles.progGenderIN, {\n      width: percent.toFixed(0) + '%'\n    }]\n  }))), React.createElement(View, {\n    style: styles.answer_filter\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return answerFilter('all');\n    }\n  }, React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#30C0E9'\n    }],\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_all\"\n  }, \"All\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return answerFilter('answered');\n    },\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_answered\"\n  }, React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#30C0E9'\n    }]\n  }, \"Answered\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return answerFilter('unanswered');\n    },\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"btn_unanswered\"\n  }, React.createElement(Text, {\n    style: [styles.filter_btn, {\n      color: '#30C0E9'\n    }]\n  }, \"Unanswered\"))), renderList(), React.createElement(View, {\n    style: {\n      height: 80\n    }\n  }), React.createElement(View, {\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"qasavebtn\",\n    style: {\n      position: 'absolute',\n      height: 60,\n      width: win.width - 40,\n      borderRadius: 30,\n      bottom: 5,\n      marginLeft: 20\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: isEdit ? function () {\n      return handleQuestionnaire();\n    } : function () {\n      navigation.goBack();\n    }\n  }, React.createElement(Text, {\n    style: [styles.homeTitleText1, {\n      textAlign: 'center'\n    }]\n  }, isEdit ? 'Save' : 'Goto Profile')))));\n};\n\nexport default QuestionnareScreen;\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar styles = StyleSheet.create({\n  homeTitleText1: {\n    fontSize: 20,\n    fontWeight: '500',\n    color: 'white',\n    backgroundColor: '#30C0E9',\n    padding: 15,\n    paddingTop: 10,\n    borderRadius: 30\n  },\n  btnStyle: {\n    backgroundColor: '#30C0E9',\n    padding: 15,\n    borderRadius: 10,\n    textAlign: 'center',\n    color: 'white'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginTop: 'auto',\n    marginLeft: 20\n  },\n  subText: {\n    fontSize: 16,\n    color: '#ACB7C2',\n    marginTop: '2%',\n    marginBottom: '2%'\n  },\n  loginWrap: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  questionProgress: {\n    paddingRight: '7%',\n    paddingLeft: '7%',\n    width: '100%',\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  progGender: {\n    height: 9,\n    flexDirection: \"row\",\n    width: '100%',\n    backgroundColor: '#D0D8E0',\n    borderColor: '#000',\n    borderRadius: 5\n  },\n  progGenderIN: {\n    height: 9,\n    flexDirection: \"row\",\n    backgroundColor: '#7BC67E',\n    borderColor: '#7BC67E',\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  homePopularView: {\n    width: '98%',\n    marginLeft: '1%',\n    marginTop: 5,\n    marginBottom: 5,\n    padding: 10,\n    borderRadius: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5\n  },\n  homeTitleArrow: {\n    width: 20,\n    height: 20,\n    marginRight: 10,\n    marginTop: 13\n  },\n  homeTitleText: {\n    fontSize: 16,\n    fontWeight: '500'\n  },\n  homeTitleImage: {\n    width: 42,\n    height: 42,\n    marginRight: 10\n  },\n  homeTitleView: {\n    flexDirection: 'row',\n    width: '100%',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  loginForm: {\n    justifyContent: 'center',\n    paddingLeft: '5%',\n    paddingRight: '4%'\n  },\n  answer_filter: {\n    margin: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexDirection: 'row'\n  },\n  filter_btn: {\n    fontWeight: 'bold',\n    fontSize: 16,\n    marginHorizontal: 15\n  },\n  gotobtn: {\n    margin: 20,\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    marginTop: 30,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/screens/tabScreens/userscreen/Questionnaire/QuestionnaireScreen.tsx"],"names":["React","useState","useEffect","Text","TextInput","Button","AsyncStorage","useToast","reg","QuestionnareScreen","navigation","route","value","isEdit","setIsEdit","win","Dimensions","get","category","category_data","setCategory","category_datasave","setCategorysave","editdata","setEditdata","editdatasave","setEditdatasave","isZeroCategory","setIsZeroCategory","percent","setPercent","testdata","setTextdata","testdatasave","setTextdatasave","isAnswered","setIsAnswered","isUnanswered","setUnanswered","filterState","setFilterState","nextbtndata","setNextbtndata","prevbtndata","setPrevbtndata","btnSaveData","setBtnSaveData","catename","setCatename","toast","handleInput","text","fieldType","arr","map","item","index","possibleAnswers","name","calcPercent","data","part_percent","length","real_percent","data_index","title","text_index","doAllowMultipleAnswers","cnt","len","part","item_arr","arr_index","state","btnClick","i","filterData","answerFilter","edit_data","k","handleQuestionnaire","post_data","answerLabel","answer","questionId","answer_data_individual","answers","answerId","push","q_answer","ans_data","real_post","zeroArray","real","real_index","undefined","getItem","JSON","parse","user_id","userId","stringify","fetch","method","headers","body","then","response","json","responseJson","catch","error","alert","Edit","console","log","text_data","ceto_data","data_text","data_cate","setTimeout","save_arr","save_text","save_cate","save_data","save_index","show","type","dangerColor","duration","animationType","setBtndata","fetchData","params","category_name","catename_data","item_index","filter_state","fetchurl","textarr","answerType","arr_poss","arr_num","obj_data","key","possibleanswer","pos_index","saveState","poss","j","prevClick","nextClick","renderList","marginLeft","marginRight","flex","styles","homePopularView","homeTitleText","questionText","flexDirection","flexWrap","marginTop","loginForm","roundness","marginBottom","borderRadius","color","fontSize","fontWeight","height","loginWrap","gotobtn","filter_btn","toFixed","width","top","require","questionProgress","progGender","progGenderIN","answer_filter","position","bottom","goBack","homeTitleText1","textAlign","StyleSheet","create","backgroundColor","padding","paddingTop","btnStyle","subText","paddingRight","paddingLeft","justifyContent","borderColor","borderWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","homeTitleArrow","homeTitleImage","homeTitleView","margin","display","marginHorizontal"],"mappings":"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","sourcesContent":["// import { styles } from './styles.js';\r\nimport { Image, View, TouchableOpacity, ScrollView, Dimensions } from 'react-native';\r\nimport { NavigationProp } from '@react-navigation/native';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Text } from '../../../../components/Themed';\r\nimport { TextInput } from 'react-native-paper';\r\nimport { Button } from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useToast } from \"react-native-toast-notifications\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nlet reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\r\n\r\nconst QuestionnareScreen = ({ navigation, route, value }: { navigation: NavigationProp<any>, route: any, value: any }) => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const win = Dimensions.get('window');\r\n  const [category_data, setCategory] = useState([{ category: '' }]);\r\n  const [category_datasave, setCategorysave] = useState([{ category: '' }]);\r\n  const [editdata, setEditdata] = useState([]);\r\n  const [editdatasave, setEditdatasave] = useState([]);\r\n  const [isZeroCategory, setIsZeroCategory] = useState([])\r\n  const [percent, setPercent] = useState(0)\r\n  const [testdata, setTextdata] = useState(['']);\r\n  const [testdatasave, setTextdatasave] = useState(['']);\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n  const [isUnanswered, setUnanswered] = useState(false);\r\n  const [filterState, setFilterState] = useState('all');\r\n  const [nextbtndata, setNextbtndata] = useState<string>('');\r\n  const [prevbtndata, setPrevbtndata] = useState<string>('');\r\n\r\n  const [btnSaveData, setBtnSaveData] = useState<any>([]);\r\n  const [catename, setCatename] = useState<string>('');\r\n  const toast = useToast();\r\n\r\n  function handleInput(text: string, fieldType: string) {\r\n    let arr: any[] = testdata;\r\n    category_data.map((item, index) => {\r\n      //@ts-ignore\r\n      if (item.possibleAnswers === null) {\r\n        let name = 'name' + index;\r\n        if (fieldType === name) {\r\n          arr[index] = text;\r\n          setTextdata([...arr]);\r\n          calcPercent(editdata);\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const calcPercent = (data: any) => {\r\n    let part_percent: number = 100 / data.length;\r\n    let real_percent: number = 0;\r\n    data.map((item: any, data_index: number) => {\r\n      if (item.data === \"no\") {\r\n        if (item.title != '') {\r\n          real_percent = real_percent + part_percent;\r\n        } else {\r\n          testdata.map((text: any, text_index: number) => {\r\n            if (text != \"\") {\r\n              real_percent = real_percent + part_percent;\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        if (item.doAllowMultipleAnswers) {\r\n          let cnt: number = 0;\r\n          let len: number = item.data.length;\r\n          let part: number = 0;\r\n          item.data.map((item_arr: any, arr_index: number) => {\r\n            if (item_arr.state) {\r\n              cnt++;\r\n            }\r\n            part = (cnt / len) * part_percent;\r\n          })\r\n          real_percent = real_percent + part;\r\n        } else {\r\n          item.data.map((item_arr: any, arr_index: number) => {\r\n            if (item_arr.state) {\r\n              real_percent = real_percent + part_percent;\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n    setPercent(real_percent);\r\n  }\r\n\r\n  const btnClick = (i: number, index: number) => {\r\n    if (isEdit) {\r\n      if (category_data[0].category.length > 0) {\r\n        //@ts-ignore\r\n        if (editdata[i].doAllowMultipleAnswers) {\r\n          //@ts-ignore\r\n          editdata[i].data[index].state = !editdata[i].data[index].state;\r\n          setEditdata([...editdata]);\r\n          let filterData: string = filterState;\r\n          answerFilter(filterData);\r\n        } else {\r\n          //@ts-ignore\r\n          editdata[i].data.map((edit_data: any, k: number) => {\r\n            if (k == index) {\r\n              //@ts-ignore\r\n              edit_data.state = true;\r\n            } else {\r\n              //@ts-ignore\r\n              edit_data.state = false;\r\n            }\r\n            setEditdata([...editdata]);\r\n            let filterData: string = filterState;\r\n            answerFilter(filterData);\r\n          })\r\n        }\r\n      }\r\n      calcPercent(editdatasave);\r\n    }\r\n  }\r\n\r\n  const handleQuestionnaire = async () => {\r\n    let post_data: any = [];\r\n    editdata.map((item, index) => {\r\n      //@ts-ignore\r\n      if (item.data === 'no') {\r\n        //@ts-ignore\r\n        let answerLabel: string = category_data[index].answerLabel;\r\n        let answer: object = { [answerLabel]: testdata[index] };\r\n        //@ts-ignore\r\n        let questionId: string = category_data[index].questionId;\r\n        let answer_data_individual: object = {};\r\n        //@ts-ignore\r\n        if (category_data[index].answers.length > 0) {\r\n          //@ts-ignore\r\n          let answerId: string = category_data[index].answers[0].answerId;\r\n          answer_data_individual = { answer, questionId, answerId };\r\n        } else {\r\n          answer_data_individual = { answer, questionId };\r\n        }\r\n        post_data.push(answer_data_individual);\r\n        cnt++;\r\n\r\n      } else {\r\n        let q_answer: any = [];\r\n        let answer_data_individual: object = {};\r\n        //@ts-ignore\r\n        item.data.map((ans_data, i) => {\r\n          if (ans_data.state) {\r\n            q_answer.push(ans_data.title);\r\n            //@ts-ignore\r\n            let answerLabel: string = category_data[index].answerLabel;\r\n            let answer: object = { [answerLabel]: q_answer };\r\n            //@ts-ignore\r\n            let questionId: string = category_data[index].questionId;\r\n            //@ts-ignore\r\n            if (category_data[index].answers.length > 0) {\r\n              //@ts-ignore\r\n              let answerId: string = category_data[index].answers[0].answerId;\r\n              answer_data_individual = { answer, questionId, answerId };\r\n            } else {\r\n              answer_data_individual = { answer, questionId };\r\n            }\r\n          } else {\r\n            q_answer.push();\r\n            //@ts-ignore\r\n            let answerLabel: string = category_data[index].answerLabel;\r\n            let answer: object = { [answerLabel]: q_answer };\r\n            //@ts-ignore\r\n            let questionId: string = category_data[index].questionId;\r\n            //@ts-ignore\r\n            if (category_data[index].answers.length > 0) {\r\n              //@ts-ignore\r\n              let answerId: string = category_data[index].answers[0].answerId;\r\n              answer_data_individual = { answer, questionId, answerId };\r\n            } else {\r\n              answer_data_individual = { answer, questionId };\r\n            }\r\n          }\r\n        })\r\n        post_data.push(answer_data_individual);\r\n      }\r\n    })\r\n    let real_post: object = { \"answers\": post_data };\r\n    let zeroArray: any[] = [];\r\n    let cnt: number = 0;\r\n    //@ts-ignore\r\n    real_post.answers.map((real: any, real_index: number) => {\r\n      // let zeroState: any = isZeroCategory\r\n      if (real.answer == undefined) {\r\n        cnt++;\r\n        zeroArray.push(true);\r\n      } else {\r\n        zeroArray.push(false);\r\n      }\r\n\r\n      //@ts-ignore\r\n      setIsZeroCategory(zeroArray);\r\n    })\r\n\r\n    setPercent(0);\r\n    try {\r\n      const value = await AsyncStorage.getItem('user_data');\r\n      if (value !== null) {\r\n        let data = JSON.parse(value);\r\n        let user_id = data.userId;\r\n        let post_data: string = JSON.stringify(real_post);\r\n        fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/' + user_id + '/answer/updateAnswers',\r\n          {\r\n            method: 'post',\r\n            headers: {\r\n              'Content-Type': \"application/json\",\r\n              'password': 'passwordAUA'\r\n            },\r\n            body: post_data\r\n\r\n          })\r\n          .then((response) => response.json())\r\n          .then(async (responseJson) => {\r\n            if (responseJson.length !== 0) {\r\n\r\n            }\r\n          }).catch((error) => {\r\n            alert('error')\r\n          })\r\n      }\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n    setIsEdit(false);\r\n  }\r\n  const Edit = () => {\r\n    console.log(\"state=====\", isEdit)\r\n    if (isEdit) {\r\n      let text_data = testdatasave;\r\n      let edit_data = editdatasave;\r\n      let ceto_data = category_datasave;\r\n      console.log(\"edit\", text_data, edit_data, ceto_data)\r\n      setTextdata(text_data);\r\n      setEditdata(edit_data);\r\n      setCategory(ceto_data);\r\n      setIsEdit(false);\r\n    } else {\r\n      setIsEdit(true);\r\n    }\r\n  }\r\n\r\n  const answerFilter = (text: string) => {\r\n    if (text == 'all') {\r\n      setFilterState('all');\r\n      let data = editdatasave;\r\n      let data_text = testdatasave;\r\n      let data_cate = category_datasave;\r\n      setTimeout(function () {\r\n        setEditdata([...data]);\r\n        setTextdata(data_text);\r\n        setCategory(data_cate);\r\n      }, 0.1);\r\n\r\n    } else if (text == 'answered') {\r\n      setFilterState('answered');\r\n      let save_arr: any = [];\r\n      let save_text: any = [];\r\n      let save_cate: any = [];\r\n      editdatasave.map((save_data: any, save_index: number) => {\r\n        if (save_data.data == 'no') {\r\n          if (save_data.title.length > 0) {\r\n            save_arr.push(save_data);\r\n            save_text.push(save_data.title);\r\n            save_cate.push(category_datasave[save_index]);\r\n          }\r\n        } else {\r\n          let cnt: number = 0;\r\n          save_data.data.map((item: any, index: number) => {\r\n            if (item.state) {\r\n              cnt++;\r\n            }\r\n          })\r\n          if (cnt > 0) {\r\n            save_arr.push(save_data);\r\n            save_text.push('');\r\n            save_cate.push(category_datasave[save_index]);\r\n          }\r\n        }\r\n      })\r\n      if (save_arr.length > 0) {\r\n        setEditdata(save_arr);\r\n        setIsAnswered(false);\r\n      } else {\r\n        toast.show(\"There is no Answered Question.\", {\r\n          type: \"danger\",\r\n          dangerColor: '#FF737F',\r\n          duration: 4000,\r\n          animationType: \"slide-in\",\r\n        });\r\n        setIsAnswered(true);\r\n      }\r\n      if (save_text.length > 0) {\r\n        setTextdata(save_text);\r\n      }\r\n      if (save_cate.length > 0) {\r\n        setCategory(save_cate);\r\n      }\r\n    } else if (text == 'unanswered') {\r\n      setFilterState('unanswered');\r\n      let save_arr: any = [];\r\n      let save_text: any = [];\r\n      let save_cate: any = [];\r\n      editdatasave.map((save_data: any, save_index: number) => {\r\n        if (save_data.data == 'no') {\r\n          if (save_data.title.length == 0) {\r\n            save_arr.push(save_data);\r\n            save_text.push(save_data.title);\r\n            save_cate.push(category_datasave[save_index]);\r\n          }\r\n        } else {\r\n          let cnt: number = 0;\r\n          save_data.data.map((item: any, index: number) => {\r\n            if (item.state) {\r\n              cnt++;\r\n            }\r\n          })\r\n          if (cnt == 0) {\r\n            save_arr.push(save_data);\r\n            save_text.push('');\r\n            save_cate.push(category_datasave[save_index]);\r\n          }\r\n        }\r\n      })\r\n      if (save_arr.length > 0) {\r\n        setEditdata(save_arr);\r\n        setUnanswered(false);\r\n      } else {\r\n        toast.show(\"There is no Unanswered Question.\", {\r\n          type: \"danger\",\r\n          dangerColor: '#FF737F',\r\n          duration: 4000,\r\n          animationType: \"slide-in\",\r\n        });\r\n        setUnanswered(true);\r\n      }\r\n      if (save_text.length > 0) {\r\n        setTextdata(save_text);\r\n      }\r\n      if (save_cate.length > 0) {\r\n        setCategory(save_cate);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBtndata();\r\n    fetchData('all');\r\n  }, []);\r\n\r\n  const setBtndata = () => {\r\n    const { category_name, catename_data } = route.params;\r\n    let item_index: number = 0; console.log(\"====\", category_name, catename_data);\r\n    setCatename(category_name); catename_data\r\n    setBtnSaveData(catename_data);\r\n  }\r\n\r\n  const fetchData = async (filter_state: any) => {\r\n    try {\r\n      // let data = JSON.parse(value);\r\n      // let user_id = data.userId;\r\n      const { category_name, user_id } = route.params;\r\n      let fetchurl: any = 'http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/' + user_id + '/category/' + category_name + '/answers';\r\n      fetch(fetchurl,\r\n        {\r\n          method: 'get',\r\n          headers: {\r\n            'Content-Type': \"application/json\",\r\n            'password': 'passwordAUA'\r\n          },\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n          console.log(\"db data\", responseJson);\r\n          let textarr: any = [];\r\n          if (responseJson.length !== 0) {\r\n            let arr: any[] = [];\r\n            responseJson.map((data: any, i: number) => {\r\n              textarr.push('');\r\n              if (data.answers && data.answers.length > 0) {\r\n                if (data.answerType !== \"array\") {\r\n                  let answerLabel: string = data.answerLabel;\r\n                  let title: any = data.answers[0].answer[answerLabel];\r\n                  textarr[i] = title;\r\n                  let item = { 'data': 'no', title, 'questionId': data.questionId, answerId: data.answers[0].answerId, doAllowMultipleAnswers: data.doAllowMultipleAnswers };\r\n                  arr.push(item);\r\n                } else {\r\n                  textarr[i] = '';\r\n                  let arr_poss: any[] = [];\r\n                  let arr_num: any[] = [];\r\n                  let obj_data: {\r\n                    data: any[],\r\n                    doAllowMultipleAnswers: boolean;\r\n                  }\r\n                  let key: any = data.answerLabel;\r\n                  // let len: number = data.answers.length - 1;\r\n                  data.possibleAnswers.map((possibleanswer: any, pos_index: number) => {\r\n                    let cnt: number = 0;\r\n                    data.answers[0].answer[key].map((answer: any, k: number) => {\r\n                      if (answer == possibleanswer) {\r\n                        cnt++;\r\n                        let item = { title: possibleanswer, state: true, saveState: false, 'questionId': data.questionId, 'answerID': answer.answerId };\r\n                        arr_poss.push(item);\r\n                        arr_num.push(pos_index);\r\n                      }\r\n                    })\r\n                    if (cnt == 0) {\r\n                      let item = { title: possibleanswer, state: false, saveState: false, 'questionId': data.questionId, 'answerID': data.answers[0].answerId };\r\n                      arr_poss.push(item);\r\n                    }\r\n                  })\r\n                  obj_data = { 'data': arr_poss, doAllowMultipleAnswers: data.doAllowMultipleAnswers };\r\n                  arr.push(obj_data);\r\n                }\r\n              } else if (!data.answers || data.answers.length == 0) {\r\n                if (data.possibleAnswers === null) {\r\n                  textarr[i] = '';\r\n                  let item = { 'data': 'no', 'title': '', 'questionId': data.questionId, doAllowMultipleAnswers: data.doAllowMultipleAnswers };\r\n                  arr.push(item);\r\n                } else if (data.possibleAnswers.length > 0) {\r\n                  textarr[i] = '';\r\n                  let arr_poss: any[] = [];\r\n                  let obj_data: {\r\n                    data: any[],\r\n                    doAllowMultipleAnswers: boolean;\r\n                  }\r\n                  data.possibleAnswers.map((poss: any, j: number) => {\r\n                    let item = { title: poss, state: false, saveState: false };\r\n                    arr_poss.push(item);\r\n                  })\r\n                  obj_data = { 'data': arr_poss, doAllowMultipleAnswers: data.doAllowMultipleAnswers };\r\n                  arr.push(obj_data);\r\n                }\r\n              }\r\n            })\r\n            //@ts-ignore\r\n            setEditdata(arr);\r\n            //@ts-ignore\r\n            setEditdatasave(arr);\r\n            setTextdata(textarr);\r\n            setTextdatasave(textarr);\r\n            setCategory(responseJson);\r\n            setCategorysave(responseJson);\r\n            calcPercent(arr);\r\n          }\r\n        }).catch((error) => {\r\n          alert('error')\r\n        })\r\n\r\n    } catch (error) {\r\n      // Error retrieving data\r\n    }\r\n  }\r\n\r\n  const prevClick = () => {\r\n    let item_index: number = 0;\r\n    btnSaveData.map((item: any, index: number) => {\r\n      if (item == catename) {\r\n        item_index = index;\r\n      }\r\n    })\r\n    if (item_index == 0) {\r\n      setPrevbtndata('notprev');\r\n    } else if (item_index == (category_data.length - 1)) {\r\n      setPrevbtndata(btnSaveData[item_index - 1]);\r\n    } else {\r\n      setPrevbtndata(btnSaveData[item_index - 1]);\r\n    }\r\n  }\r\n\r\n  const nextClick = () => {\r\n    let item_index: number = 0;\r\n    btnSaveData.map((item: any, index: number) => {\r\n      if (item == catename) {\r\n        item_index = index;\r\n      }\r\n    })\r\n    if (item_index == 0) {\r\n      setNextbtndata(btnSaveData[1]);\r\n    } else if (item_index == (category_data.length - 1)) {\r\n      setNextbtndata('notnext');\r\n    } else {\r\n      setNextbtndata(btnSaveData[item_index + 1]);\r\n    }\r\n  }\r\n\r\n  const renderList = () => {\r\n    if (category_data[0].category.length > 0) {\r\n      return category_data.map((item: any, i) => {\r\n        return (\r\n          <View key={i} style={{ marginLeft: 20, marginRight: 20, flex: 1 }}>\r\n            <View>\r\n              <View style={styles.homePopularView} >\r\n                <Text style={styles.homeTitleText}>{item.questionText}</Text>\r\n                <View style={{ flexDirection: 'row', flexWrap: 'wrap', marginTop: 4 }}>\r\n                  {\r\n                    //@ts-ignore\r\n                    editdata[i].data === 'no' ? <View style={styles.loginForm}>\r\n                      <TextInput\r\n                        theme={{\r\n                          roundness: 16,\r\n                        }}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        outlineColor={!isEdit ? \"#B00020\" : \"transparent\"}\r\n                        activeOutlineColor={!isEdit ? \"#B00020\" : \"#30C0E9\"}\r\n                        disabled={!isEdit}\r\n                        value={testdata[i]}\r\n                        onChangeText={(text: any) => handleInput(text, 'name' + i)}\r\n                        label=\"write your data\"\r\n                        autoComplete={'pass'}\r\n                        mode=\"outlined\"\r\n                        error={false}\r\n                        accessibilityLabel='name'\r\n                      />\r\n                    </View> :\r\n                      //@ts-ignore\r\n                      editdata[i].data.map((item: any, index: any) => {\r\n                        return <View key={index} style={{ flexDirection: 'row' }}>\r\n                          <TouchableOpacity style={{ marginLeft: 'auto', marginRight: 5, marginTop: 3, marginBottom: 3, }}>\r\n                            <Button mode='contained'\r\n                              color={isEdit && item.state ? '#30C0E9' : item.state && !isEdit ? '#7BC67E' : '#D0D8E0'}\r\n                              style={{ borderRadius: 20 }}\r\n                              labelStyle={{ color: 'white' }}\r\n                              contentStyle={{ flexDirection: 'row-reverse' }}\r\n                              icon={isEdit && item.state ? \"close-circle\" : ''}\r\n                              onPress={() => btnClick(i, index)}\r\n                              accessibilityRole={'button'}\r\n                              accessibilityLabel={i + 'testbtn' + index}\r\n                            >\r\n                              {item.title}\r\n                            </Button>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      })}\r\n                </View>\r\n              </View>\r\n              {isZeroCategory[i] && isEdit && <Text style={{ color: '#FF737F', fontSize: 12, fontWeight: '300' }}>Select at least one parameter</Text>}\r\n            </View>\r\n            <View style={{ height: 20 }}></View>\r\n          </View>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.loginWrap}>\r\n        <View style={styles.gotobtn}>\r\n          <TouchableOpacity onPress={() => prevClick()}>\r\n            {\r\n              prevbtndata == 'notprev' ? <Text style={[styles.filter_btn, { color: '#D0D8E0' }]} accessibilityRole='button' accessibilityLabel='btn_all'>Prev</Text> :\r\n                <Text style={[styles.filter_btn, { color: '#30C0E9' }]} accessibilityRole='button' accessibilityLabel='btn_all'>Prev</Text>\r\n            }\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => nextClick()}>\r\n            {\r\n              nextbtndata == 'notprev' ? <Text style={[styles.filter_btn, { color: '#D0D8E0' }]} accessibilityRole='button' accessibilityLabel='btn_all'>Next</Text> :\r\n                <Text style={[styles.filter_btn, { color: '#30C0E9' }]} accessibilityRole='button' accessibilityLabel='btn_all'>Next</Text>\r\n            }\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ marginTop: 10, marginBottom: 10, flexDirection: 'row' }}>\r\n\r\n          {\r\n            category_data[0].category.length > 0 ? <Text style={styles.title}>{category_data[0].category}</Text>\r\n              : <></>\r\n          }\r\n          <View style={{ flexDirection: 'row', marginLeft: 'auto' }}>\r\n            <Text style={[styles.title, { color: isEdit ? '#30C0E9' : '#D0D8E0' }]}>{percent.toFixed(0)}%</Text>\r\n            <TouchableOpacity accessibilityRole='button' accessibilityLabel='editbtn' style={{ marginTop: 5, }} onPress={() => Edit()}>\r\n              {isEdit ?\r\n                <Image style={{ width: 25, height: 30, marginTop: 'auto', marginBottom: 10, marginRight: 30, marginLeft: 5, top: 7 }} source={require('../../../../assets/icons/close.jpg')} /> :\r\n                // <Ionicons name=\"md-close\" size={32} color=\"#30C0E9\" /> :\r\n                <Image style={{ width: 25, height: 30, marginTop: 'auto', marginBottom: 10, marginRight: 30, marginLeft: 5, top: 7 }} source={require('../../../../assets/icons/edit.jpg')} />\r\n              }\r\n            </TouchableOpacity>\r\n\r\n          </View>\r\n        </View>\r\n        <View style={styles.questionProgress} >\r\n          <View style={styles.progGender}>\r\n            <View style={[styles.progGenderIN, { width: percent.toFixed(0) + '%' }]}></View>\r\n          </View>\r\n        </View>\r\n        <View style={styles.answer_filter}>\r\n          <TouchableOpacity onPress={() => answerFilter('all')}>\r\n            <Text style={[styles.filter_btn, { color: '#30C0E9' }]} accessibilityRole='button' accessibilityLabel='btn_all'>All</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => answerFilter('answered')} accessibilityRole='button' accessibilityLabel='btn_answered'>\r\n            <Text style={[styles.filter_btn, { color: '#30C0E9' }]}>Answered</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => answerFilter('unanswered')} accessibilityRole='button' accessibilityLabel='btn_unanswered'>\r\n            <Text style={[styles.filter_btn, { color: '#30C0E9' }]}>Unanswered</Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n        {\r\n          renderList()\r\n        }\r\n        <View style={{ height: 80 }}></View>\r\n        <View accessibilityRole='button' accessibilityLabel='qasavebtn' style={{ position: 'absolute', height: 60, width: win.width - 40, borderRadius: 30, bottom: 5, marginLeft: 20 }}>\r\n          <TouchableOpacity onPress={isEdit ? () => handleQuestionnaire() : () => { navigation.goBack() }}>\r\n            <Text style={[styles.homeTitleText1, { textAlign: 'center' }]}>{isEdit ? 'Save' : 'Goto Profile'}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default QuestionnareScreen\r\n\r\nimport { StyleSheet } from 'react-native';\r\nconst styles = StyleSheet.create({\r\n  homeTitleText1: {\r\n    fontSize: 20,\r\n    // height:50,\r\n    fontWeight: '500',\r\n    color: 'white',\r\n    backgroundColor: '#30C0E9',\r\n    padding: 15,\r\n    paddingTop: 10,\r\n    borderRadius: 30\r\n  },\r\n  btnStyle: {\r\n    backgroundColor: '#30C0E9',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    textAlign: 'center',\r\n    color: 'white'\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginTop: 'auto',\r\n    marginLeft: 20\r\n  },\r\n  subText: {\r\n    fontSize: 16,\r\n    color: '#ACB7C2',\r\n    marginTop: '2%',\r\n    marginBottom: '2%',\r\n  },\r\n  loginWrap: {\r\n    flex: 1,\r\n    backgroundColor: 'white'\r\n  },\r\n  questionProgress: {\r\n    paddingRight: '7%',\r\n    paddingLeft: '7%',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  progGender: {\r\n    height: 9,\r\n    flexDirection: \"row\",\r\n    width: '100%',\r\n    backgroundColor: '#D0D8E0',\r\n    borderColor: '#000',\r\n    borderRadius: 5\r\n  },\r\n  progGenderIN: {\r\n    height: 9,\r\n    flexDirection: \"row\",\r\n    backgroundColor: '#7BC67E',\r\n    borderColor: '#7BC67E',\r\n    borderWidth: 1,\r\n    borderRadius: 5\r\n  },\r\n  homePopularView: {\r\n    width: '98%',\r\n    marginLeft: '1%',\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    padding: 10,\r\n    borderRadius: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 5,\r\n    elevation: 5\r\n  },\r\n  homeTitleArrow: {\r\n    width: 20,\r\n    height: 20,\r\n    marginRight: 10,\r\n    marginTop: 13\r\n  },\r\n  homeTitleText: {\r\n    fontSize: 16,\r\n    fontWeight: '500'\r\n  },\r\n  homeTitleImage: {\r\n    width: 42,\r\n    height: 42,\r\n    marginRight: 10\r\n  },\r\n  homeTitleView: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    marginTop: 10,\r\n    marginBottom: 20\r\n  },\r\n  loginForm: {\r\n    // flex: 2,\r\n    justifyContent: 'center',\r\n    paddingLeft: '5%',\r\n    paddingRight: '4%',\r\n  },\r\n  answer_filter: {\r\n    margin: 20,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    flexDirection: 'row',\r\n  },\r\n  filter_btn: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    marginHorizontal: 15,\r\n  },\r\n  gotobtn: {\r\n    margin: 20,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row',\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}