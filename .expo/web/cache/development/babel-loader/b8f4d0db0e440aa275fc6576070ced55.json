{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { styles } from \"./styles.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport { RadioButton } from 'react-native-paper';\nimport { Text } from \"../../components/Themed\";\n\nvar QuestionId = function QuestionId(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState('first'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.questionWrap\n  }, React.createElement(View, {\n    style: styles.questionHeader\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50,\n      margin: 25\n    },\n    source: require(\"../../assets/icons/backBtn.png\")\n  }))), React.createElement(View, {\n    style: styles.subTextView_title\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Which do you indentify best with?\")), React.createElement(View, {\n    style: styles.radioBtn\n  }, React.createElement(RadioButton.Group, {\n    onValueChange: function onValueChange(newValue) {\n      return setValue(newValue);\n    },\n    value: value\n  }, React.createElement(View, {\n    style: styles.radioText\n  }, React.createElement(RadioButton, {\n    value: \"Mail\"\n  }), React.createElement(Text, null, \"Hispanic orgin\")), React.createElement(View, {\n    style: styles.radioText\n  }, React.createElement(RadioButton, {\n    value: \"Femail\"\n  }), React.createElement(Text, null, \"Non-hispanic origin\")))), React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(View, {\n    style: styles.questionBtn\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Root', {\n        name: 'Jane'\n      });\n    }\n  }, React.createElement(Text, {\n    style: styles.btnStyle\n  }, \"NEXT\"))), React.createElement(View, {\n    style: styles.questionProgress\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: {\n      textAlign: 'right',\n      color: '#ACB7C2'\n    }\n  }, \"Completed \\xA0 \", React.createElement(Text, {\n    style: {\n      color: '#30C0E9'\n    }\n  }, \"99%\"))), React.createElement(View, {\n    style: styles.progGender\n  }, React.createElement(View, {\n    style: styles.progGenderINId\n  }))), React.createElement(View, {\n    style: styles.subTextView1\n  }, React.createElement(TouchableOpacity, null, React.createElement(Text, {\n    style: styles.subTextSkip\n  }, \"Skip\")))));\n};\n\nexport default QuestionId;","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/map/screens/questionScreens/QuestionId.tsx"],"names":["styles","React","RadioButton","Text","QuestionId","navigation","route","useState","value","setValue","questionWrap","questionHeader","goBack","width","height","margin","require","subTextView_title","title","radioBtn","newValue","radioText","flex","questionBtn","navigate","name","btnStyle","questionProgress","textAlign","color","progGender","progGenderINId","subTextView1","subTextSkip"],"mappings":"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","sourcesContent":["import { styles } from './styles.js';\nimport { Image, View, TouchableOpacity, } from 'react-native';\nimport { NavigationProp } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { RadioButton, } from 'react-native-paper';\nimport { Text } from '../../components/Themed';\nimport * as Progress from 'react-native-progress';\n\n\nconst QuestionId = ({ navigation, route }: { navigation: NavigationProp<any>, route: any }) => {\n    const [value, setValue] = React.useState('first');\n    return (\n        <View style={styles.questionWrap}>\n            <View style={styles.questionHeader}>\n                <TouchableOpacity\n                    onPress={() => navigation.goBack()} >\n                    <Image style={{ width: 50, height: 50, margin: 25 }} source={require('../../assets/icons/backBtn.png')} />\n                </TouchableOpacity>\n            </View>\n            <View style={styles.subTextView_title}>\n                <Text style={styles.title}>Which do you indentify best with?</Text>\n            </View>\n            <View style={styles.radioBtn}>\n                <RadioButton.Group onValueChange={newValue => setValue(newValue)} value={value}>\n                    <View style={styles.radioText}>\n                        <RadioButton value=\"Mail\" /><Text>Hispanic orgin</Text>\n                    </View>\n                    <View style={styles.radioText}>\n                        <RadioButton value=\"Femail\" /><Text>Non-hispanic origin</Text>\n                    </View>\n                </RadioButton.Group>\n\n            </View>\n            <View style={{ flex: 1 }}>\n                <View style={styles.questionBtn} >\n                    <TouchableOpacity\n                        onPress={() => navigation.navigate('Root', { name: 'Jane' })}\n                    >\n                        <Text style={styles.btnStyle} >NEXT</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={styles.questionProgress} >\n                    <View><Text style={{ textAlign: 'right', color: '#ACB7C2' }}>Completed &nbsp; <Text style={{ color: '#30C0E9' }}>99%</Text></Text></View>\n                    <View style={styles.progGender}>\n                        <View style={styles.progGenderINId}></View>\n                    </View>\n                </View>\n                <View style={styles.subTextView1}>\n                    <TouchableOpacity\n                    // onPress={() => navigation.navigate('ForgotPass', { name: 'Jane' })}\n                    >\n                        <Text style={styles.subTextSkip} >Skip</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n};\nexport default QuestionId\n"]},"metadata":{},"sourceType":"module"}