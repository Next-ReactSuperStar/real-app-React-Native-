{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport MapView, { Marker } from 'react-native-maps';\nimport HomeSearchShowResult from \"../../components/homeSearch/HomeSearchShowResult\";\nimport HomePopularItem from \"../../components/home/HomePopularItem\";\nimport LocationLookingImage from \"../../components/home/LocationLookingImage\";\n\nvar FavoriteScreen = function FavoriteScreen(_ref) {\n  var navigation = _ref.navigation;\n  var mapRef = useRef(null);\n  var initialPolygon = useRef({\n    polygons: [],\n    distance: 0,\n    lastLatLng: undefined,\n    initialLatLng: undefined,\n    centerLatLng: undefined\n  });\n  useEffect(function () {\n    fetchUsers();\n  }, [FavoriteScreen]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMap = _useState2[0],\n      setShowMap = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapData = _useState4[0],\n      setMapData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modePolygon = _useState6[0],\n      setPolygonCreated = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isActiveDraw = _useState8[0],\n      setDrawMode = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isReady = _useState10[0],\n      setIsReady = _useState10[1];\n\n  var win = Dimensions.get('window');\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      markerNum = _useState12[0],\n      setMarkerNum = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      noteShow = _useState14[0],\n      setNoteShow = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      chooseMarker = _useState16[0],\n      setChooseMarker = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedItem = _useState18[0],\n      setSelectedItem = _useState18[1];\n\n  var handleMapReady = useCallback(function () {\n    return mapRef.current && setIsReady(true);\n  }, []);\n\n  var _useState19 = useState({\n    latitude: 29.861145,\n    longitude: -95.44252,\n    latitudeDelta: 0.15,\n    longitudeDelta: 0.0421\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      initRegion = _useState20[0],\n      setInitRegion = _useState20[1];\n\n  var fetchUsers = function fetchUsers() {\n    return _regeneratorRuntime.async(function fetchUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/089c839e-5a55-471f-ac5d-62dba5f4fa65/getFilteredListingsAtLocation?latitude=29.858924&longitude=-95.587894&radius=0.02', {\n              method: 'get',\n              headers: {\n                'Content-Type': \"application/json\",\n                'password': 'passwordAUA'\n              }\n            }).then(function (response) {\n              return response.json();\n            }).then(function (responseJson) {\n              console.log('responseJson:----', responseJson.data);\n            }).catch(function (error) {}));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var zoomOut = function zoomOut() {\n    var camera;\n    return _regeneratorRuntime.async(function zoomOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (mapRef.current) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", false);\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(mapRef.current.getCamera());\n\n          case 4:\n            camera = _context2.sent;\n\n            if (Platform.OS === 'ios') {\n              mapRef.current.animateCamera({\n                altitude: camera.altitude * 0.9\n              });\n            }\n\n            if (Platform.OS === 'android') {\n              mapRef.current.animateCamera({\n                zoom: camera.zoom - 1\n              });\n            }\n\n            setChooseMarker(false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var zoomIn = function zoomIn() {\n    var camera;\n    return _regeneratorRuntime.async(function zoomIn$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(mapRef.current.getCamera());\n\n          case 2:\n            camera = _context3.sent;\n\n            if (Platform.OS === 'ios') {\n              mapRef.current.animateCamera({\n                altitude: camera.altitude * 1.1\n              });\n            }\n\n            if (Platform.OS === 'android') {\n              mapRef.current.animateCamera({\n                zoom: camera.zoom + 1\n              });\n            }\n\n            setChooseMarker(false);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var markerClick = function markerClick(num) {\n    setMarkerNum(num);\n    setChooseMarker(true);\n  };\n\n  var hasMarkerClose = useCallback(function (item, index) {\n    return React.createElement(Marker, {\n      key: index,\n      coordinate: mapData[index],\n      onPress: function onPress() {\n        return markerClick(index);\n      }\n    });\n  }, []);\n\n  var closeNote = function closeNote() {\n    setNoteShow(false);\n  };\n\n  var _chooseItem = function chooseItem(num) {\n    console.log(num);\n    setShowMap(true);\n    setChooseMarker(true);\n    setInitRegion({\n      latitude: mapData[num].latitude,\n      longitude: mapData[num].longitude,\n      latitudeDelta: initRegion.latitudeDelta,\n      longitudeDelta: initRegion.longitudeDelta\n    });\n    setSelectedItem(num);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      padding: 20,\n      paddingBottom: 5,\n      backgroundColor: 'white'\n    }\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"My Favorites\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginLeft: 'auto'\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {},\n    onPress: function onPress() {\n      return setShowMap(!showMap);\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginTop: 15,\n      marginLeft: 10,\n      marginRight: 10\n    },\n    source: showMap ? require(\"../../../assets/icons/Group.png\") : require(\"../../../assets/icons/Group_(2).png\")\n  })), React.createElement(TouchableOpacity, null, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginTop: 15,\n      marginRight: 5\n    },\n    source: require(\"../../../assets/icons/sliders.png\")\n  })))), React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, showMap ? React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(MapView, {\n    ref: mapRef,\n    style: {\n      flex: 1\n    },\n    onMapReady: handleMapReady,\n    provider: 'google',\n    showsMyLocationButton: true,\n    showsUserLocation: true,\n    zoomControlEnabled: true,\n    zoomEnabled: true,\n    zoomTapEnabled: true,\n    showsScale: true,\n    initialRegion: initRegion\n  }, mapData.map(function (item, index) {\n    return React.createElement(Marker, {\n      key: index,\n      coordinate: {\n        latitude: item.latitude,\n        longitude: item.longitude\n      },\n      onPress: function onPress() {\n        return markerClick(index);\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../../assets/icons/maker_custom.png\"),\n      style: {\n        width: 39,\n        height: 84\n      },\n      resizeMode: \"contain\"\n    }));\n  })), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 20,\n      right: 20,\n      backgroundColor: 'white',\n      borderRadius: 30\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 5,\n      paddingTop: 5,\n      paddingBottom: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderRadius: 30\n    },\n    onPress: zoomIn\n  }, React.createElement(Image, {\n    style: {\n      width: 35,\n      height: 35,\n      borderRadius: 30\n    },\n    source: require(\"../../../assets/icons/Vector_(7).png\")\n  }))), React.createElement(View, {\n    style: {\n      padding: 5,\n      paddingTop: 5,\n      paddingBottom: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderRadius: 30\n    },\n    onPress: zoomOut\n  }, React.createElement(Image, {\n    style: {\n      width: 35,\n      height: 20,\n      borderRadius: 30\n    },\n    source: require(\"../../../assets/icons/Vector_(8).png\")\n  })))), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 110,\n      right: 20\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      padding: 8,\n      backgroundColor: 'white',\n      borderRadius: 30\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 28,\n      height: 28\n    },\n    source: require(\"../../../assets/icons/Group_(3).png\")\n  }))), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      marginLeft: win.width / 2 - 130,\n      marginTop: (win.height - 60) / 4\n    }\n  }, chooseMarker && React.createElement(LocationLookingImage, {\n    indexData: mapData[selectedItem]\n  })), React.createElement(View, {\n    style: {\n      width: win.width - 30,\n      marginLeft: 15,\n      position: 'absolute',\n      bottom: 90\n    }\n  }, noteShow && React.createElement(HomeSearchShowResult, {\n    indexData: {\n      resultNum: mapData.length\n    },\n    closeNote: closeNote\n  }))) : React.createElement(View, {\n    style: styles.homeview\n  }, React.createElement(View, {\n    style: {\n      flex: 18,\n      backgroundColor: 'white',\n      width: '99%'\n    }\n  }, React.createElement(ScrollView, null, mapData.map(function (item, index) {\n    return React.createElement(HomePopularItem, {\n      key: index,\n      indexData: item,\n      num: index,\n      chooseItem: function chooseItem() {\n        return _chooseItem(index);\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      height: 95\n    }\n  }))));\n};\n\nexport default FavoriteScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  button: {\n    top: '10%',\n    right: '10%',\n    position: 'absolute',\n    backgroundColor: 'tomato',\n    padding: 16,\n    zIndex: 4,\n    borderRadius: 18\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '600',\n    paddingRight: '15%',\n    color: 'black'\n  },\n  homeview: {\n    flex: 1,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/New folder/screens/tabScreens/favorite/FavoriteScreen.tsx"],"names":["React","useState","useCallback","useRef","useEffect","MapView","Marker","HomeSearchShowResult","HomePopularItem","LocationLookingImage","FavoriteScreen","navigation","mapRef","initialPolygon","polygons","distance","lastLatLng","undefined","initialLatLng","centerLatLng","fetchUsers","showMap","setShowMap","mapData","setMapData","modePolygon","setPolygonCreated","isActiveDraw","setDrawMode","isReady","setIsReady","win","Dimensions","get","markerNum","setMarkerNum","noteShow","setNoteShow","chooseMarker","setChooseMarker","selectedItem","setSelectedItem","handleMapReady","current","latitude","longitude","latitudeDelta","longitudeDelta","initRegion","setInitRegion","fetch","method","headers","then","response","json","responseJson","console","log","data","catch","error","zoomOut","getCamera","camera","Platform","OS","animateCamera","altitude","zoom","zoomIn","markerClick","num","hasMarkerClose","item","index","closeNote","chooseItem","styles","container","flexDirection","padding","paddingBottom","backgroundColor","title","marginLeft","width","height","marginTop","marginRight","require","flex","map","position","top","right","borderRadius","paddingTop","bottom","resultNum","length","homeview","StyleSheet","create","button","zIndex","fontSize","fontWeight","paddingRight","color"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, Platform, Text, Image,Dimensions, ScrollView } from 'react-native';\r\n// import MapView, { ILocationProps, IDrawResult, TouchPoint, Marker,PROVIDER_GOOGLE } from '../component';\r\nimport { TextInput } from 'react-native-paper';\r\nimport MapView, {Marker} from 'react-native-maps';\r\n// import { MarkerLocation } from '../assets';\r\n// import AnimatedPolygon from '../components/polygon';\r\nimport HomeSearchResult from '../../components/homeSearch/HomeSearchResult';\r\nimport HomeSearchShowResult from '../../components/homeSearch/HomeSearchShowResult';\r\nimport { RootTabScreenProps } from '../../../types';\r\nimport axios from 'axios'\r\n// import {fetchApi} from '../../service'\r\nimport HomePopularItem from '../../components/home/HomePopularItem';\r\nimport HomeLookingImage from '../../components/home/HomeLookingImage';\r\nimport LocationLookingImage from '../../components/home/LocationLookingImage';\r\nimport HomeNearItem from '../../components/home/HomeNearItem';\r\nimport HomeNearItem_1 from '../../components/home/HomeNearItem_1';\r\nimport { menuBtn } from '../../../constants/menuBtn';\r\n\r\nconst FavoriteScreen = ({ navigation }: RootTabScreenProps<any>) => {\r\n    \r\n    const mapRef = useRef<any>(null);\r\n\r\n    const initialPolygon:any = useRef({\r\n        polygons: [],\r\n        distance: 0,\r\n        lastLatLng: undefined,\r\n        initialLatLng: undefined,\r\n        centerLatLng: undefined,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n      },[FavoriteScreen]);\r\n\r\n    const [showMap, setShowMap]=useState<boolean>(false)\r\n    const [mapData, setMapData]=useState<any>([])\r\n    const [modePolygon, setPolygonCreated] = useState<boolean>(false);\r\n\r\n    const [isActiveDraw, setDrawMode] = useState<boolean>(false);\r\n    const [isReady, setIsReady] = useState<boolean>(false);\r\n    // const [points, setPoints] = useState<TouchPoint[]>([]);\r\n    const win = Dimensions.get('window');\r\n    // const [polygon, setPolygon] = useState<IDrawResult>(initialPolygon.current);\r\n    const [markerNum, setMarkerNum] = useState<any>(0);\r\n    const [noteShow, setNoteShow] = useState<boolean>(false);\r\n    const [chooseMarker, setChooseMarker] = useState<boolean>(false);\r\n    const [selectedItem, setSelectedItem] = useState<any>(0);\r\n    const handleMapReady = useCallback(() => mapRef.current && setIsReady(true), []);\r\n\r\n    const [initRegion, setInitRegion] = useState({\r\n        latitude: 29.861145,\r\n        longitude: -95.44252,\r\n        latitudeDelta: 0.15,\r\n        longitudeDelta: 0.0421,\r\n    });\r\n    // const [text, onChangeText] = React.useState('');\r\n    // const [number, onChangeNumber] = React.useState(null);\r\n    // const [getBtninfo, onBtnPress] = React.useState(null)\r\n    \r\n    // const [getMenuBtn, setMenuBtn] = React.useState(menuBtn)\r\n  \r\n    // const setMenubutton=(data:any)=>{\r\n    //   menuBtn.forEach((item:any,index:any) => {\r\n    //     getMenuBtn[index]={title:item.title, state:index==data?true:false}\r\n    //   })\r\n    //   setMenuBtn([...getMenuBtn])\r\n    // }\r\n\r\n\r\n    const fetchUsers = async () => {\r\n\r\n        // console.log('fetch mapdata start:-----',mapData)\r\n        await fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/089c839e-5a55-471f-ac5d-62dba5f4fa65/getFilteredListingsAtLocation?latitude=29.858924&longitude=-95.587894&radius=0.02',\r\n        {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'password': 'passwordAUA'\r\n            },\r\n\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log('responseJson:----',responseJson.data)\r\n            // responseJson.data && setMapData(responseJson.data)\r\n        }).catch((error) => {\r\n        })\r\n\r\n      };\r\n\r\n    // const handleRemovePolygon = useCallback(() => {\r\n    //     setPolygon(initialPolygon.current);\r\n    //     setPolygonCreated(false);\r\n    // }, []);\r\n\r\n    // const handleClear = useCallback(() => {\r\n    //     setPolygon(initialPolygon.current);\r\n    //     setPolygonCreated(false);\r\n    //     setPoints([]);\r\n    // }, []);\r\n\r\n    // const handleIsDraw = useCallback(() => {\r\n    //     setChooseMarker(false)\r\n    //     if (!mapRef.current) return;\r\n    //     if (!isActiveDraw) {\r\n    //         handleClear()\r\n    //     }\r\n    //     setDrawMode((prevMode) => !prevMode);\r\n    // }, [handleClear, isActiveDraw]);\r\n\r\n    // const handleCanvasEndDraw = useCallback((locations) => {\r\n           \r\n    //     setNoteShow(true)\r\n    //     zoomCenterPolygon(locations.centerLatLng).then(() => {\r\n    //         setPolygon(locations);\r\n    //         setPolygonCreated(true);\r\n    //     });\r\n    //     setDrawMode((prevMode) => !prevMode);\r\n    //     console.log('locations:',noteShow)\r\n    // }, []);\r\n\r\n    // const zoomCenterPolygon = async (center: ILocationProps) => {\r\n    //     if (!mapRef.current) return;\r\n    //     const camera = await mapRef.current.getCamera();\r\n    //     if (Platform.OS === 'ios') {\r\n    //         mapRef.current.animateCamera({\r\n    //             center: center,\r\n    //         });\r\n    //     }\r\n    //     if (Platform.OS === 'android') {\r\n    //     }\r\n    // };\r\n\r\n    const zoomOut = async () => {\r\n        if (!mapRef.current) return false;\r\n\r\n        const camera = await mapRef.current.getCamera();\r\n        if (Platform.OS === 'ios') {\r\n            mapRef.current.animateCamera({ altitude: camera.altitude * 0.9 });\r\n        }\r\n\r\n        if (Platform.OS === 'android') {\r\n            mapRef.current.animateCamera({ zoom: camera.zoom - 1 });\r\n        }\r\n        setChooseMarker(false)\r\n    };\r\n\r\n    const zoomIn = async () => {\r\n        const camera = await mapRef.current.getCamera();\r\n        if (Platform.OS === 'ios') {\r\n            mapRef.current.animateCamera({ altitude: camera.altitude * 1.1 });\r\n        }\r\n\r\n        if (Platform.OS === 'android') {\r\n            mapRef.current.animateCamera({ zoom: camera.zoom + 1 });\r\n        }\r\n        setChooseMarker(false)\r\n    }\r\n\r\n    const markerClick = (num:any) => {\r\n        setMarkerNum(num)\r\n        setChooseMarker(true)\r\n    }\r\n\r\n    const hasMarkerClose = useCallback((item,index)=>\r\n      <Marker key={index} coordinate={mapData[index]} onPress={() => markerClick(index)}>\r\n        </Marker>,[])\r\n\r\n    // const handlePolygon = useCallback(\r\n    //     (item, index) => <AnimatedPolygon key={index} coordinates={polygon.polygons} />,\r\n    //     [polygon.polygons],\r\n    // );\r\n\r\n    // const onChangePoints = useCallback((value) => {\r\n    //     setPoints(value);\r\n    // }, []);\r\n\r\n    const closeNote = () => {\r\n        setNoteShow(false)\r\n    }\r\n\r\n    const chooseItem = (num:any) =>{\r\n      console.log(num)\r\n      setShowMap(true)\r\n      setChooseMarker(true)\r\n      setInitRegion({latitude:mapData[num].latitude,\r\n                    longitude:mapData[num].longitude,\r\n                    latitudeDelta:initRegion.latitudeDelta,\r\n                    longitudeDelta:initRegion.longitudeDelta})\r\n      setSelectedItem(num)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={{flexDirection:'row',padding:20,paddingBottom:5,backgroundColor:'white'}}>\r\n              <Text style={styles.title}>My Favorites</Text>\r\n              <View style={{flexDirection:'row',marginLeft:'auto'}}>\r\n                <TouchableOpacity style={{}} onPress={() => setShowMap(!showMap)}>\r\n                    <Image style={{width:20,height:20,marginTop:15,marginLeft:10,marginRight:10}} source={showMap?require('../../../assets/icons/Group.png'):require('../../../assets/icons/Group_(2).png')}/>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                  <Image style={{width:20,height:20,marginTop:15,marginRight:5}} source={require('../../../assets/icons/sliders.png')}/>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            <View style={{flex: 1}}>\r\n                {showMap?<View style={{flex: 1}}>\r\n                    <MapView\r\n                        ref={mapRef}\r\n                        style={{ flex: 1 }}\r\n                        // points={points}\r\n                        // widthLine={5}\r\n                        // onEndDraw={handleCanvasEndDraw}\r\n                        // isDrawMode={isActiveDraw}\r\n                        onMapReady={handleMapReady}\r\n                        // onStartDraw={handleClear}\r\n                        // createdPolygon={modePolygon}\r\n                        // onChangePoints={onChangePoints}\r\n                        // backgroundCanvas={'rgba(0, 0, 0, 0.0)'}\r\n                        provider={'google'}\r\n                        showsMyLocationButton={true}\r\n                        showsUserLocation={true}\r\n                        zoomControlEnabled={true}\r\n                        zoomEnabled={true}\r\n                        zoomTapEnabled={true}\r\n                        showsScale={true}\r\n                        initialRegion={initRegion}\r\n                    >\r\n                      {mapData.map((item:any, index:any)=><Marker key={index}\r\n                            coordinate={{latitude: item.latitude, longitude: item.longitude}}\r\n                            onPress={() => markerClick(index)}\r\n                            >\r\n                          <Image source={require('../../../assets/icons/maker_custom.png')} style={{width: 39, height: 84 }} resizeMode=\"contain\"></Image>\r\n                        </Marker>)\r\n                      }\r\n                        {/* {\r\n                        isReady &&\r\n                            modePolygon &&\r\n                            polygon.polygons &&\r\n                            polygon.polygons.length > 0 && (\r\n                                <> */}\r\n                                    {/* {mapData.map(hasMarkerClose)} */}\r\n                                    {/* {polygon.polygons.map(handlePolygon)} */}\r\n                                {/* </>\r\n                            ) \r\n                            } */}\r\n                    </MapView>\r\n                    <View style={{position:'absolute',top:20,right:20,backgroundColor:'white',borderRadius:30}}>\r\n                        <View style={{padding:5,paddingTop:5,paddingBottom:5}}>\r\n                            <TouchableOpacity style={{borderRadius:30}} onPress={zoomIn}>\r\n                                <Image style={{width:35,height:35,borderRadius:30}} source={ require('../../../assets/icons/Vector_(7).png')}/>\r\n                            </TouchableOpacity> \r\n                        </View>\r\n                        <View style={{padding:5,paddingTop:5,paddingBottom:13}}>\r\n                            <TouchableOpacity style={{borderRadius:30}} onPress={zoomOut}>\r\n                                <Image style={{width:35,height:20,borderRadius:30}} source={require('../../../assets/icons/Vector_(8).png')}/>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={{position:'absolute',top:110,right:20}}>\r\n                        <TouchableOpacity style={{padding:8,backgroundColor:'white',borderRadius:30}}>\r\n                            <Image style={{width:28,height:28}} source={ require('../../../assets/icons/Group_(3).png')}/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {/* <View style={{position:'absolute',top:163,right:20,borderRadius:40}}>\r\n                        <TouchableOpacity onPress={handleIsDraw}>\r\n                            {isActiveDraw ? (\r\n                                <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular_(1).png')}/>\r\n                            ) : (\r\n                                <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular.png')}/>\r\n                            )}\r\n                            \r\n                        </TouchableOpacity>\r\n                    </View> */}\r\n                    <View style={{position:'absolute',marginLeft:win.width/2-130,marginTop:(win.height-60)/4}}>\r\n                      {chooseMarker && <LocationLookingImage indexData={mapData[selectedItem]}></LocationLookingImage>  }\r\n                    </View>\r\n                    <View style={{width:win.width-30,marginLeft:15,position:'absolute',bottom:90}}>\r\n                        {noteShow && <HomeSearchShowResult indexData={{resultNum:mapData.length}} closeNote={closeNote}/>}\r\n                    </View>\r\n                </View>\r\n                :\r\n\r\n                <View style={styles.homeview}>\r\n                    <View style={{flex:18,backgroundColor:'white',width:'99%'}}>\r\n                      <ScrollView>\r\n                        {mapData.map((item:any,index:any)=>{return<HomePopularItem key={index} indexData={item} num={index} chooseItem={()=>chooseItem(index)}/>})}\r\n                      </ScrollView>\r\n                    </View>\r\n                  <View style={{height:95}}>\r\n\r\n                  </View>\r\n                </View>}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default FavoriteScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        top: '10%',\r\n        right: '10%',\r\n        position: 'absolute',\r\n        backgroundColor: 'tomato',\r\n        padding: 16,\r\n        zIndex: 4,\r\n        borderRadius: 18,\r\n    },\r\n    title: {\r\n      fontSize: 28,\r\n      fontWeight: '600',\r\n      paddingRight:'15%',\r\n      color:'black'\r\n    },\r\n    homeview:{\r\n      flex:1,\r\n        // padding:20,\r\n        // paddingTop:0,\r\n        // paddingBottom:0,\r\n        backgroundColor:'white'\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}