{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { styles } from \"./styles.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport WheelPicker from 'react-native-wheely';\nimport { Text } from \"../../components/Themed\";\n\nvar QuestionAge = function QuestionAge(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedIndex = _useState2[0],\n      setSelectedIndex = _useState2[1];\n\n  var age = [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60];\n  useEffect(function () {}, [selectedIndex]);\n  return React.createElement(View, {\n    style: styles.questionWrap\n  }, React.createElement(View, {\n    style: styles.questionHeader\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50,\n      margin: 25\n    },\n    source: require(\"../../assets/icons/backBtn.png\")\n  }))), React.createElement(View, {\n    style: styles.subTextView_title\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"What's your age?\")), React.createElement(View, {\n    style: styles.picker\n  }, React.createElement(View, {\n    style: styles.pickerWrap\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      borderBottomColor: '#30C0E9',\n      borderBottomWidth: 1,\n      position: 'absolute',\n      top: '40%',\n      right: '100%',\n      width: '100%'\n    }\n  }), React.createElement(WheelPicker, {\n    selectedIndex: 1,\n    options: age,\n    onChange: function onChange(index) {\n      return setSelectedIndex(index);\n    },\n    itemTextStyle: styles.wheelTitle,\n    selectedIndicatorStyle: styles.selectedWheel\n  }), React.createElement(Text, {\n    style: {\n      borderBottomColor: '#30C0E9',\n      borderBottomWidth: 1,\n      position: 'absolute',\n      top: '40%',\n      left: '100%',\n      width: '100%'\n    }\n  })))), React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(View, {\n    style: styles.questionBtn\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('QuestionId');\n    }\n  }, React.createElement(Text, {\n    style: styles.btnStyle\n  }, \"NEXT\"))), React.createElement(View, {\n    style: styles.questionProgress\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: {\n      textAlign: 'right',\n      color: '#ACB7C2'\n    }\n  }, \"Completed \\xA0 \", React.createElement(Text, {\n    style: {\n      color: '#7BC67E'\n    }\n  }, \"60%\"))), React.createElement(View, {\n    style: styles.progGender\n  }, React.createElement(View, {\n    style: styles.progGenderINAge\n  }))), React.createElement(View, {\n    style: styles.subTextView1\n  }, React.createElement(TouchableOpacity, null, React.createElement(Text, {\n    style: styles.subTextSkip\n  }, \"Skip\")))));\n};\n\nexport default QuestionAge;","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/screens/questionScreens/QuestionAge.tsx"],"names":["styles","React","useState","useEffect","WheelPicker","Text","QuestionAge","navigation","route","selectedIndex","setSelectedIndex","age","questionWrap","questionHeader","goBack","width","height","margin","require","subTextView_title","title","picker","pickerWrap","display","justifyContent","borderBottomColor","borderBottomWidth","position","top","right","index","wheelTitle","selectedWheel","left","flex","questionBtn","navigate","btnStyle","questionProgress","textAlign","color","progGender","progGenderINAge","subTextView1","subTextSkip"],"mappings":";AAAA,SAASA,MAAT;;;;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,IAAT;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4E;AAAA,MAAzEC,UAAyE,QAAzEA,UAAyE;AAAA,MAA7DC,KAA6D,QAA7DA,KAA6D;;AAC5F,kBAA0CN,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOO,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,EAAiD,EAAjD,EACR,EADQ,EACJ,EADI,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EACgD,EADhD,EACoD,EADpD,EACwD,EADxD,EAC4D,EAD5D,EAER,EAFQ,EAEJ,EAFI,EAEA,EAFA,EAEI,EAFJ,EAEQ,EAFR,EAEY,EAFZ,EAEgB,EAFhB,EAEoB,EAFpB,EAEwB,EAFxB,EAE4B,EAF5B,CAAZ;AAGAR,EAAAA,SAAS,CAAC,YAAM,CACf,CADQ,EACN,CAACM,aAAD,CADM,CAAT;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACY;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa;AAApB,KACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACO,MAAX,EAAN;AAAA;AADb,KAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBC,MAAAA,MAAM,EAAE;AAAjC,KAAd;AAAqD,IAAA,MAAM,EAAEC,OAAO;AAApE,IAFJ,CADJ,CADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACoB;AAApB,wBADJ,CAPJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC;AAAb,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,iBAAiB,EAAE,SADhB;AAEHC,MAAAA,iBAAiB,EAAE,CAFhB;AAGHC,MAAAA,QAAQ,EAAE,UAHP;AAIHC,MAAAA,GAAG,EAAE,KAJF;AAKHC,MAAAA,KAAK,EAAE,MALJ;AAMHd,MAAAA,KAAK,EAAE;AANJ;AADX,IADJ,EAWI,oBAAC,WAAD;AACI,IAAA,aAAa,EAAE,CADnB;AAEI,IAAA,OAAO,EAAEJ,GAFb;AAGI,IAAA,QAAQ,EAAE,kBAACmB,KAAD;AAAA,aAAWpB,gBAAgB,CAACoB,KAAD,CAA3B;AAAA,KAHd;AAII,IAAA,aAAa,EAAE9B,MAAM,CAAC+B,UAJ1B;AAKI,IAAA,sBAAsB,EAAE/B,MAAM,CAACgC;AALnC,IAXJ,EAkBI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHP,MAAAA,iBAAiB,EAAE,SADhB;AAEHC,MAAAA,iBAAiB,EAAE,CAFhB;AAGHC,MAAAA,QAAQ,EAAE,UAHP;AAIHC,MAAAA,GAAG,EAAE,KAJF;AAKHK,MAAAA,IAAI,EAAE,MALH;AAMHlB,MAAAA,KAAK,EAAE;AANJ;AADX,IAlBJ,CADJ,CADJ,CAVJ,EA4CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEmB,MAAAA,IAAI,EAAE;AAAR;AAAb,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElC,MAAM,CAACmC;AAApB,KACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAM5B,UAAU,CAAC6B,QAAX,CAAoB,YAApB,CAAN;AAAA;AADb,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpC,MAAM,CAACqC;AAApB,YAHJ,CADJ,CADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErC,MAAM,CAACsC;AAApB,KACI,oBAAC,IAAD,QAAM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,OAAb;AAAsBC,MAAAA,KAAK,EAAE;AAA7B;AAAb,wBAAwE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT;AAAb,WAAxE,CAAN,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExC,MAAM,CAACyC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzC,MAAM,CAAC0C;AAApB,IADJ,CAFJ,CARJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1C,MAAM,CAAC2C;AAApB,KACI,oBAAC,gBAAD,QAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3C,MAAM,CAAC4C;AAApB,YAHJ,CADJ,CAdJ,CA5CJ,CADJ;AAqEH,CA5ED;;AA6EA,eAAetC,WAAf","sourcesContent":["import { styles } from './styles.js';\nimport { Image, View, TouchableOpacity, } from 'react-native';\nimport { NavigationProp } from '@react-navigation/native';\nimport React, { useState, useEffect } from 'react';\nimport WheelPicker from 'react-native-wheely';\nimport { Text } from '../../components/Themed';\n\n\nconst QuestionAge = ({ navigation, route }: { navigation: NavigationProp<any>, route: any }) => {\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    const age = [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n        33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\n        51, 52, 53, 54, 55, 56, 57, 58, 59, 60];\n    useEffect(() => {\n    }, [selectedIndex])\n    return (\n        <View style={styles.questionWrap}>\n            <View style={styles.questionHeader}>\n                <TouchableOpacity\n                    onPress={() => navigation.goBack()} >\n                    <Image style={{ width: 50, height: 50, margin: 25 }} source={require('../../assets/icons/backBtn.png')} />\n                </TouchableOpacity>\n            </View>\n            <View style={styles.subTextView_title}>\n                <Text style={styles.title}>What's your age?</Text>\n            </View>\n            <View style={styles.picker}>\n                <View style={styles.pickerWrap}>\n                    <View style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Text\n                            style={{\n                                borderBottomColor: '#30C0E9',\n                                borderBottomWidth: 1,\n                                position: 'absolute',\n                                top: '40%',\n                                right: '100%',\n                                width: '100%',\n                            }}\n                        ></Text>\n                        <WheelPicker\n                            selectedIndex={1}\n                            options={age}\n                            onChange={(index) => setSelectedIndex(index)}\n                            itemTextStyle={styles.wheelTitle}\n                            selectedIndicatorStyle={styles.selectedWheel}\n                        />\n                        <Text\n                            style={{\n                                borderBottomColor: '#30C0E9',\n                                borderBottomWidth: 1,\n                                position: 'absolute',\n                                top: '40%',\n                                left: '100%',\n                                width: '100%',\n                            }}\n                        ></Text>\n                    </View>\n                </View>\n\n            </View>\n            <View style={{ flex: 1 }}>\n                <View style={styles.questionBtn} >\n                    <TouchableOpacity\n                        onPress={() => navigation.navigate('QuestionId')}\n                    >\n                        <Text style={styles.btnStyle} >NEXT</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={styles.questionProgress} >\n                    <View><Text style={{ textAlign: 'right', color: '#ACB7C2' }}>Completed &nbsp; <Text style={{ color: '#7BC67E' }}>60%</Text></Text></View>\n                    <View style={styles.progGender}>\n                        <View style={styles.progGenderINAge}></View>\n                    </View>\n                </View>\n                <View style={styles.subTextView1}>\n                    <TouchableOpacity\n                    // onPress={() => navigation.navigate('ForgotPass', { name: 'Jane' })}\n                    >\n                        <Text style={styles.subTextSkip} >Skip</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n};\nexport default QuestionAge\n"]},"metadata":{},"sourceType":"module"}