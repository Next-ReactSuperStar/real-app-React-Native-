{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput } from 'react-native-paper';\nimport MapView, { Marker } from 'react-native-maps';\nimport HomeSearchResult from \"../../components/homeSearch/HomeSearchResult\";\nimport HomeSearchShowResult from \"../../components/homeSearch/HomeSearchShowResult\";\nimport HomeListItem from \"../../components/home/HomeListItem\";\nimport Geolocation from 'react-native-geolocation-service';\nimport { menuBtn } from \"../../../constants/menuBtn\";\n\nvar SearchScreen = function SearchScreen(_ref) {\n  var navigation = _ref.navigation;\n  var mapRef = useRef(null);\n  var initialPolygon = useRef({\n    polygons: [],\n    distance: 0,\n    lastLatLng: undefined,\n    initialLatLng: undefined,\n    centerLatLng: undefined\n  });\n  useEffect(function () {\n    fetchUsers();\n  }, [SearchScreen]);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMap = _useState2[0],\n      setShowMap = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapData = _useState4[0],\n      setMapData = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modePolygon = _useState6[0],\n      setPolygonCreated = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isActiveDraw = _useState8[0],\n      setDrawMode = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isReady = _useState10[0],\n      setIsReady = _useState10[1];\n\n  var win = Dimensions.get('window');\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      markerNum = _useState12[0],\n      setMarkerNum = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      noteShow = _useState14[0],\n      setNoteShow = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      chooseMarker = _useState16[0],\n      setChooseMarker = _useState16[1];\n\n  var handleMapReady = useCallback(function () {\n    return mapRef.current && setIsReady(true);\n  }, []);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      text = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      number = _React$useState4[0],\n      onChangeNumber = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      getBtninfo = _React$useState6[0],\n      onBtnPress = _React$useState6[1];\n\n  var _React$useState7 = React.useState(menuBtn),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      getMenuBtn = _React$useState8[0],\n      setMenuBtn = _React$useState8[1];\n\n  var _useState17 = useState({\n    latitude: 29.861145,\n    longitude: -95.44252,\n    latitudeDelta: 0.15,\n    longitudeDelta: 0.0421\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      initRegion = _useState18[0],\n      setInitRegion = _useState18[1];\n\n  var fetchUsers = function fetchUsers() {\n    Geolocation.getCurrentPosition(function (position) {\n      fetchData({\n        latitude: 29.861145,\n        longitude: -95.44252\n      });\n    }, function (error) {\n      console.log(error.code, error.message);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 10000\n    });\n  };\n\n  var fetchData = function fetchData(location) {\n    fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/089c839e-5a55-471f-ac5d-62dba5f4fa65/getFilteredListingsAtLocation?latitude=' + location.latitude + '&longitude=' + location.longitude + '&radius=0.02', {\n      method: 'get',\n      headers: {\n        'Content-Type': \"application/json\",\n        'password': 'passwordAUA'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      console.log('responseJson:----', responseJson);\n      setMapData(_toConsumableArray(replaceImageUrl(responseJson)));\n    }).catch(function (error) {\n      fetchData(location);\n    });\n  };\n\n  var replaceImageUrl = function replaceImageUrl(data) {\n    data.map(function (item, index) {\n      item.photosUrl.map(function (item1, index1) {\n        return item1[0] == 'S' || item1[0] == 's' ? data[index].photosUrl[index1] = 'https://zillowbucket.s3.us-east-2.amazonaws.com/' + data[index].photosUrl[index1].slice(18) : data[index].photosUrl[index1] = data[index].photosUrl[index1];\n      });\n    });\n    console.log(data);\n    return data;\n  };\n\n  var zoomOut = function zoomOut() {\n    var camera;\n    return _regeneratorRuntime.async(function zoomOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (mapRef.current) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(mapRef.current.getCamera());\n\n          case 4:\n            camera = _context.sent;\n\n            if (Platform.OS === 'ios') {\n              mapRef.current.animateCamera({\n                altitude: camera.altitude * 0.9\n              });\n            }\n\n            if (Platform.OS === 'android') {\n              mapRef.current.animateCamera({\n                zoom: camera.zoom - 1\n              });\n            }\n\n            setChooseMarker(false);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var zoomIn = function zoomIn() {\n    var camera;\n    return _regeneratorRuntime.async(function zoomIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(mapRef.current.getCamera());\n\n          case 2:\n            camera = _context2.sent;\n\n            if (Platform.OS === 'ios') {\n              mapRef.current.animateCamera({\n                altitude: camera.altitude * 1.1\n              });\n            }\n\n            if (Platform.OS === 'android') {\n              mapRef.current.animateCamera({\n                zoom: camera.zoom + 1\n              });\n            }\n\n            setChooseMarker(false);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var markerClick = function markerClick(num) {\n    setMarkerNum(num);\n    setChooseMarker(true);\n  };\n\n  var closeNote = function closeNote() {\n    setNoteShow(false);\n  };\n\n  var _chooseItem = function chooseItem(num) {\n    console.log(num);\n    setShowMap(true);\n    setChooseMarker(true);\n    setMarkerNum(num);\n    setInitRegion({\n      latitude: mapData[num].latitude,\n      longitude: mapData[num].longitude,\n      latitudeDelta: initRegion.latitudeDelta,\n      longitudeDelta: initRegion.longitudeDelta\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      padding: 20,\n      paddingBottom: 5,\n      backgroundColor: 'white'\n    }\n  }, React.createElement(TextInput, {\n    autoComplete: 'pass',\n    mode: \"outlined\",\n    placeholder: \"Search address, or near you\",\n    outlineColor: \"#F2F3F7\",\n    activeOutlineColor: \"#888888\",\n    style: {\n      height: 40,\n      borderRadius: 10,\n      fontSize: 14,\n      width: win.width - 110\n    },\n    right: React.createElement(TextInput.Icon, {\n      style: {\n        marginTop: 15\n      },\n      name: \"microphone\",\n      color: \"#D0D8E0\"\n    })\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowMap(!showMap);\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginTop: 15,\n      marginLeft: 10,\n      marginRight: 10\n    },\n    source: showMap ? require(\"../../../assets/icons/Group.png\") : require(\"../../../assets/icons/Group_(2).png\")\n  })), React.createElement(TouchableOpacity, null, React.createElement(Image, {\n    style: {\n      width: 20,\n      height: 20,\n      marginTop: 15,\n      marginRight: 5\n    },\n    source: require(\"../../../assets/icons/sliders.png\")\n  }))), React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, showMap ? React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(MapView, {\n    ref: mapRef,\n    style: {\n      flex: 1\n    },\n    onMapReady: handleMapReady,\n    provider: 'google',\n    showsMyLocationButton: true,\n    showsUserLocation: true,\n    zoomControlEnabled: true,\n    zoomEnabled: true,\n    zoomTapEnabled: true,\n    showsScale: true,\n    initialRegion: initRegion\n  }, Platform.OS != 'web' && mapData.map(function (item, index) {\n    return React.createElement(Marker, {\n      key: index,\n      coordinate: {\n        latitude: mapData[index].latitude,\n        longitude: mapData[index].longitude\n      },\n      onPress: function onPress() {\n        return markerClick(index);\n      }\n    }, React.createElement(Image, {\n      source: require(\"../../../assets/icons/maker_custom.png\"),\n      style: {\n        width: 39,\n        height: 84\n      },\n      resizeMode: \"contain\"\n    }));\n  })), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 20,\n      right: 20,\n      backgroundColor: 'white',\n      borderRadius: 30\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 5,\n      paddingTop: 5,\n      paddingBottom: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderRadius: 30\n    },\n    onPress: zoomIn\n  }, React.createElement(Image, {\n    style: {\n      width: 35,\n      height: 35,\n      borderRadius: 30\n    },\n    source: require(\"../../../assets/icons/Vector_(7).png\")\n  }))), React.createElement(View, {\n    style: {\n      padding: 5,\n      paddingTop: 5,\n      paddingBottom: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      borderRadius: 30\n    },\n    onPress: zoomOut\n  }, React.createElement(Image, {\n    style: {\n      width: 35,\n      height: 20,\n      borderRadius: 30\n    },\n    source: require(\"../../../assets/icons/Vector_(8).png\")\n  })))), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 110,\n      right: 20\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      padding: 8,\n      backgroundColor: 'white',\n      borderRadius: 30\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 28,\n      height: 28\n    },\n    source: require(\"../../../assets/icons/Group_(3).png\")\n  }))), React.createElement(View, {\n    style: {\n      width: win.width - 30,\n      marginLeft: 15,\n      position: 'absolute',\n      bottom: 90\n    }\n  }, chooseMarker && React.createElement(HomeSearchResult, {\n    indexData: mapData[markerNum]\n  }), noteShow && React.createElement(HomeSearchShowResult, {\n    indexData: {\n      resultNum: mapData.length\n    },\n    closeNote: closeNote\n  }))) : React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.homeview\n  }, React.createElement(View, {\n    style: {\n      flex: 18,\n      backgroundColor: 'white',\n      width: '100%'\n    }\n  }, React.createElement(ScrollView, null, mapData.map(function (item, index) {\n    return React.createElement(HomeListItem, {\n      key: index,\n      indexData: item,\n      num: index,\n      chooseItem: function chooseItem() {\n        return _chooseItem(index);\n      }\n    });\n  }))), React.createElement(View, {\n    style: {\n      height: 100\n    }\n  }))))));\n};\n\nexport default SearchScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  button: {\n    top: '10%',\n    right: '10%',\n    position: 'absolute',\n    backgroundColor: 'tomato',\n    padding: 16,\n    zIndex: 4,\n    borderRadius: 18\n  },\n  title: {\n    color: '#FFFFFF',\n    fontSize: 12\n  },\n  homeview: {\n    padding: 15,\n    paddingTop: 0,\n    paddingBottom: 0,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["D:/working/ReactNative/Real_estate/New folder/screens/tabScreens/homesearch/SearchScreen.tsx"],"names":["React","useState","useCallback","useRef","useEffect","TextInput","MapView","Marker","HomeSearchResult","HomeSearchShowResult","HomeListItem","Geolocation","menuBtn","SearchScreen","navigation","mapRef","initialPolygon","polygons","distance","lastLatLng","undefined","initialLatLng","centerLatLng","fetchUsers","showMap","setShowMap","mapData","setMapData","modePolygon","setPolygonCreated","isActiveDraw","setDrawMode","isReady","setIsReady","win","Dimensions","get","markerNum","setMarkerNum","noteShow","setNoteShow","chooseMarker","setChooseMarker","handleMapReady","current","text","onChangeText","number","onChangeNumber","getBtninfo","onBtnPress","getMenuBtn","setMenuBtn","latitude","longitude","latitudeDelta","longitudeDelta","initRegion","setInitRegion","getCurrentPosition","position","fetchData","error","console","log","code","message","enableHighAccuracy","timeout","maximumAge","location","fetch","method","headers","then","response","json","responseJson","replaceImageUrl","catch","data","map","item","index","photosUrl","item1","index1","slice","zoomOut","getCamera","camera","Platform","OS","animateCamera","altitude","zoom","zoomIn","markerClick","num","closeNote","chooseItem","styles","container","flexDirection","padding","paddingBottom","backgroundColor","height","borderRadius","fontSize","width","marginTop","marginLeft","marginRight","require","flex","top","right","paddingTop","bottom","resultNum","length","homeview","StyleSheet","create","button","zIndex","title","color"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, Platform, Text, Image,Dimensions, ScrollView } from 'react-native';\r\nimport { TextInput } from 'react-native-paper';\r\nimport MapView, { Marker } from 'react-native-maps'\r\nimport HomeSearchResult from '../../components/homeSearch/HomeSearchResult';\r\nimport HomeSearchShowResult from '../../components/homeSearch/HomeSearchShowResult';\r\nimport { RootTabScreenProps } from '../../../types';\r\nimport HomeListItem from '../../components/home/HomeListItem';\r\nimport Geolocation from 'react-native-geolocation-service';\r\nimport { menuBtn } from '../../../constants/menuBtn';\r\n\r\nconst SearchScreen = ({ navigation }: RootTabScreenProps<any>) => {\r\n    \r\n    const mapRef = useRef<any>(null);\r\n\r\n    const initialPolygon:any = useRef({\r\n        polygons: [],\r\n        distance: 0,\r\n        lastLatLng: undefined,\r\n        initialLatLng: undefined,\r\n        centerLatLng: undefined,\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        fetchUsers()\r\n      },[SearchScreen]);\r\n\r\n    const [showMap, setShowMap]=useState<boolean>(true)\r\n    const [mapData, setMapData]=useState<any>([])\r\n    const [modePolygon, setPolygonCreated] = useState<boolean>(false);\r\n\r\n    const [isActiveDraw, setDrawMode] = useState<boolean>(false);\r\n    const [isReady, setIsReady] = useState<boolean>(false);\r\n    // const [points, setPoints] = useState<TouchPoint[]>([]);\r\n    const win = Dimensions.get('window');\r\n    // const [polygon, setPolygon] = useState<IDrawResult>(initialPolygon.current);\r\n    const [markerNum, setMarkerNum] = useState<any>(0);\r\n    const [noteShow, setNoteShow] = useState<boolean>(false);\r\n    const [chooseMarker, setChooseMarker] = useState<boolean>(false);\r\n    const handleMapReady = useCallback(() => mapRef.current && setIsReady(true), []);\r\n\r\n    const [text, onChangeText] = React.useState('');\r\n    const [number, onChangeNumber] = React.useState(null);\r\n    const [getBtninfo, onBtnPress] = React.useState(null)\r\n    \r\n    const [getMenuBtn, setMenuBtn] = React.useState(menuBtn)\r\n  \r\n    const [initRegion, setInitRegion] = useState({\r\n        latitude: 29.861145,\r\n        longitude: -95.44252,\r\n        latitudeDelta: 0.15,\r\n        longitudeDelta: 0.0421,\r\n    });\r\n\r\n    \r\n    const fetchUsers = () => {\r\n        Geolocation.getCurrentPosition(\r\n            (position) => {\r\n                \r\n                fetchData({latitude:29.861145,longitude: -95.44252})\r\n                // fetchData(position.coords)\r\n                // setInitRegion({\r\n                //     latitude: position.coords.latitude,\r\n                //     longitude: position.coords.longitude,\r\n                //     latitudeDelta: 0.15,\r\n                //     longitudeDelta: 0.0421,\r\n                // })\r\n            },\r\n            (error) => {\r\n                // See error code charts below.\r\n                console.log(error.code, error.message);\r\n            },\r\n            { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }\r\n          );\r\n      };\r\n    const fetchData = (location:any)=>{\r\n        \r\n        fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/089c839e-5a55-471f-ac5d-62dba5f4fa65/getFilteredListingsAtLocation?latitude='+location.latitude+'&longitude='+location.longitude+'&radius=0.02',\r\n        \r\n        {\r\n            method: 'get',\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'password': 'passwordAUA'\r\n            },\r\n\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log('responseJson:----',responseJson)\r\n            setMapData([...replaceImageUrl(responseJson)])\r\n            // responseJson.data && setMapData(responseJson.data)\r\n        }).catch((error) => {\r\n            fetchData(location)\r\n        })\r\n    }\r\n    const replaceImageUrl = (data:any) => {\r\n        data.map((item:any,index:any)=>{item.photosUrl.map((item1:any,index1:any)=>\r\n            item1[0]=='S' || item1[0]=='s'?data[index].photosUrl[index1]='https://zillowbucket.s3.us-east-2.amazonaws.com/'+data[index].photosUrl[index1].slice(18)\r\n            :data[index].photosUrl[index1]=data[index].photosUrl[index1]\r\n        )})\r\n        console.log(data)\r\n        return data\r\n    }\r\n        \r\n\r\n    const zoomOut = async () => {\r\n        if (!mapRef.current) return false;\r\n\r\n        const camera = await mapRef.current.getCamera();\r\n        if (Platform.OS === 'ios') {\r\n            mapRef.current.animateCamera({ altitude: camera.altitude * 0.9 });\r\n        }\r\n\r\n        if (Platform.OS === 'android') {\r\n            mapRef.current.animateCamera({ zoom: camera.zoom - 1 });\r\n        }\r\n        setChooseMarker(false)\r\n    };\r\n\r\n    const zoomIn = async () => {\r\n        const camera = await mapRef.current.getCamera();\r\n        if (Platform.OS === 'ios') {\r\n            mapRef.current.animateCamera({ altitude: camera.altitude * 1.1 });\r\n        }\r\n\r\n        if (Platform.OS === 'android') {\r\n            mapRef.current.animateCamera({ zoom: camera.zoom + 1 });\r\n        }\r\n        setChooseMarker(false)\r\n    }\r\n\r\n    const markerClick = (num:any) => {\r\n        setMarkerNum(num)\r\n        setChooseMarker(true)\r\n    }\r\n\r\n    const closeNote = () => {\r\n        setNoteShow(false)\r\n    }\r\n\r\n    const chooseItem = (num:any) => {\r\n        console.log(num)\r\n        setShowMap(true)\r\n        setChooseMarker(true)\r\n        setMarkerNum(num)\r\n        setInitRegion({latitude:mapData[num].latitude,\r\n                      longitude:mapData[num].longitude,\r\n                      latitudeDelta:initRegion.latitudeDelta,\r\n                      longitudeDelta:initRegion.longitudeDelta})\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={{flexDirection:'row',padding:20,paddingBottom:5,backgroundColor:'white'}}>\r\n                <TextInput\r\n                        autoComplete={'pass'}\r\n                        mode=\"outlined\"\r\n                        placeholder='Search address, or near you'\r\n                        outlineColor='#F2F3F7'\r\n                        activeOutlineColor='#888888'\r\n                        style={{height:40,borderRadius:10,fontSize:14,\r\n                            width:win.width-110}}\r\n                        right={<TextInput.Icon style={{marginTop:15}} name=\"microphone\" color='#D0D8E0'/>}\r\n                    />\r\n                <TouchableOpacity  onPress={() => setShowMap(!showMap)}>\r\n                    <Image style={{width:20,height:20,marginTop:15,marginLeft:10,marginRight:10}} source={showMap?require('../../../assets/icons/Group.png'):require('../../../assets/icons/Group_(2).png')}/>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity>\r\n                  <Image style={{width:20,height:20,marginTop:15,marginRight:5}} source={require('../../../assets/icons/sliders.png')}/>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={{flex: 1}}>\r\n                {showMap?<View style={{flex: 1}}>\r\n                    <MapView\r\n                        ref={mapRef}\r\n                        style={{ flex: 1 }}\r\n                        onMapReady={handleMapReady}\r\n                        provider={'google'}\r\n                        showsMyLocationButton={true}\r\n                        showsUserLocation={true}\r\n                        zoomControlEnabled={true}\r\n                        zoomEnabled={true}\r\n                        zoomTapEnabled={true}\r\n                        showsScale={true}\r\n                        initialRegion={initRegion}\r\n                    >\r\n                       { Platform.OS != 'web' && mapData.map((item:any,index:any)=>{\r\n                        return <Marker key={index} coordinate={{ latitude:mapData[index].latitude, longitude:mapData[index].longitude }} onPress={() => markerClick(index)}>\r\n                            <Image source={require('../../../assets/icons/maker_custom.png')} style={{width: 39, height: 84 }} resizeMode=\"contain\"></Image>\r\n                        </Marker>})\r\n                        }\r\n                        {/* {\r\n                        isReady &&\r\n                            modePolygon &&\r\n                            polygon.polygons &&\r\n                            polygon.polygons.length > 0 && (\r\n                                <> */}\r\n                                    {/* {hasMarkerClose} */}\r\n                                    {/* {polygon.polygons.map(handlePolygon)} */}\r\n                                {/* </>\r\n                            ) \r\n                            } */}\r\n                    </MapView>\r\n                    <View style={{position:'absolute',top:20,right:20,backgroundColor:'white',borderRadius:30}}>\r\n                        <View style={{padding:5,paddingTop:5,paddingBottom:5}}>\r\n                            <TouchableOpacity style={{borderRadius:30}} onPress={zoomIn}>\r\n                                <Image style={{width:35,height:35,borderRadius:30}} source={ require('../../../assets/icons/Vector_(7).png')}/>\r\n                            </TouchableOpacity> \r\n                        </View>\r\n                        <View style={{padding:5,paddingTop:5,paddingBottom:13}}>\r\n                            <TouchableOpacity style={{borderRadius:30}} onPress={zoomOut}>\r\n                                <Image style={{width:35,height:20,borderRadius:30}} source={require('../../../assets/icons/Vector_(8).png')}/>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <View style={{position:'absolute',top:110,right:20}}>\r\n                        <TouchableOpacity style={{padding:8,backgroundColor:'white',borderRadius:30}}>\r\n                            <Image style={{width:28,height:28}} source={ require('../../../assets/icons/Group_(3).png')}/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {/* <View style={{position:'absolute',top:163,right:20,borderRadius:40}}>\r\n                        <TouchableOpacity onPress={handleIsDraw}>\r\n                            {isActiveDraw ? (\r\n                                <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular_(1).png')}/>\r\n                            ) : (\r\n                                <Image style={{width:45,height:45,borderRadius:18}} source={require('../../../assets/icons/fluent_hand-draw-24-regular.png')}/>\r\n                            )}\r\n                            \r\n                        </TouchableOpacity>\r\n                    </View> */}\r\n                    <View style={{width:win.width-30,marginLeft:15,position:'absolute',bottom:90}}>\r\n                        {chooseMarker && <HomeSearchResult indexData={mapData[markerNum]} />}\r\n                        {noteShow && <HomeSearchShowResult indexData={{resultNum:mapData.length}} closeNote={closeNote}/>}\r\n                    </View>\r\n                </View>\r\n                :\r\n\r\n                <View style={{flex:1}}>\r\n                    <ScrollView>\r\n                        <View style={styles.homeview}>\r\n                            <View style={{flex:18,backgroundColor:'white',width:'100%'}}>\r\n                                <ScrollView>\r\n                                    {mapData.map((item:any,index:any)=>{return<HomeListItem key={index} indexData={item} num={index} chooseItem={()=>chooseItem(index)}/>})}\r\n                                </ScrollView>\r\n                            </View>\r\n                            <View style={{height:100}}>\r\n\r\n                            </View>\r\n                        </View>\r\n                    </ScrollView>\r\n                </View>}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default SearchScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    button: {\r\n        top: '10%',\r\n        right: '10%',\r\n        position: 'absolute',\r\n        backgroundColor: 'tomato',\r\n        padding: 16,\r\n        zIndex: 4,\r\n        borderRadius: 18,\r\n    },\r\n    title: {\r\n        color: '#FFFFFF',\r\n        fontSize: 12,\r\n    },\r\n    homeview:{\r\n        padding:15,\r\n        paddingTop:0,\r\n        paddingBottom:0,\r\n        backgroundColor:'white'\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}