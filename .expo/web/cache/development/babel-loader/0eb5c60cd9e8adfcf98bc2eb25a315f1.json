{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { styles } from \"../../screens/authScreens/styles.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React, { useState, useEffect } from 'react';\nimport { Text } from \"../../components/Themed\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useToast } from \"react-native-toast-notifications\";\nimport Auth from '@aws-amplify/auth';\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from 'react-native-confirmation-code-field';\nvar stylees = StyleSheet.create({\n  root: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 30\n  },\n  codeFieldRoot: {\n    marginTop: 20,\n    height: 50\n  },\n  cell: {\n    color: '#cacaca',\n    width: 40,\n    height: 55,\n    lineHeight: 38,\n    fontSize: 24,\n    borderWidth: 2,\n    borderColor: '#00000030',\n    textAlign: 'center',\n    borderRadius: 12\n  },\n  focusCell: {\n    borderColor: '#000'\n  }\n});\nvar CELL_COUNT = 6;\n\nvar EnterCode = function EnterCode(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resendVisible = _useState4[0],\n      setResendVisible = _useState4[1];\n\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: CELL_COUNT\n  });\n  var toast = useToast();\n\n  var _useClearByFocusCell = useClearByFocusCell({\n    value: value,\n    setValue: setValue\n  }),\n      _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n      props = _useClearByFocusCell2[0],\n      getCellOnLayoutHandler = _useClearByFocusCell2[1];\n\n  useEffect(function () {\n    if (value.length == 6) {\n      var _route$params = route.params,\n          username = _route$params.username,\n          password = _route$params.password,\n          screen = _route$params.screen;\n\n      if (screen == 'otp-verification') {\n        Auth.confirmSignUp(username, value).then(function () {\n          Auth.signIn(username, password).then(function _callee(user) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    navigation.navigate('Root', {\n                      name: username\n                    });\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }).catch(function (err) {\n            navigation.navigate('Login');\n          });\n        }).catch(function (err) {\n          if (!err.message) {\n            toast.show('Something went wrong, please contact support!', {\n              type: \"danger\",\n              dangerColor: '#FF737F',\n              duration: 4000,\n              animationType: \"slide-in\"\n            });\n          } else {\n            Alert.alert(err.message);\n            toast.show(err.message, {\n              type: \"danger\",\n              dangerColor: '#FF737F',\n              duration: 4000,\n              animationType: \"slide-in\"\n            });\n          }\n        });\n      } else if (screen == 'forgot-password') {\n        navigation.navigate('CreatePassword', {\n          username: username,\n          otp: value\n        });\n      } else {\n        navigation.navigate('Welcome');\n      }\n    }\n  }, [value]);\n\n  var onResend = function onResend() {\n    var username = route.params.username;\n    setResendVisible(false);\n    Auth.resendSignUp(username).then(function () {}).catch(function (err) {\n      if (!err.message) {\n        toast.show('Something went wrong, please contact support!', {\n          type: \"danger\",\n          dangerColor: '#FF737F',\n          duration: 4000,\n          animationType: \"slide-in\"\n        });\n      } else {\n        toast.show(err.message, {\n          type: \"danger\",\n          dangerColor: '#FF737F',\n          duration: 4000,\n          animationType: \"slide-in\"\n        });\n      }\n    });\n    setTimeout(function () {\n      setResendVisible(true);\n    }, 30000);\n  };\n\n  return React.createElement(View, {\n    style: styles.loginWrap\n  }, React.createElement(View, {\n    style: {\n      width: 80\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50,\n      marginLeft: '5%'\n    },\n    source: require(\"../../assets/icons/backBtn.png\")\n  }))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: {\n      marginBottom: 10\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      paddingLeft: '5%',\n      paddingRight: '5%'\n    }\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Check email\")), React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      paddingLeft: '5%',\n      paddingRight: '5%'\n    }\n  }, React.createElement(Text, {\n    style: styles.subTextForgot\n  }, \"Enter the code that we sent to your email\"))), React.createElement(View, {\n    style: styles.subTextView1\n  }, React.createElement(SafeAreaView, {\n    style: stylees.root\n  }, React.createElement(CodeField, _extends({\n    ref: ref\n  }, props, {\n    value: value,\n    onChangeText: setValue,\n    cellCount: CELL_COUNT,\n    rootStyle: stylees.codeFieldRoot,\n    keyboardType: \"number-pad\",\n    textContentType: \"oneTimeCode\",\n    renderCell: function renderCell(_ref2) {\n      var index = _ref2.index,\n          symbol = _ref2.symbol,\n          isFocused = _ref2.isFocused;\n      return React.createElement(Text, {\n        key: index,\n        style: [stylees.cell, isFocused && stylees.focusCell],\n        onLayout: getCellOnLayoutHandler(index)\n      }, symbol || (isFocused ? React.createElement(Cursor, null) : null));\n    }\n  })))), resendVisible ? React.createElement(View, {\n    style: {\n      padding: '7%',\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onResend\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.subText), {}, {\n      color: '#000',\n      fontWeight: '700'\n    })\n  }, \"Resend Code\"))) : React.createElement(View, {\n    style: {\n      padding: '7%',\n      width: '100%',\n      height: 50,\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.subText), {}, {\n      alignSelf: 'center',\n      marginTop: '10%'\n    })\n  }, \"Please wait for next 30 seconds to demand code again !\")), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 3\n    }\n  }));\n};\n\nexport default EnterCode;","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/screens/authScreens/EnterCodeScreen.tsx"],"names":["styles","React","useState","useEffect","Text","useToast","Auth","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","stylees","StyleSheet","create","root","flex","padding","title","textAlign","fontSize","codeFieldRoot","marginTop","height","cell","color","width","lineHeight","borderWidth","borderColor","borderRadius","focusCell","CELL_COUNT","EnterCode","navigation","route","value","setValue","resendVisible","setResendVisible","ref","cellCount","toast","props","getCellOnLayoutHandler","length","params","username","password","screen","confirmSignUp","then","signIn","user","navigate","name","catch","err","message","show","type","dangerColor","duration","animationType","Alert","alert","otp","onResend","resendSignUp","setTimeout","loginWrap","goBack","marginLeft","require","display","alignItems","marginBottom","paddingLeft","paddingRight","subTextForgot","subTextView1","index","symbol","isFocused","justifyContent","subText","fontWeight","alignSelf"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT;;;;;;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT;;AAEA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SACCC,SADD,EAECC,MAFD,EAGCC,gBAHD,EAICC,mBAJD,QAKO,sCALP;AAOA,IAAMC,OAAO,GAAGC,UAAU,CAACC,MAAX,CAAkB;AACjCC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAD2B;AAEjCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,QAAQ,EAAE;AAAjC,GAF0B;AAGjCC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,SAAS,EAAE,EAAb;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAHkB;AAIjCC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLH,IAAAA,MAAM,EAAE,EAHH;AAILI,IAAAA,UAAU,EAAE,EAJP;AAKLP,IAAAA,QAAQ,EAAE,EALL;AAMLQ,IAAAA,WAAW,EAAE,CANR;AAOLC,IAAAA,WAAW,EAAE,WAPR;AAQLV,IAAAA,SAAS,EAAE,QARN;AASLW,IAAAA,YAAY,EAAE;AATT,GAJ2B;AAejCC,EAAAA,SAAS,EAAE;AACVF,IAAAA,WAAW,EAAE;AADH;AAfsB,CAAlB,CAAhB;AAoBA,IAAMG,UAAU,GAAG,CAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA4E;AAAA,MAAzEC,UAAyE,QAAzEA,UAAyE;AAAA,MAA7DC,KAA6D,QAA7DA,KAA6D;;AAC7F,kBAA0BhC,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOiC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA0ClC,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOmC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,GAAG,GAAG9B,gBAAgB,CAAC;AAAE0B,IAAAA,KAAK,EAALA,KAAF;AAASK,IAAAA,SAAS,EAAET;AAApB,GAAD,CAA5B;AACA,MAAMU,KAAK,GAAGpC,QAAQ,EAAtB;;AACA,6BAAwCK,mBAAmB,CAAC;AAC3DyB,IAAAA,KAAK,EAALA,KAD2D;AAE3DC,IAAAA,QAAQ,EAARA;AAF2D,GAAD,CAA3D;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,sBAAd;;AAKAxC,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIgC,KAAK,CAACS,MAAN,IAAgB,CAApB,EAAuB;AACtB,0BAAuCV,KAAK,CAACW,MAA7C;AAAA,UAAQC,QAAR,iBAAQA,QAAR;AAAA,UAAkBC,QAAlB,iBAAkBA,QAAlB;AAAA,UAA4BC,MAA5B,iBAA4BA,MAA5B;;AAEA,UAAIA,MAAM,IAAI,kBAAd,EAAkC;AACjC1C,QAAAA,IAAI,CAAC2C,aAAL,CAAmBH,QAAnB,EAA6BX,KAA7B,EAAoCe,IAApC,CAAyC,YAAM;AAC9C5C,UAAAA,IAAI,CAAC6C,MAAL,CAAYL,QAAZ,EAAsBC,QAAtB,EACEG,IADF,CACO,iBAAOE,IAAP;AAAA;AAAA;AAAA;AAAA;AACLnB,oBAAAA,UAAU,CAACoB,QAAX,CAAoB,MAApB,EAA4B;AAAEC,sBAAAA,IAAI,EAAER;AAAR,qBAA5B;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADP,EAIES,KAJF,CAIQ,UAACC,GAAD,EAAS;AACfvB,YAAAA,UAAU,CAACoB,QAAX,CAAoB,OAApB;AACA,WANF;AAOA,SARD,EAQGE,KARH,CAQS,UAACC,GAAD,EAAS;AACjB,cAAI,CAACA,GAAG,CAACC,OAAT,EAAkB;AACjBhB,YAAAA,KAAK,CAACiB,IAAN,CAAW,+CAAX,EAA4D;AAC3DC,cAAAA,IAAI,EAAE,QADqD;AAE3DC,cAAAA,WAAW,EAAE,SAF8C;AAG3DC,cAAAA,QAAQ,EAAE,IAHiD;AAI3DC,cAAAA,aAAa,EAAE;AAJ4C,aAA5D;AAOA,WARD,MAQO;AACNC,YAAAA,KAAK,CAACC,KAAN,CAAYR,GAAG,CAACC,OAAhB;AACAhB,YAAAA,KAAK,CAACiB,IAAN,CAAWF,GAAG,CAACC,OAAf,EAAwB;AACvBE,cAAAA,IAAI,EAAE,QADiB;AAEvBC,cAAAA,WAAW,EAAE,SAFU;AAGvBC,cAAAA,QAAQ,EAAE,IAHa;AAIvBC,cAAAA,aAAa,EAAE;AAJQ,aAAxB;AAMA;AACD,SA1BD;AA2BA,OA5BD,MA4BO,IAAId,MAAM,IAAI,iBAAd,EAAiC;AACvCf,QAAAA,UAAU,CAACoB,QAAX,CAAoB,gBAApB,EAAsC;AAAEP,UAAAA,QAAQ,EAARA,QAAF;AAAYmB,UAAAA,GAAG,EAAE9B;AAAjB,SAAtC;AACA,OAFM,MAEA;AACNF,QAAAA,UAAU,CAACoB,QAAX,CAAoB,SAApB;AACA;AACD;AACD,GAtCQ,EAsCN,CAAClB,KAAD,CAtCM,CAAT;;AAwCA,MAAM+B,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACtB,QAAQpB,QAAR,GAAqBZ,KAAK,CAACW,MAA3B,CAAQC,QAAR;AACAR,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAhC,IAAAA,IAAI,CAAC6D,YAAL,CAAkBrB,QAAlB,EAA4BI,IAA5B,CAAiC,YAAM,CAEtC,CAFD,EAEGK,KAFH,CAES,UAACC,GAAD,EAAS;AACjB,UAAI,CAACA,GAAG,CAACC,OAAT,EAAkB;AACjBhB,QAAAA,KAAK,CAACiB,IAAN,CAAW,+CAAX,EAA4D;AAC3DC,UAAAA,IAAI,EAAE,QADqD;AAE3DC,UAAAA,WAAW,EAAE,SAF8C;AAG3DC,UAAAA,QAAQ,EAAE,IAHiD;AAI3DC,UAAAA,aAAa,EAAE;AAJ4C,SAA5D;AAOA,OARD,MAQO;AACNrB,QAAAA,KAAK,CAACiB,IAAN,CAAWF,GAAG,CAACC,OAAf,EAAwB;AACvBE,UAAAA,IAAI,EAAE,QADiB;AAEvBC,UAAAA,WAAW,EAAE,SAFU;AAGvBC,UAAAA,QAAQ,EAAE,IAHa;AAIvBC,UAAAA,aAAa,EAAE;AAJQ,SAAxB;AAOA;AACD,KApBD;AAqBAM,IAAAA,UAAU,CAAC,YAAM;AAChB9B,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,KAFS,EAEP,KAFO,CAAV;AAGA,GA3BD;;AA6BA,SAEC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtC,MAAM,CAACqE;AAApB,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5C,MAAAA,KAAK,EAAE;AAAT;AAAb,KACC,oBAAC,gBAAD;AACC,IAAA,OAAO,EAAE;AAAA,aAAMQ,UAAU,CAACqC,MAAX,EAAN;AAAA;AADV,KAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAE7C,MAAAA,KAAK,EAAE,EAAT;AAAaH,MAAAA,MAAM,EAAE,EAArB;AAAyBiD,MAAAA,UAAU,EAAE;AAArC,KAAd;AAA2D,IAAA,MAAM,EAAEC,OAAO;AAA1E,IAFD,CADD,CADD,EAOC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyC3D,MAAAA,IAAI,EAAE;AAA/C;AAAb,IAPD,EAQC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4D,MAAAA,YAAY,EAAE;AAAhB;AAAb,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,UAAU,EAAE,QAAd;AAAwBE,MAAAA,WAAW,EAAE,IAArC;AAA2CC,MAAAA,YAAY,EAAE;AAAzD;AAAb,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7E,MAAM,CAACiB;AAApB,mBADD,CADD,EAIC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEyD,MAAAA,UAAU,EAAE,QAAd;AAAwBE,MAAAA,WAAW,EAAE,IAArC;AAA2CC,MAAAA,YAAY,EAAE;AAAzD;AAAb,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7E,MAAM,CAAC8E;AAApB,iDADD,CAJD,CARD,EAgBC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9E,MAAM,CAAC+E;AAApB,KACC,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEpE,OAAO,CAACG;AAA7B,KACC,oBAAC,SAAD;AACC,IAAA,GAAG,EAAEyB;AADN,KAEKG,KAFL;AAGC,IAAA,KAAK,EAAEP,KAHR;AAIC,IAAA,YAAY,EAAEC,QAJf;AAKC,IAAA,SAAS,EAAEL,UALZ;AAMC,IAAA,SAAS,EAAEpB,OAAO,CAACS,aANpB;AAOC,IAAA,YAAY,EAAC,YAPd;AAQC,IAAA,eAAe,EAAC,aARjB;AASC,IAAA,UAAU,EAAE;AAAA,UAAG4D,KAAH,SAAGA,KAAH;AAAA,UAAUC,MAAV,SAAUA,MAAV;AAAA,UAAkBC,SAAlB,SAAkBA,SAAlB;AAAA,aACX,oBAAC,IAAD;AACC,QAAA,GAAG,EAAEF,KADN;AAEC,QAAA,KAAK,EAAE,CAACrE,OAAO,CAACY,IAAT,EAAe2D,SAAS,IAAIvE,OAAO,CAACmB,SAApC,CAFR;AAGC,QAAA,QAAQ,EAAEa,sBAAsB,CAACqC,KAAD;AAHjC,SAIEC,MAAM,KAAKC,SAAS,GAAG,oBAAC,MAAD,OAAH,GAAgB,IAA9B,CAJR,CADW;AAAA;AATb,KADD,CADD,CAhBD,EAwCE7C,aAAa,GACV,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErB,MAAAA,OAAO,EAAE,IAAX;AAAiBS,MAAAA,KAAK,EAAE,MAAxB;AAAgC0D,MAAAA,cAAc,EAAE,QAAhD;AAA0DT,MAAAA,UAAU,EAAE;AAAtE;AAAb,KACD,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAER;AAA3B,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOlE,MAAM,CAACoF,OAAd;AAAuB5D,MAAAA,KAAK,EAAE,MAA9B;AAAsC6D,MAAAA,UAAU,EAAE;AAAlD;AAAX,mBADD,CADC,CADU,GAMV,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErE,MAAAA,OAAO,EAAE,IAAX;AAAiBS,MAAAA,KAAK,EAAE,MAAxB;AAAgCH,MAAAA,MAAM,EAAE,EAAxC;AAA4C6D,MAAAA,cAAc,EAAE;AAA5D;AAAb,KACD,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAOnF,MAAM,CAACoF,OAAd;AAAuBE,MAAAA,SAAS,EAAE,QAAlC;AAA4CjE,MAAAA,SAAS,EAAE;AAAvD;AAAX,8DADC,CA9CL,EAkDC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEoD,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyC3D,MAAAA,IAAI,EAAE;AAA/C;AAAb,IAlDD,CAFD;AAuDA,CAtID;;AAwIA,eAAeiB,SAAf","sourcesContent":["import { styles } from '../../screens/authScreens/styles.js';\nimport { Image, View, ScrollView, TouchableOpacity, StyleSheet, Alert } from 'react-native';\nimport { NavigationProp } from '@react-navigation/native';\nimport React, { useState, useEffect } from 'react';\nimport { Text } from '../../components/Themed';\nimport { SafeAreaView, } from 'react-native';\nimport { useToast } from \"react-native-toast-notifications\";\nimport Auth from '@aws-amplify/auth';\n\nimport {\n\tCodeField,\n\tCursor,\n\tuseBlurOnFulfill,\n\tuseClearByFocusCell,\n} from 'react-native-confirmation-code-field';\n\nconst stylees = StyleSheet.create({\n\troot: { flex: 1, padding: 20 },\n\ttitle: { textAlign: 'center', fontSize: 30 },\n\tcodeFieldRoot: { marginTop: 20, height: 50 },\n\tcell: {\n\t\tcolor: '#cacaca',\n\t\twidth: 40,\n\t\theight: 55,\n\t\tlineHeight: 38,\n\t\tfontSize: 24,\n\t\tborderWidth: 2,\n\t\tborderColor: '#00000030',\n\t\ttextAlign: 'center',\n\t\tborderRadius: 12\n\t},\n\tfocusCell: {\n\t\tborderColor: '#000',\n\t},\n});\n\nconst CELL_COUNT = 6;\n\nconst EnterCode = ({ navigation, route }: { navigation: NavigationProp<any>, route: any }) => {\n\tconst [value, setValue] = useState('');\n\tconst [resendVisible, setResendVisible] = useState(true);\n\tconst ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });\n\tconst toast = useToast();\n\tconst [props, getCellOnLayoutHandler] = useClearByFocusCell({\n\t\tvalue,\n\t\tsetValue,\n\t});\n\n\tuseEffect(() => {\n\t\tif (value.length == 6) {\n\t\t\tconst { username, password, screen } = route.params;\n\n\t\t\tif (screen == 'otp-verification') {\n\t\t\t\tAuth.confirmSignUp(username, value).then(() => {\n\t\t\t\t\tAuth.signIn(username, password)\n\t\t\t\t\t\t.then(async (user) => {\n\t\t\t\t\t\t\tnavigation.navigate('Root', { name: username });\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tnavigation.navigate('Login');\n\t\t\t\t\t\t});\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tif (!err.message) {\n\t\t\t\t\t\ttoast.show('Something went wrong, please contact support!', {\n\t\t\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\t\t\tdangerColor: '#FF737F',\n\t\t\t\t\t\t\tduration: 4000,\n\t\t\t\t\t\t\tanimationType: \"slide-in\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// if (Platform.OS == 'android') ToastAndroid.showWithGravity('Something went wrong, please contact support!', ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAlert.alert(err.message);\n\t\t\t\t\t\ttoast.show(err.message, {\n\t\t\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\t\t\tdangerColor: '#FF737F',\n\t\t\t\t\t\t\tduration: 4000,\n\t\t\t\t\t\t\tanimationType: \"slide-in\",\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (screen == 'forgot-password') {\n\t\t\t\tnavigation.navigate('CreatePassword', { username, otp: value });\n\t\t\t} else {\n\t\t\t\tnavigation.navigate('Welcome');\n\t\t\t}\n\t\t}\n\t}, [value]);\n\n\tconst onResend = () => {\n\t\tconst { username } = route.params;\n\t\tsetResendVisible(false);\n\t\tAuth.resendSignUp(username).then(() => {\n\t\t\t// Alert.alert('Otp Resent');\n\t\t}).catch((err) => {\n\t\t\tif (!err.message) {\n\t\t\t\ttoast.show('Something went wrong, please contact support!', {\n\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\tdangerColor: '#FF737F',\n\t\t\t\t\tduration: 4000,\n\t\t\t\t\tanimationType: \"slide-in\",\n\t\t\t\t});\n\t\t\t\t// if (Platform.OS == 'android') ToastAndroid.showWithGravity('Something went wrong, please contact support!', ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n\t\t\t} else {\n\t\t\t\ttoast.show(err.message, {\n\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\tdangerColor: '#FF737F',\n\t\t\t\t\tduration: 4000,\n\t\t\t\t\tanimationType: \"slide-in\",\n\t\t\t\t});\n\t\t\t\t// if (Platform.OS == 'android') ToastAndroid.showWithGravity(err.message, ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n\t\t\t}\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tsetResendVisible(true);\n\t\t}, 30000);\n\t}\n\n\treturn (\n\t\t// <ScrollView>\n\t\t<View style={styles.loginWrap}>\n\t\t\t<View style={{ width: 80 }} >\n\t\t\t\t<TouchableOpacity\n\t\t\t\t\tonPress={() => navigation.goBack()} >\n\t\t\t\t\t<Image style={{ width: 50, height: 50, marginLeft: '5%' }} source={require('../../assets/icons/backBtn.png')} />\n\t\t\t\t</TouchableOpacity>\n\t\t\t</View>\n\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n\t\t\t<View style={{ marginBottom: 10 }}>\n\t\t\t\t<View style={{ alignItems: 'center', paddingLeft: '5%', paddingRight: '5%' }}>\n\t\t\t\t\t<Text style={styles.title}>Check email</Text>\n\t\t\t\t</View>\n\t\t\t\t<View style={{ alignItems: 'center', paddingLeft: '5%', paddingRight: '5%' }}>\n\t\t\t\t\t<Text style={styles.subTextForgot}>Enter the code that we sent to your email</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t\t<View style={styles.subTextView1}>\n\t\t\t\t<SafeAreaView style={stylees.root}>\n\t\t\t\t\t<CodeField\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChangeText={setValue}\n\t\t\t\t\t\tcellCount={CELL_COUNT}\n\t\t\t\t\t\trootStyle={stylees.codeFieldRoot}\n\t\t\t\t\t\tkeyboardType=\"number-pad\"\n\t\t\t\t\t\ttextContentType=\"oneTimeCode\"\n\t\t\t\t\t\trenderCell={({ index, symbol, isFocused }) => (\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tstyle={[stylees.cell, isFocused && stylees.focusCell]}\n\t\t\t\t\t\t\t\tonLayout={getCellOnLayoutHandler(index)}>\n\t\t\t\t\t\t\t\t{symbol || (isFocused ? <Cursor /> : null)}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</SafeAreaView>\n\t\t\t</View>\n\n\t\t\t{\n\t\t\t\tresendVisible\n\t\t\t\t\t? <View style={{ padding: '7%', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t\t<TouchableOpacity onPress={onResend}>\n\t\t\t\t\t\t\t<Text style={{ ...styles.subText, color: '#000', fontWeight: '700' }}>Resend Code</Text>\n\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t</View>\n\t\t\t\t\t: <View style={{ padding: '7%', width: '100%', height: 50, justifyContent: 'center' }}>\n\t\t\t\t\t\t<Text style={{ ...styles.subText, alignSelf: 'center', marginTop: '10%' }}>Please wait for next 30 seconds to demand code again !</Text>\n\t\t\t\t\t</View>\n\t\t\t}\n\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 3 }}></View>\n\t\t</View>\n\t);\n};\n\nexport default EnterCode;\n"]},"metadata":{},"sourceType":"module"}