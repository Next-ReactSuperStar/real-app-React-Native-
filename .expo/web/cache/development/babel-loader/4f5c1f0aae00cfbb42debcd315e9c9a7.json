{"ast":null,"code":"import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport Navigation from \"./navigation\";\nimport config from \"./aws-exports\";\nimport Amplify from '@aws-amplify/core';\nimport { ToastProvider } from 'react-native-toast-notifications';\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\nAmplify.configure(config);\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(Provider, {\n      store: store\n    }, React.createElement(ToastProvider, null, React.createElement(SafeAreaProvider, null, React.createElement(Navigation, {\n      colorScheme: 'light'\n    })))));\n  }\n}","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/App.tsx"],"names":["React","SafeAreaProvider","useCachedResources","Navigation","config","Amplify","ToastProvider","Provider","store","configure","App","isLoadingComplete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,kBAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;AAEAH,OAAO,CAACI,SAAR,CAAkBL,MAAlB;AAEA,eAAe,SAASM,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGT,kBAAkB,EAA5C;;AACA,MAAI,CAACS,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,0CACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAGH;AAAlB,OACE,oBAAC,aAAD,QACE,oBAAC,gBAAD,QACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAE;AAAzB,MADF,CADF,CADF,CADF,CADF;AAWD;AACF","sourcesContent":["import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from './hooks/useCachedResources';\nimport Navigation from './navigation';\nimport config from './aws-exports';\nimport Amplify from '@aws-amplify/core';\nimport { ToastProvider } from 'react-native-toast-notifications'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nAmplify.configure(config);\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <>\n        <Provider store={ store }>\n          <ToastProvider>\n            <SafeAreaProvider>\n              <Navigation colorScheme={'light'} />\n            </SafeAreaProvider>\n          </ToastProvider>\n        </Provider>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}