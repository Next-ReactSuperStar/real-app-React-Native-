{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { styles } from \"./styles.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState } from 'react';\nimport { Text } from \"../../components/Themed\";\nimport { TextInput } from 'react-native-paper';\nimport { useToast } from \"react-native-toast-notifications\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch } from 'react-redux';\nimport Auth from '@aws-amplify/auth';\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showPassword = _useState6[0],\n      setShowPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonLoader = _useState8[0],\n      setButtonLoader = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      username_error = _useState10[0],\n      setUsername_error = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password_error = _useState12[0],\n      setPassword_error = _useState12[1];\n\n  var dispatch = useDispatch();\n  var toast = useToast();\n\n  var onPress = function onPress() {\n    navigation.navigate('Register');\n  };\n\n  function userSignin() {\n    if (username) {\n      if (password) {\n        setButtonLoader(true);\n        var user = Auth.signIn(username, password).then(function _callee2(user) {\n          var user_value;\n          return _regeneratorRuntime.async(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  setButtonLoader(false);\n                  user_value = user.attributes;\n                  fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/socialId/' + user_value.sub, {\n                    method: 'get',\n                    headers: {\n                      'Content-Type': \"application/json\",\n                      'password': 'passwordAUA'\n                    }\n                  }).then(function (response) {\n                    return response.json();\n                  }).then(function _callee(responseJson) {\n                    return _regeneratorRuntime.async(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(responseJson.length !== 0)) {\n                              _context.next = 9;\n                              break;\n                            }\n\n                            console.log(\"UserID\", responseJson);\n                            _context.prev = 2;\n                            _context.next = 5;\n                            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user_data', JSON.stringify(responseJson)));\n\n                          case 5:\n                            _context.next = 9;\n                            break;\n\n                          case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](2);\n\n                          case 9:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, null, null, [[2, 7]], Promise);\n                  }).catch(function (error) {\n                    alert('error');\n                  });\n                  toast.show('Login success. You are now signed in.', {\n                    type: \"success\",\n                    successColor: \"#7BC67E\",\n                    duration: 4000,\n                    animationType: \"slide-in\"\n                  });\n                  _context2.prev = 4;\n                  _context2.next = 7;\n                  return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(user_value)));\n\n                case 7:\n                  _context2.next = 11;\n                  break;\n\n                case 9:\n                  _context2.prev = 9;\n                  _context2.t0 = _context2[\"catch\"](4);\n\n                case 11:\n                  navigation.navigate('Root', {\n                    name: username,\n                    user_data: user_value\n                  });\n\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, [[4, 9]], Promise);\n        }).catch(function (err) {\n          if (!err.message) {\n            setButtonLoader(false);\n            toast.show(err);\n          } else {\n            if (err.code === 'UserNotConfirmedException') {\n              setButtonLoader(false);\n              navigation.navigate('EnterCode', {\n                username: username,\n                password: password,\n                screen: 'otp-verification'\n              });\n            }\n\n            if (err.message) {\n              setButtonLoader(false);\n              toast.show(err.message, {\n                type: \"danger\",\n                dangerColor: '#FF737F',\n                duration: 4000,\n                animationType: \"slide-in\"\n              });\n            }\n          }\n        });\n      } else {\n        setPassword_error('Password Required');\n      }\n    } else {\n      setUsername_error('User Name Required');\n    }\n  }\n\n  function handleInput(text, fieldType) {\n    if (fieldType === \"name\") {\n      setUsername(text);\n      setUsername_error('');\n    } else if (fieldType === \"password\") {\n      setPassword(text);\n      setPassword_error('');\n    }\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.containerDiv\n  }, React.createElement(View, {\n    style: styles.loginWrap\n  }, React.createElement(View, {\n    style: {\n      width: 80\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50\n    },\n    source: require(\"../../assets/icons/backBtn.png\")\n  }))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, null, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Welcome Back!\"))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm\n  }, React.createElement(TextInput, {\n    theme: {\n      roundness: 16\n    },\n    underlineColorAndroid: \"transparent\",\n    outlineColor: username_error ? \"#B00020\" : \"transparent\",\n    activeOutlineColor: username_error ? \"#B00020\" : \"#30C0E9\",\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return handleInput(text, 'name');\n    },\n    label: \"Username\",\n    autoComplete: 'pass',\n    mode: \"outlined\",\n    error: false,\n    accessibilityLabel: \"username\"\n  }), React.createElement(Text, {\n    style: styles.err_txt\n  }, username_error)), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm\n  }, React.createElement(TextInput, {\n    theme: {\n      roundness: 16\n    },\n    underlineColorAndroid: \"transparent\",\n    outlineColor: password_error ? \"#B00020\" : \"transparent\",\n    activeOutlineColor: password_error ? \"#B00020\" : \"#30C0E9\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return handleInput(text, 'password');\n    },\n    label: \"Password\",\n    secureTextEntry: showPassword ? true : false,\n    autoComplete: 'pass',\n    mode: \"outlined\",\n    error: false,\n    right: React.createElement(TextInput.Icon, {\n      onPress: function onPress() {\n        setShowPassword(!showPassword);\n      },\n      name: \"eye\"\n    }),\n    accessibilityLabel: \"password\"\n  }), React.createElement(Text, {\n    style: styles.err_txt\n  }, password_error)), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: [styles.loginForm]\n  }, buttonLoader ? React.createElement(TouchableOpacity, {\n    disabled: true,\n    onPress: function onPress() {}\n  }, React.createElement(ActivityIndicator, {\n    style: styles.btnStyle,\n    size: \"small\",\n    color: \"#fff\"\n  })) : React.createElement(TouchableOpacity, {\n    onPress: userSignin\n  }, React.createElement(Text, {\n    style: styles.btnStyle,\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"login\"\n  }, \"Log in\"))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: styles.loginVerticalPart\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPass');\n    }\n  }, React.createElement(Text, {\n    style: styles.subText\n  }, \"Forgot Password\"))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 7\n    }\n  }), React.createElement(View, {\n    style: styles.loginVerticalPart\n  }, React.createElement(View, {\n    style: styles.loginVerticalPart\n  }, React.createElement(Text, {\n    style: styles.loginTitle\n  }, \"Don't have an account?\\xA0\", React.createElement(Text, {\n    onPress: onPress,\n    style: styles.login_btnStyle,\n    accessibilityLabel: \"signup\",\n    accessibilityRole: \"button\"\n  }, \"Sign Up\"))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/screens/authScreens/LoginScreen.tsx"],"names":["styles","React","useState","Text","TextInput","useToast","AsyncStorage","useDispatch","Auth","Login","navigation","username","setUsername","password","setPassword","showPassword","setShowPassword","buttonLoader","setButtonLoader","username_error","setUsername_error","password_error","setPassword_error","dispatch","toast","onPress","navigate","userSignin","user","signIn","then","user_value","attributes","fetch","sub","method","headers","response","json","responseJson","length","console","log","setItem","JSON","stringify","catch","error","alert","show","type","successColor","duration","animationType","name","user_data","err","message","code","screen","dangerColor","handleInput","text","fieldType","containerDiv","loginWrap","width","goBack","height","require","display","alignItems","flex","title","loginForm","roundness","err_txt","btnStyle","loginVerticalPart","subText","loginTitle","login_btnStyle"],"mappings":"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","sourcesContent":["import { styles } from './styles.js';\nimport { Image, View, TouchableOpacity, KeyboardAvoidingView, ActivityIndicator } from 'react-native';\nimport { NavigationProp } from '@react-navigation/native';\nimport React, { useState, } from 'react';\nimport { Text } from '../../components/Themed';\nimport { TextInput } from 'react-native-paper';\nimport { useToast } from \"react-native-toast-notifications\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useDispatch } from 'react-redux';\nimport Auth from '@aws-amplify/auth';\n\nconst Login = ({ navigation }: { navigation: NavigationProp<any>, route: any }) => {\n\tconst [username, setUsername] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [showPassword, setShowPassword] = useState(true);\n\tconst [buttonLoader, setButtonLoader] = useState(false);\n\tconst [username_error, setUsername_error] = useState('');\n\tconst [password_error, setPassword_error] = useState('');\n\tconst dispatch = useDispatch()\n\tconst toast = useToast();\n\tconst onPress = () => {\n\t\tnavigation.navigate('Register')\n\t}\n\n\tfunction userSignin() {\n\t\tif (username) {\n\t\t\tif (password) {\n\t\t\t\tsetButtonLoader(true);\n\t\t\t\tconst user = Auth.signIn(username, password)\n\t\t\t\t\t.then(async (user) => {\n\t\t\t\t\t\tsetButtonLoader(false);\n\t\t\t\t\t\tlet user_value = user.attributes;\n\n\t\t\t\t\t\tfetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user/socialId/' + user_value.sub,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmethod: 'get',\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'Content-Type': \"application/json\",\n\t\t\t\t\t\t\t\t\t'password': 'passwordAUA'\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t\t.then(async (responseJson) => {\n\t\t\t\t\t\t\t\tif (responseJson.length !== 0) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"UserID\", responseJson);\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tawait AsyncStorage.setItem('user_data', JSON.stringify(responseJson));\n\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\t// Error saving data\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\t\talert('error')\n\t\t\t\t\t\t\t})\n\n\n\n\t\t\t\t\t\ttoast.show('Login success. You are now signed in.', {\n\t\t\t\t\t\t\ttype: \"success\",\n\t\t\t\t\t\t\tsuccessColor: \"#7BC67E\",\n\t\t\t\t\t\t\tduration: 4000,\n\t\t\t\t\t\t\tanimationType: \"slide-in\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait AsyncStorage.setItem('user', JSON.stringify(user_value));\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t// Error saving data\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// AsyncStorage.setItem('user', JSON.stringify(user_value));\n\t\t\t\t\t\tnavigation.navigate('Root', { name: username, user_data: user_value });\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tif (!err.message) {\n\t\t\t\t\t\t\tsetButtonLoader(false);\n\t\t\t\t\t\t\ttoast.show(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (err.code === 'UserNotConfirmedException') {\n\t\t\t\t\t\t\t\tsetButtonLoader(false);\n\t\t\t\t\t\t\t\t// toast.show('User Not Confirmed');\n\t\t\t\t\t\t\t\tnavigation.navigate('EnterCode', { username, password, screen: 'otp-verification' });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (err.message) {\n\t\t\t\t\t\t\t\tsetButtonLoader(false)\n\t\t\t\t\t\t\t\ttoast.show(err.message, {\n\t\t\t\t\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\t\t\t\t\tdangerColor: '#FF737F',\n\t\t\t\t\t\t\t\t\tduration: 4000,\n\t\t\t\t\t\t\t\t\tanimationType: \"slide-in\",\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// if (Platform.OS == 'android') ToastAndroid.showWithGravity(err.message, ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetPassword_error('Password Required');\n\t\t\t}\n\t\t} else {\n\t\t\tsetUsername_error('User Name Required');\n\t\t}\n\t}\n\n\tfunction handleInput(text: string, fieldType: string) {\n\t\tif (fieldType === \"name\") {\n\t\t\tsetUsername(text)\n\t\t\tsetUsername_error('')\n\t\t} else if (fieldType === \"password\") {\n\t\t\tsetPassword(text)\n\t\t\tsetPassword_error('')\n\t\t}\n\t}\n\n\treturn (\n\t\t// <ScrollView>\n\t\t<KeyboardAvoidingView style={styles.containerDiv}>\n\t\t\t<View style={styles.loginWrap}>\n\t\t\t\t{/*  */}\n\t\t\t\t<View style={{ width: 80 }}>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => navigation.goBack()} >\n\t\t\t\t\t\t<Image style={{ width: 50, height: 50 }} source={require('../../assets/icons/backBtn.png')} />\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n\t\t\t\t<View>\n\t\t\t\t\t<View style={{ alignItems: 'center' }}>\n\t\t\t\t\t\t<Text style={styles.title}>Welcome Back!</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n\t\t\t\t\t<View style={styles.loginForm}>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\t\troundness: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\t\t\toutlineColor={username_error ? \"#B00020\" : \"transparent\"}\n\t\t\t\t\t\t\tactiveOutlineColor={username_error ? \"#B00020\" : \"#30C0E9\"}\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChangeText={(text: string) => handleInput(text, 'name')}\n\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\tautoComplete={'pass'}\n\t\t\t\t\t\t\tmode=\"outlined\"\n\t\t\t\t\t\t\terror={false}\n\t\t\t\t\t\t\taccessibilityLabel='username'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={styles.err_txt}>{username_error}</Text>\n\t\t\t\t\t\t{/* <HelperText type=\"error\" visible={!!username_error}>{username_error}</HelperText> */}\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n\t\t\t\t\t<View style={styles.loginForm}>\n\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\ttheme={{\n\t\t\t\t\t\t\t\troundness: 16,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tunderlineColorAndroid=\"transparent\"\n\t\t\t\t\t\t\toutlineColor={password_error ? \"#B00020\" : \"transparent\"}\n\t\t\t\t\t\t\tactiveOutlineColor={password_error ? \"#B00020\" : \"#30C0E9\"}\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChangeText={(text: string) => handleInput(text, 'password')}\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tsecureTextEntry={showPassword ? true : false}\n\t\t\t\t\t\t\tautoComplete={'pass'}\n\t\t\t\t\t\t\tmode=\"outlined\"\n\t\t\t\t\t\t\terror={false}\n\t\t\t\t\t\t\tright={<TextInput.Icon onPress={() => { setShowPassword(!showPassword) }} name=\"eye\" />}\n\t\t\t\t\t\t\taccessibilityLabel='password'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={styles.err_txt}>{password_error}</Text>\n\t\t\t\t\t\t{/* <HelperText type=\"error\" visible={password_error}>{password_error}</HelperText> */}\n\t\t\t\t\t</View>\n\t\t\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n\t\t\t\t\t<View style={[styles.loginForm]}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbuttonLoader\n\t\t\t\t\t\t\t\t? <TouchableOpacity\n\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\tonPress={() => { }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ActivityIndicator style={styles.btnStyle} size=\"small\" color=\"#fff\" />\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t\t\t: <TouchableOpacity\n\t\t\t\t\t\t\t\t\tonPress={userSignin}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style={styles.btnStyle} accessibilityRole='button' accessibilityLabel='login'>Log in</Text>\n\t\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t}\n\t\t\t\t\t</View>\n\t\t\t\t\n\t\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n\t\t\t\t<View style={styles.loginVerticalPart}>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => navigation.navigate('ForgotPass')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={styles.subText} >Forgot Password</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t\t<View style={{ display: 'flex', alignItems: 'center', flex: 7 }}></View>\n\t\t\t\t<View style={styles.loginVerticalPart}>\n\t\t\t\t\t<View style={styles.loginVerticalPart}>\n\t\t\t\t\t\t<Text style={styles.loginTitle}>Don't have an account?&nbsp;\n\t\t\t\t\t\t\t<Text onPress={onPress} style={styles.login_btnStyle} accessibilityLabel='signup' accessibilityRole='button'>Sign Up</Text>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t{/*  */}\n\t\t\t</View>\n\t\t</KeyboardAvoidingView>\n\t);\n};\nexport default Login\n"]},"metadata":{},"sourceType":"module"}