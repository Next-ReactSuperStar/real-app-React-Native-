{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { styles } from \"./styles.js\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { TextInput } from 'react-native-paper';\nimport { CheckBox } from 'react-native-elements';\nimport React, { useState } from 'react';\nimport { useToast } from \"react-native-toast-notifications\";\nimport { Text } from \"../../components/Themed\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Auth from '@aws-amplify/auth';\nimport { RegisterMsgErr } from \"../../constants/Msgtxt\";\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showPassword = _useState10[0],\n      setShowPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      buttonLoader = _useState12[0],\n      setButtonLoader = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email_error = _useState14[0],\n      setEmail_error = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      username_error = _useState16[0],\n      setUsername_error = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      password_error = _useState18[0],\n      setPassword_error = _useState18[1];\n\n  var toast = useToast();\n\n  var onSignup = function onSignup() {\n    if (username) {\n      if (email) {\n        if (password) {\n          if (checked) {\n            setButtonLoader(true);\n            var user = Auth.signUp({\n              username: username,\n              password: password,\n              attributes: {\n                email: email,\n                name: username\n              },\n              validationData: []\n            }).then(function _callee2(data) {\n              var user_data;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      setButtonLoader(false);\n                      user_data = data.userSub;\n                      _context2.prev = 2;\n                      _context2.next = 5;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('socialID', JSON.stringify(user_data)));\n\n                    case 5:\n                      _context2.next = 9;\n                      break;\n\n                    case 7:\n                      _context2.prev = 7;\n                      _context2.t0 = _context2[\"catch\"](2);\n\n                    case 9:\n                      console.log(\"social_data\", user_data);\n                      fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user', {\n                        method: 'post',\n                        headers: {\n                          'Content-Type': \"application/json\",\n                          'password': 'passwordAUA'\n                        },\n                        body: JSON.stringify({\n                          \"socialId\": user_data,\n                          \"email\": email\n                        })\n                      }).then(function (response) {\n                        return response.json();\n                      }).then(function _callee(responseJson) {\n                        return _regeneratorRuntime.async(function _callee$(_context) {\n                          while (1) {\n                            switch (_context.prev = _context.next) {\n                              case 0:\n                                if (!(responseJson.length !== 0)) {\n                                  _context.next = 9;\n                                  break;\n                                }\n\n                                console.log(\"category data\", responseJson);\n                                _context.prev = 2;\n                                _context.next = 5;\n                                return _regeneratorRuntime.awrap(AsyncStorage.setItem('user_data', JSON.stringify(responseJson)));\n\n                              case 5:\n                                _context.next = 9;\n                                break;\n\n                              case 7:\n                                _context.prev = 7;\n                                _context.t0 = _context[\"catch\"](2);\n\n                              case 9:\n                              case \"end\":\n                                return _context.stop();\n                            }\n                          }\n                        }, null, null, [[2, 7]], Promise);\n                      }).catch(function (error) {\n                        alert('error');\n                      });\n                      toast.show(\"Sign up success. You are now signed up.\", {\n                        type: \"success\",\n                        successColor: '#7BC67E',\n                        duration: 4000,\n                        animationType: \"slide-in\"\n                      });\n                      navigation.navigate('EnterCode', {\n                        username: username,\n                        password: password,\n                        screen: 'otp-verification'\n                      });\n\n                    case 13:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, [[2, 7]], Promise);\n            }).catch(function (err) {\n              setButtonLoader(false);\n\n              if (err.message && err.message == 'User already exists') {\n                toast.show(RegisterMsgErr.userErr, {\n                  type: \"danger\",\n                  dangerColor: '#FF737F',\n                  duration: 5000,\n                  animationType: \"slide-in\"\n                });\n              } else if (err.message && err.message != 'User already exists') {\n                toast.show(RegisterMsgErr.passwordErr, {\n                  type: \"danger\",\n                  dangerColor: '#FF737F',\n                  duration: 5000,\n                  animationType: \"slide-in\"\n                });\n              }\n            });\n          }\n        } else {\n          setPassword_error('Password Required !');\n        }\n      } else {\n        setEmail_error('Email Required !');\n      }\n    } else {\n      setUsername_error('User Name Required !');\n    }\n  };\n\n  function handleInput(text, fieldType) {\n    if (fieldType === \"name\") {\n      setUsername(text);\n      setUsername_error('');\n    } else if (fieldType === \"email\") {\n      setEmail(text);\n      setEmail_error('');\n    } else if (fieldType === \"password\") {\n      setPassword(text);\n      setPassword_error('');\n    }\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.containerDiv,\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\"\n  }, React.createElement(View, {\n    style: styles.loginWrap\n  }, React.createElement(View, {\n    style: {\n      width: 80\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 50,\n      height: 50,\n      marginLeft: '5%'\n    },\n    source: require(\"../../assets/icons/backBtn.png\")\n  }))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: {\n      paddingLeft: '5%'\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Create your account\"))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm\n  }, React.createElement(TextInput, {\n    theme: {\n      roundness: 16\n    },\n    underlineColorAndroid: \"transparent\",\n    outlineColor: username_error ? \"#B00020\" : \"transparent\",\n    activeOutlineColor: username_error ? \"#B00020\" : \"#30C0E9\",\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return handleInput(text, 'name');\n    },\n    label: \"Username\",\n    autoComplete: 'pass',\n    mode: \"outlined\",\n    error: false,\n    accessibilityLabel: \"username\"\n  }), username_error != '' && React.createElement(Text, {\n    style: styles.err_txt\n  }, username_error)), username_error == '' && React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 20\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm\n  }, React.createElement(TextInput, {\n    theme: {\n      roundness: 16\n    },\n    underlineColorAndroid: \"transparent\",\n    outlineColor: email_error ? \"#B00020\" : \"transparent\",\n    activeOutlineColor: email_error ? \"#B00020\" : \"#30C0E9\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return handleInput(text, 'email');\n    },\n    label: \"UserEmail\",\n    autoComplete: 'pass',\n    mode: \"outlined\",\n    error: false,\n    accessibilityLabel: \"email\"\n  }), email_error != '' && React.createElement(Text, {\n    style: styles.err_txt\n  }, email_error)), email_error == '' && React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 20\n    }\n  }), React.createElement(View, {\n    style: styles.loginForm\n  }, React.createElement(TextInput, {\n    theme: {\n      roundness: 16\n    },\n    underlineColorAndroid: \"transparent\",\n    outlineColor: password_error ? \"#B00020\" : \"transparent\",\n    activeOutlineColor: password_error ? \"#B00020\" : \"#30C0E9\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return handleInput(text, 'password');\n    },\n    label: \"Password\",\n    secureTextEntry: showPassword ? true : false,\n    autoComplete: 'pass',\n    mode: \"outlined\",\n    error: false,\n    right: React.createElement(TextInput.Icon, {\n      onPress: function onPress() {\n        setShowPassword(!showPassword);\n      },\n      name: \"eye\"\n    }),\n    accessibilityLabel: \"password\"\n  }), password_error != '' && React.createElement(Text, {\n    style: styles.err_txt\n  }, password_error)), password_error == '' && React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 1,\n      maxHeight: 20\n    }\n  }), React.createElement(CheckBox, {\n    title: \"I have read the Privace Policy\",\n    containerStyle: {\n      backgroundColor: 'transparent'\n    },\n    checked: checked,\n    style: {\n      flex: 1\n    },\n    onPress: function onPress() {\n      setChecked(!checked);\n    },\n    accessibilityLabel: \"privacy-policy\"\n  }), React.createElement(View, {\n    style: {\n      padding: '7%',\n      width: '100%',\n      justifyContent: 'center'\n    }\n  }, buttonLoader ? React.createElement(TouchableOpacity, {\n    disabled: true,\n    onPress: function onPress() {}\n  }, React.createElement(ActivityIndicator, {\n    style: styles.btnStyle,\n    size: \"small\",\n    color: \"#fff\"\n  })) : React.createElement(TouchableOpacity, {\n    onPress: onSignup,\n    disabled: checked ? false : true\n  }, React.createElement(Text, {\n    style: styles.btnStyle,\n    accessibilityLabel: \"signup\",\n    accessibilityRole: \"button\"\n  }, \"GET STARTED\"))), React.createElement(View, {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flex: 2\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Tasks/Freelancer/Danil/ReactNative/mine/pearl/map/screens/authScreens/RegisterScreen.tsx"],"names":["styles","TextInput","CheckBox","React","useState","useToast","Text","AsyncStorage","Auth","RegisterMsgErr","Register","navigation","checked","setChecked","email","setEmail","password","setPassword","username","setUsername","showPassword","setShowPassword","buttonLoader","setButtonLoader","email_error","setEmail_error","username_error","setUsername_error","password_error","setPassword_error","toast","onSignup","user","signUp","attributes","name","validationData","then","data","user_data","userSub","setItem","JSON","stringify","console","log","fetch","method","headers","body","response","json","responseJson","length","catch","error","alert","show","type","successColor","duration","animationType","navigate","screen","err","message","userErr","dangerColor","passwordErr","handleInput","text","fieldType","containerDiv","Platform","OS","loginWrap","width","goBack","height","marginLeft","require","display","alignItems","flex","paddingLeft","title","loginForm","roundness","err_txt","maxHeight","backgroundColor","padding","justifyContent","btnStyle"],"mappings":"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","sourcesContent":["import { styles } from './styles.js';\nimport { Image, View, ScrollView, TouchableOpacity, ToastAndroid, KeyboardAvoidingView, ActivityIndicator, Platform } from 'react-native';\nimport { NavigationProp } from '@react-navigation/native';\nimport { TextInput, HelperText } from 'react-native-paper';\nimport { CheckBox } from 'react-native-elements'\nimport React, { useState } from 'react';\nimport { useToast } from \"react-native-toast-notifications\";\nimport { Text } from '../../components/Themed';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Auth from '@aws-amplify/auth';\nimport { RegisterMsgErr } from '../../constants/Msgtxt'\n\nconst Register = ({ navigation }: { navigation: NavigationProp<any>, route: any }) => {\n  const [checked, setChecked] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [showPassword, setShowPassword] = useState(true);\n  const [buttonLoader, setButtonLoader] = useState(false);\n  const [email_error, setEmail_error] = useState('');\n  const [username_error, setUsername_error] = useState('');\n  const [password_error, setPassword_error] = useState('');\n  const toast = useToast();\n\n  // const fetchData = () => {\n  //   fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/question/getCategories',\n  //     {\n  //       method: 'get',\n  //       headers: {\n  //         'Content-Type': \"application/json\",\n  //         'password': 'passwordAUA'\n  //       },\n  //     })\n  //     .then((response) => response.json())\n  //     .then((responseJson) => {\n  //       if (responseJson.length !== 0) {\n  //         // setCategory(responseJson);\n  //         console.log(\"category data\", responseJson);\n  //       }\n  //     }).catch((error) => {\n  //       alert('error')\n  //     })\n  // }\n\n  const onSignup = () => {\n    if (username) {\n      if (email) {\n        if (password) {\n          if (checked) {\n            setButtonLoader(true);\n            const user = Auth.signUp({\n              username,\n              password,\n              attributes: {\n                email,\n                name: username,\n              },\n              validationData: [],\n            })\n              .then(async (data) => {\n                setButtonLoader(false);\n                let user_data: string = data.userSub;\n                try {\n                  await AsyncStorage.setItem('socialID', JSON.stringify(user_data));\n                } catch (error) {\n                  // Error saving data\n                }\n                console.log(\"social_data\", user_data);\n                fetch('http://ec2-3-144-42-178.us-east-2.compute.amazonaws.com:5000/api/user',\n                  {\n                    method: 'post',\n                    headers: {\n                      'Content-Type': \"application/json\",\n                      'password': 'passwordAUA'\n                    },\n                    body: JSON.stringify({\n                      \"socialId\": user_data,\n                      \"email\": email\n                    })\n\n                  })\n                  .then((response) => response.json())\n                  .then(async (responseJson) => {\n                    if (responseJson.length !== 0) {\n                      // setCategory(responseJson);\n                      console.log(\"category data\", responseJson);\n                      try {\n                        await AsyncStorage.setItem('user_data', JSON.stringify(responseJson));\n                      } catch (error) {\n                        // Error saving data\n                      }\n                    }\n                  }).catch((error) => {\n                    alert('error')\n                  })\n\n                toast.show(\"Sign up success. You are now signed up.\", {\n                  type: \"success\",\n                  successColor: '#7BC67E',\n                  duration: 4000,\n                  animationType: \"slide-in\",\n                });\n                navigation.navigate('EnterCode', { username, password, screen: 'otp-verification' });\n              })\n              .catch((err) => {\n                setButtonLoader(false)\n                if (err.message && err.message == 'User already exists') {\n                  toast.show(RegisterMsgErr.userErr, {\n                    type: \"danger\",\n                    dangerColor: '#FF737F',\n                    duration: 5000,\n                    animationType: \"slide-in\",\n                  });\n                } else if (err.message && err.message != 'User already exists') {\n                  toast.show(RegisterMsgErr.passwordErr, {\n                    type: \"danger\",\n                    dangerColor: '#FF737F',\n                    duration: 5000,\n                    animationType: \"slide-in\",\n                  });\n                }\n              });\n          }\n        } else {\n          setPassword_error('Password Required !')\n        }\n      } else {\n        setEmail_error('Email Required !')\n      }\n    } else {\n      setUsername_error('User Name Required !')\n    }\n  }\n\n  function handleInput(text: string, fieldType: string) {\n    if (fieldType === \"name\") {\n      setUsername(text)\n      setUsername_error('')\n    } else if (fieldType === \"email\") {\n      setEmail(text)\n      setEmail_error('')\n    } else if (fieldType === \"password\") {\n      setPassword(text)\n      setPassword_error('')\n    }\n  }\n\n  return (\n    // <ScrollView>\n    <KeyboardAvoidingView style={styles.containerDiv} behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n      <View style={styles.loginWrap}>\n        <View style={{ width: 80 }}>\n          <TouchableOpacity\n            onPress={() => navigation.goBack()} >\n            <Image style={{ width: 50, height: 50, marginLeft: '5%' }} source={require('../../assets/icons/backBtn.png')} />\n          </TouchableOpacity>\n        </View>\n        <View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n        <View style={{ paddingLeft: '5%' }}>\n          <View style={{ alignItems: 'center' }}>\n            <Text style={styles.title}>Create your account</Text>\n          </View>\n        </View>\n        <View style={{ display: 'flex', alignItems: 'center', flex: 1 }}></View>\n        {/* <View>\n\n      </View> */}\n        <View style={styles.loginForm}>\n          <TextInput\n            theme={{\n              roundness: 16,\n            }}\n            underlineColorAndroid=\"transparent\"\n            outlineColor={username_error ? \"#B00020\" : \"transparent\"}\n            activeOutlineColor={username_error ? \"#B00020\" : \"#30C0E9\"}\n            value={username}\n            onChangeText={(text: string) => handleInput(text, 'name')}\n            label=\"Username\"\n            autoComplete={'pass'}\n            mode=\"outlined\"\n            error={false}\n            accessibilityLabel='username'\n          />\n          {username_error != '' && <Text style={styles.err_txt}>{username_error}</Text>}\n          {/* <HelperText type=\"error\" visible={username_error}>{username_error}</HelperText> */}\n        </View>\n        {username_error == '' && <View style={{ display: 'flex', alignItems: 'center', flex: 1, maxHeight: 20 }}></View>}\n        <View style={styles.loginForm}>\n          <TextInput\n            theme={{\n              roundness: 16,\n            }}\n            underlineColorAndroid=\"transparent\"\n            outlineColor={email_error ? \"#B00020\" : \"transparent\"}\n            activeOutlineColor={email_error ? \"#B00020\" : \"#30C0E9\"}\n            value={email}\n            onChangeText={(text: string) => handleInput(text, 'email')}\n            label=\"UserEmail\"\n            autoComplete={'pass'}\n            mode=\"outlined\"\n            error={false}\n            accessibilityLabel='email'\n          />\n          {email_error != '' && <Text style={styles.err_txt}>{email_error}</Text>}\n          {/* <HelperText type=\"error\" visible={email_error}>{email_error}</HelperText> */}\n        </View>\n        {email_error == '' && <View style={{ display: 'flex', alignItems: 'center', flex: 1, maxHeight: 20 }}></View>}\n        <View style={styles.loginForm}>\n          <TextInput\n            theme={{\n              roundness: 16,\n            }}\n            underlineColorAndroid=\"transparent\"\n            outlineColor={password_error ? \"#B00020\" : \"transparent\"}\n            activeOutlineColor={password_error ? \"#B00020\" : \"#30C0E9\"}\n            value={password}\n            onChangeText={(text: string) => handleInput(text, 'password')}\n            label=\"Password\"\n            secureTextEntry={showPassword ? true : false}\n            autoComplete={'pass'}\n            mode=\"outlined\"\n            error={false}\n            right={<TextInput.Icon onPress={() => { setShowPassword(!showPassword) }} name=\"eye\" />}\n            accessibilityLabel='password'\n          />\n          {password_error != '' && <Text style={styles.err_txt}>{password_error}</Text>}\n          {/* <HelperText type=\"error\" visible={password_error}>{password_error}</HelperText> */}\n        </View>\n        {password_error == '' && <View style={{ display: 'flex', alignItems: 'center', flex: 1, maxHeight: 20 }}></View>}\n        <CheckBox\n          title='I have read the Privace Policy'\n          containerStyle={{ backgroundColor: 'transparent' }}\n          checked={checked}\n          style={{ flex: 1 }}\n          onPress={() => {\n            setChecked(!checked);\n          }}\n          accessibilityLabel='privacy-policy'\n        />\n        <View style={{ padding: '7%', width: '100%', justifyContent: 'center' }}>\n          {\n            buttonLoader\n              ? <TouchableOpacity\n                disabled\n                onPress={() => { }}\n              >\n                <ActivityIndicator style={styles.btnStyle} size=\"small\" color=\"#fff\" />\n              </TouchableOpacity>\n              : <TouchableOpacity\n                onPress={onSignup}\n                disabled={checked ? false : true}\n              >\n                <Text style={styles.btnStyle} accessibilityLabel='signup' accessibilityRole='button'>GET STARTED</Text>\n              </TouchableOpacity>\n          }\n        </View>\n        <View style={{ display: 'flex', alignItems: 'center', flex: 2 }}></View>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}